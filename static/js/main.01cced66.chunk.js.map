{"version":3,"sources":["utils/utils-react.js","utils/utils-generic.js","utils/utils-regexp.js","utils/utils-nmr.js","utils/utils-rotation.js","utils/utils-events.js","core/store/utils.js","core/store/listeners/colors.js","core/store/listeners/ellipsoids.js","core/store/listeners/labels.js","core/store/listeners/links.js","core/store/listeners/euler.js","core/store/listeners/events.js","core/store/listeners/index.js","core/store/listeners/display.js","core/store/listeners/views.js","core/store/listeners/cell.js","core/store/listeners/cscales.js","core/store/listeners/plots.js","core/store/interfaces/SelInterface.js","core/store/interfaces/CScaleInterface.js","core/store/interfaces/MSInterface.js","core/store/interfaces/EFGInterface.js","core/store/interfaces/DipInterface.js","core/store/interfaces/JCoupInterface.js","core/store/interfaces/EulerInterface.js","core/store/interfaces/AppInterface.js","core/store/interfaces/PlotsInterface.js","core/store/interfaces/FilesInterface.js","core/store/store.js","core/store/index.js","icons/logo.svg","controls/MVCustomSelect.js","icons/ms.svg","icons/efg.svg","icons/dip.svg","icons/jcoup.svg","icons/euler.svg","icons/MVIcon.js","core/MagresViewHeader.js","core/MagresViewScreenshot.js","core/sidebars/MagresViewSidebar.js","controls/MVFile.js","controls/MVBox.js","controls/MVCheckBox.js","controls/MVListSelect.js","controls/MVTooltip.js","core/sidebars/tooltip_messages.js","core/sidebars/MVSidebarLoad.js","controls/MVButton.js","controls/MVRadioButton.js","controls/MVText.js","core/sidebars/MVSidebarSelect.js","controls/MVRange.js","controls/MVModal.js","controls/MVCScaleBar.js","core/sidebars/MVSidebarMS.js","core/sidebars/MVSidebarEFG.js","core/sidebars/MVSidebarDip.js","core/sidebars/MVSidebarJCoup.js","controls/MVSwitch.js","core/sidebars/MVSidebarEuler.js","core/sidebars/MVSidebarPlots.js","core/sidebars/MVSidebarFiles.js","core/plot/ImageLayer.js","core/plot/MVPlot1D.js","core/MagresViewApp.js","reportWebVitals.js","index.js"],"names":["chainClasses","_","join","flatten","arguments","useId","prefix","length","undefined","_useState","useState","uniqueId","_useState2","_slicedToArray","id","CallbackMerger","n","callback","_classCallCheck","this","_callback","_n","_arg","_createClass","key","value","arg","Error","merge","Enum","_this","values","Array","isArray","fromPairs","map","x","i","_loop","v","Object","defineProperty","get","tableRow","width","precision","reduce","s","Number","isFinite","isInteger","toFixed","toString","ns","repeat","saveContents","data","filename","download","document","createElement","setAttribute","click","regularExpressions","Map","float","RegExp","int","alpha","alphanumeric","dipolarCoupling","a1","a2","g1","isotopeData","gamma","g2","r1","xyz","r","R","Math","sqrt","rnorm","PI","pow","jCoupling","T","getArrayValue","index","e","iscAtomicToHz","isotropy","rotationBetween","axes1","axes2","mjs","eulerFromRotation","a","convention","cosb","min","max","c","b","acos","abs","atan2","eulerBetweenTensors","T1","T2","ax1","haeberlen_eigenvectors","ax2","ClickHandler","app","codes","_callbacks","handler","forEach","code","onAtomClick","atom","event","cbacks","name","cback","makeSelector","extras","selector","state","ans","startsWith","indexOf","addPrefix","p","getSel","sel","selected","displayed","getNMRData","view","datatype","tenstype","reftable","units","tens_units","ms","efg","tensors","anisotropy","reduced_anisotropy","asymmetry","span","skew","el","atoms","element","haeberlen_eigenvalues","iD","efgAtomicToHz","Q","formatNumber","unit","BaseInterface","dispatcher","_state","_dispatcher","action","DataCheckInterface","_BaseInterface","_inherits","_super","_createSuper","apply","app_viewer","model","hasArray","msColor","efgColor","makeEllipsoidListener","color","pre_view","pre_on","pre_scale","_ref","current_view","next_view","on","scale","removeEllipsoids","avg","t","sum","eigenvalues","addEllipsoids","scalingFactor","opacity","_defineProperty","msEllipsoidListener","efgEllipsoidListener","makeLabelListener","shiftfunc","pre_references","pre_type","label_texts","ref_table","mode","removeLabels","_getNMRData","_getNMRData2","isotope","crystLabel","addLabels","shift","radius","height","selLabelListener","msLabelListener","efgLabelListener","makeCalculateLinksListener","pre_ca","pre_r","pre_homo","linkview","ghostreqs","_objectSpread","sel_ghosts_requests","catom","hn","query","sphere","elements","find","makeDisplayLinksListener","pre_sph","current_link_names","removeGraphics","lname","label","linktype","J","getLinkLabel","addLink","dashed","onOverlay","push","addSphere","showAxes","showCircles","dipCalculateLinksListener","dipDisplayLinksListener","jcCalculateLinksListener","jcDisplayLinksListener","ctable","Events","eventPriority","Set","DISPLAY","SEL_LABELS","CELL","CSCALE","MS_ELLIPSOIDS","MS_LABELS","EFG_ELLIPSOIDS","EFG_LABELS","EUL_ANGLES","PLOTS_RECALC","DIP_RENDER","JC_RENDER","VIEWS","DIP_LINKS","JC_LINKS","getPriorityOfEvent","has","listeners","_listeners","toDisplay","app_model_queued","displayModel","app_default_displayed","sel_selected_view","displ","sel_displayed_view","all","hide","show","setProperty","box","visible","sel_show_cell","axes","cscale_view","current_greyed","cscale_displ","next_greyed","cstype","cscale_type","cmap","cscale_cmap","_cstype$match","match","_cstype$match2","xor","nmrdata","minv","maxv","cs","shades","colors","colormap","nshades","format","ColorScale","getColorScale","getColor","toHexString","cscale_lims","cscale_units","a1A","eul_atom_A","a1B","eul_atom_B","a2A","eul_newatom_A","a2B","eul_newatom_B","tA","eul_tensor_A","tB","eul_tensor_B","conv","eul_convention","nmrA","nmrB","removeLabel","addLabel","results","eul_results","minx","parseFloat","plots_min_x","maxx","plots_max_x","miny","plots_min_y","maxy","plots_max_y","ms_references","nmr_mode","plots_use_refs","noplot","isNaN","plots_mode","plots_data","xaxis","yaxis","w","plots_peak_width","parseInt","plots_x_steps","peaks","labels","rangepeaks","filter","rangelabels","sorted","zip","sort","sortedpeaks","sortedlabels","range","x0","lorentzian","y","makeMasterListener","store","getState","toUpdate","listen_update","maxPriority","P","d","console","warn","nextToUpdate","_toConsumableArray","dispatch","type","LC","CrystVis","LEFT_CLICK","SLC","SHIFT_BUTTON","CLC","CTRL_BUTTON","initialSelState","sel_on","sel_mode","sel_sphere_r","sel_bond_n","sel_hlight","sel_sites_view","sel_sites_labels_type","SelInterface","set","highlightSelected","setSelection","selectionMode","eData","elementData","keys","isotopes","A","iso","is_nmr_active","spin","is_Q_active","is_max_nmr","maxiso_NMR","is_max_Q","maxiso_Q","abundance","options","default_options","selectionSphereR","selectionBondN","selectionOn","selFunc","imgIndex","found","_queryElements","_queryLabels","_querySphere","_queryMolecule","_queryBonded","concat","dd","intf","app_click_handler","setCallback","and","or","useSelInterface","useSelector","shallowEqual","useDispatch","initialCScaleState","CScaleInterface","colorScaleType","split","makeCScaleSelector","initialMSState","ms_view","ms_ellipsoids_on","ms_ellipsoids_scale","ms_labels_type","ms_precision","msSetReferences","refs","new_refs","msAction","update","MSInterface","_CScaleInterface","pre","colorScalePrefix","uniq","symbols","function","_get","_getPrototypeOf","prototype","call","updateReferenceTable","labelsMode","hasEllipsoids","ellipsoidScale","useMSInterface","initialEFGState","efg_view","efg_ellipsoids_on","efg_ellipsoids_scale","efg_labels_type","efg_precision","efgAction","EFGInterface","useEFGInterface","initialDipState","dip_view","dip_link_names","dip_links_on","dip_central_atom","dip_radius","dip_sphere_show","dip_homonuclear","dip_precision","DipInterface","isOn","showSphere","homonuclearOnly","useDipInterface","initialJCoupState","jc_view","jc_link_names","jc_links_on","jc_central_atom","jc_radius","jc_sphere_show","jc_homonuclear","jc_precision","JCoupInterface","useJCoupInterface","RC","RIGHT_CLICK","initialEulerState","tensorValues","conventionValues","makeCallback","ending","_data","makeEulerAction","EulerInterface","_DataCheckInterface","_getAtomLabel","_setTensorType","rad","f","_getResult","report","tensorA","atomLabelA","tensorB","atomLabelB","toUpperCase","beta","alphaRad","betaRad","gammaRad","hasMSData","hasEFGData","targ","table","_d","_eulerBetweenTensors","_eulerBetweenTensors2","useEulerInterface","appDisplayModel","m","appReloadModel","appDeleteModel","deleteModel","models","modelList","AppInterface","viewer","initialised","model_name","modelName","app_theme","app_sidebar","app_load_as_mol","app_use_nmr_isos","elem","log","vis","files","cbm","params","supercell","molecularCrystal","loadAsMol","useNMRActiveIsotopes","useNMRIsotopes","parseOne","onLoad","contents","extension","success","loadModels","to_display","display","reader","FileReader","pop","onload","target","result","readAsText","useAppInterface","makePlotAction","PlotsInterface","plots_q2_shifts","plots_show_axes","plots_show_grid","plots_show_labels","xmin","xmax","ymin","ymax","vmin","vmax","axis","svg","querySelector","svgData","XMLSerializer","serializeToString","svgBlob","Blob","svgUrl","URL","createObjectURL","downloadLink","href","body","appendChild","removeChild","csvContent","xlabel","useRefTable","factor","row","encodedUri","encodeURI","link","plots_bkg_img_url","url","plots_bkg_img_w","plots_bkg_img_h","file","Promise","resolve","reject","img","Image","src","decode","then","readAsDataURL","loadImage","naturalWidth","naturalHeight","usePlotsInterface","FilesInterface","files_seltype","mname","hasISCData","spinSysIncludeMS","spinSysIncludeEFG","spinSysIncludeD","spinSysIncludeJ","files_includeD","files_includeJ","files_includeEFG","files_includeMS","files_quadrupole_order","includeD","includeJ","includeEFG","includeMS","quadrupoleOrder","spinSysQuadrupoleOrder","_msMakeTable","_efgMakeTable","_dipMakeTable","_iscMakeTable","_spinsysMakeTable","spinSysOptions","aniso","asymm","euler","Vzz","slice","j","_dipolarCoupling","_dipolarCoupling2","D","nuclei","from","msiso","msaniso","msasymm","q_order","efgasym","efgeuler","cq","_dipolarCoupling3","_dipolarCoupling4","a_deg","b_deg","useFilesInterface","initialState","magresStore","createStore","args","subscribe","MVCustomSelectOption","props","onClick","_jsxs","className","children","icon","_jsx","MVCustomSelect","setShow","o","findIndex","onSelect","useEffect","disabled","style","onMouseLeave","title","FaCaretDown","cloneElement","_excluded","_extends","assign","bind","source","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMs","svgRef","titleId","viewBox","xmlns","ref","transform","fill","strokeWidth","strokeLinecap","strokeLinejoin","paintOrder","_defs","ForwardRef","SvgEfg","fillOpacity","InkscapeStroke","SvgDip","SvgJcoup","SvgEuler","stroke","icons","MSIcon","EFGIcon","dip","DipIcon","jcoup","JcoupIcon","EulerIcon","MVIcon","Icon","ThemeSwitcher","appint","other","dark","light","theme","FaMoon","FaSun","MagresViewHeader","logo","alt","sidebar","FaRegFolderOpen","FaMousePointer","GiHistogram","FaFile","FaBan","MagresViewScreenshot","replace","saveImage","getScreenshotData","FaCamera","MagresViewSidebar","FaAngleDoubleRight","MVFile","notext","accept","filetypes","onChange","multiple","MVBox","status_class","status","onClose","GrFormClose","size","MVCheckBox","onCheck","checked","htmlFor","MVListSelectOption","MVListSelect","MVTooltip","tooltipText","isVisible","setIsVisible","_usePopperTooltip","usePopperTooltip","trigger","closeOnOutsideClick","onVisibleChange","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","_Fragment","BsFillInfoSquareFill","tooltip_molecular_crystal","tooltip_nmr_active","file_formats","MVSidebarLoad","load_message","load_message_status","list_selected","setState","load","msg","err","model_icon","currentModelName","AiFillEye","AiOutlineEyeInvisible","IoMdRefresh","reload","MdDeleteForever","delete","MVButton","MVRadioButton","uid","MVRadioGroup","buttons","labelStyle","MVText","submitted","setSubmitted","waitSubmit","onSubmit","exec","onKeyDown","MVIsotopeSelection","selint","sharedElement","elData","isoConf","selOptions","currentOption","setIsotope","MVSidebarSelect","setR","setN","selRef","useRef","current","showCell","labelMode","MVRange","defaultValue","default","step","toNumber","in_val","text","setText","acceptValue","stateRef","_stateRef$current","onInput","modalReducer","is_drag","y0","dx","dy","MVModal","_useReducer","useReducer","_useReducer2","onAccept","onmousemove","clientX","clientY","onmouseup","modalStyle","hasOverlay","modal","draggable","resizable","onMouseDown","button","IconContext","Provider","IoClose","noFooter","get_colorbar","hidden","color_spec","cscale","cells","ticks","tick_labels","first","middle","last","key_stub","backgroundColor","MVCScaleBar","lims","MVReferenceTable","msint","referenceTable","refTable","setRefTable","intRef","close","MVSidebarMS","_useState3","showRefTable","_useState4","has_ms","hasData","colorScaleAvailable","colorScaleLimits","colorScaleCmap","colorScaleUnits","reset","MVSidebarEFG","efgint","has_efg","MVSidebarDip","dipint","unbind","MVSidebarJCoup","jcint","has_jc","MVSwitch","colorTrue","colorFalse","MVSidebarEuler","eulint","otherTensor","hasSel","atomA","atomB","txtReport","navigator","clipboard","writeText","FaCopy","txtSelfAngleTable","MVSidebarPlots","pltint","showGrid","showLabels","alignItems","rangeX","setRange","rangeY","peakW","xSteps","downloadSVG","downloadData","selectquadorder","fileint","MVSidebarFiles","fileType","GiSpinningTop","fn","generateFile","fileName","fileValid","mH","mR2","ImageLayer","margins","image","indPos","left","bottom","top","right","setMargins","selind","nodeName","brect","getBoundingClientRect","_indPos$i","iPx","iPy","cname","parentElement","baseVal","trim","_indPos$selind","MVPlot1D","bkgImage","layers","without","lineprops","leftaxis","enablePoints","enableArea","legend","legendOffset","legendPosition","pointSymbol","borderColor","borderWidth","pointLabelYOffset","lineWidth","tickValues","getNearestPeak","nearest","idx","renderNearestPeak","bottomaxis","orient","tickSize","tickPadding","tickRotation","Line","isInteractive","useMesh","enableCrosshair","xFormat","yFormat","scheme","markers","overlap_threshold","floatRangeX","last_x","last_label","last_offset","new_labels","offsets","offset","lineStyle","textStyle","fontSize","fontWeight","legendOffsetY","legendOffsetX","legendOrientation","margin","xScale","reverse","yScale","floatRangeY","axisBottom","axisLeft","motionConfig","tooltip","point","background","padding","border","xFormatted","yFormatted","MagresViewPage","hovered","setHovered","appRef","initialise","onDragEnter","preventDefault","stopPropagation","onDragLeave","onDragOver","onDrop","dataTransfer","clearData","MagresViewApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01cced66.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { useState } from 'react';\n\n/**\n * Chain multiple class strings into a single string, useful when passing them\n * to React components' className property\n *\n * @param {String} name1, name2...    Name of the first class, second class, etc.\n * \n * @return {String}                   Chained class names\n */\nfunction chainClasses() {\n    return _.join(_.flatten(arguments), ' ');\n}\n\n/**\n * Generate a memoized unique ID for an element\n * \n * @param  {String} prefix Prefix of the id\n * \n * @return {String}        Unique ID\n */\nfunction useId(prefix='uid') {\n    const [id] = useState(() => (_.uniqueId(prefix)));\n    return id;\n}\n\nexport { chainClasses, useId };","import _ from 'lodash';\nimport colormap from 'colormap';\nimport ColorScale from 'color-scales';\n\n/*\n * Merges together all the outputs of multiple async processes into a single\n * argument to pass to a callback, according the outputs are in Object form.\n */\nclass CallbackMerger {\n    \n    constructor(n, callback) {\n        this._callback = callback;\n        this._n = n;\n\n        this._arg = {};\n    }\n\n    call(arg) {\n        \n        if (this._n <= 0) {\n            throw Error('CallbackMerger has completed its iterations');\n        }\n\n        _.merge(this._arg, arg);\n        this._n -= 1;\n        if (this._n === 0) {\n            this._callback(this._arg);\n        }\n    }\n}\n\n/**\n * A custom class that acts like an Enum type\n */\nclass Enum {\n\n    constructor(values={}) {\n\n        if (Array.isArray(values)) {\n            values = _.fromPairs(values.map((x, i) => [x, i]));\n        }\n\n        for (let key in values) {\n            let v = values[key];\n\n            Object.defineProperty(this, key, {\n                get: () => v\n            });\n        }\n    }\n\n}\n\n/**\n * Average atom position for a ModelView\n * \n * @param  {ModelView} mview    ModelView to compute the average position for\n * \n * @return {float[]}            Average position\n */\nfunction averagePosition(mview) {\n\n    const positions = mview.map((a) => a.xyz);\n    let average = positions.reduce((x, s) => x.map((v, i) => v+s[i]), \n                                   [0, 0, 0]);\n    average = average.map((x) => x/positions.length);\n\n    return average;\n}\n\n\n/**\n * Center the camera on the displayed atoms (with a custom shift)\n * \n * @param  {CrystVis} app   Reference to the visualizer app\n */\nfunction centerDisplayed(app) {\n    const pos = averagePosition(app.displayed);\n    app.centerCamera(pos, [-0.05, 0]);\n}\n\n/**\n * Return a color scale with a specified map and number of intermediate\n * shades\n * \n * @param  {Number} min    Smallest value of the range mapping to the color scale\n * @param  {Number} max    Largest value of the range\n * @param  {String} scale  Name of the scale (from package colormap; default is 'jet')\n * @param  {Number} shades Number of shades\n * \n * @return {ColorScale}    Color scale\n */\nfunction getColorScale(min=0, max=1, scale='jet', shades=10) {\n    \n    let colors = colormap({\n        colormap: scale,\n        nshades: shades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    // If min and max are equal we get an error so fix that\n    max = (max === min)? max+1e-8 : max;\n\n    let cscale = new ColorScale(min, max, colors, 1.0);\n\n    return cscale;\n}\n\n/**\n * Merge the values from an object into another, but without creating\n * new values if they were absent to begin with.\n * \n * @param  {Object} a The object to update\n * @param  {Object} b The object containing the updated values\n * \n * @return {Object}   The updated object\n */\nfunction mergeOnly(a, b) {\n\n    let c = {};\n\n    for (let k in a) {\n        c[k] = (k in b)? b[k] : a[k];\n    }\n\n    return c;\n}\n\n/**\n * Make a single row of an ASCII table with a fixed field width\n * \n * @param  {Array}  values      Values to include in the row\n * @param  {Number} width       Width of each field of the row\n * @param  {Number} precision   Digits used for numerical values\n * \n * @return {String}        Compiled row\n */\nfunction tableRow(values, width=20, precision=5) {\n    return values.reduce((s, v) => {        \n        if (Number.isFinite(v) && !Number.isInteger(v)) {\n            v = v.toFixed(precision);\n        }\n        else {\n            v = v.toString();\n        }\n        const ns = width-v.length;\n        return s + ' '.repeat(ns > 0? ns : 0) + v;\n    }, '') + '\\n';\n}\n\n/**\n * Download a file\n * \n * @param  {String} data     The data content of the file, must be a valid data URL\n * @param  {[type]} filename The name of the file to download\n */\nfunction saveContents(data, filename) {\n\n    const download = document.createElement('a');\n    download.setAttribute('download', filename);\n    download.setAttribute('href', data);\n    download.click();\n}\n\n/**\n * Download a PNG screenshot from data take from a Canvas\n * \n * @param  {String} data     Data URL retrieved with the .toDataURL() method\n * @param  {[type]} filename Filename to save\n */\nfunction saveImage(data, filename='image.png') {\n    data = data.replace('image/png', 'image/octet-stream');\n    saveContents(data, filename);\n}\n\n/**\n * Load an image from a file, return a promise\n * \n * @param  {File}   file    File with the image to load\n * \n * @return {Promise}        Promise that gets fulfilled once the image is loaded; resolves with an HTMLImageElement containing the image\n */\nfunction loadImage(file) {\n\n    let reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        reader.onload = ((e) => { \n            // Make it into a data URL\n            var img = new Image();\n            img.src = e.target.result;\n            img.decode().then(() => {\n                resolve(img);\n            });\n        });\n        reader.readAsDataURL(file);\n    });\n}\n\n/**\n * Copy something to the clipboard\n * \n * @param  {String} data Content to copy\n */\nfunction copyContents(data) {\n    navigator.clipboard.writeText(data);\n}\n\n\nexport { CallbackMerger, Enum, getColorScale, mergeOnly, \n         averagePosition, centerDisplayed,\n         saveImage, loadImage, saveContents, copyContents, tableRow };\n","import { Map } from 'immutable';\n\n// Immutable map makes these entries safe\nconst regularExpressions = Map({\n    float: new RegExp('[0-9]*(?:[.][0-9]*)?'),\n    int: new RegExp('[0-9]*'),\n    alpha: new RegExp('[a-zA-Z]*'),\n    alphanumeric: new RegExp('[0-9a-zA-Z]*')\n});\n\nexport default regularExpressions;","/** \n * Utilities that have to do with computing non-trivial NMR quantities\n */\n\n/**\n * Dipolar coupling constant in Hz between two atoms. Takes into account both\n * distance and the properties of the isotopes.\n * \n * @param  {AtomImage} a1 First atom\n * @param  {AtomImage} a2 Second atom\n * \n * @return {[Number, Array]}    Dipolar coupling in Hz and unit vector connecting\n *                              the two atoms\n */\nfunction dipolarCoupling(a1, a2) {\n\n    const MU0_HBAR_E30 = 1.3252140307214143e-10;\n    const g1 = a1.isotopeData.gamma || 0;\n    const g2 = a2.isotopeData.gamma || 0;\n\n    const r1 = a1.xyz;\n    const r2 = a2.xyz;\n    const r = r2.map((x, i) => x-r1[i]);\n    const R = Math.sqrt(r.reduce((s, x) => s+x*x, 0));\n    const rnorm = r.map((x) => x/R);\n\n    return [-MU0_HBAR_E30*g1*g2/(8*Math.PI*Math.PI*Math.pow(R, 3)), rnorm];    \n}\n\n/**\n * J coupling constant in Hz between two atoms. Will return\n * a value only if the ISC tensor data is available\n * \n * @param  {AtomImage} a1   First atom\n * @param  {AtomImage} a2   Second atom\n * \n * @return {Number}         J-coupling constant in Hz\n */\nfunction jCoupling(a1, a2) {\n\n    let T;\n    // Is it present at all?\n    try {\n        T = a1.getArrayValue('isc')[a2.index];\n    }\n    catch (e) {\n        // Not found\n        return null;\n    }\n\n    if (!T)\n        return null;\n\n    // Convert the tensor\n    let g1 = a1.isotopeData.gamma;\n    let g2 = a2.isotopeData.gamma;\n    T = T.iscAtomicToHz(g1, g2);\n\n    return T.isotropy;\n}\n\nexport { dipolarCoupling, jCoupling };","import * as mjs from 'mathjs';\n\n/**\n * Return a rotation matrix from a set of axes to another. Axes are not checked\n * and must be already orthonormal, with columns corresponding to each axis\n * \n * @param  {Array} axes1 Starting coordinate system\n * @param  {Array} axes2 Ending coordinate system\n\n * @return {Array}       Rotation matrix\n */\nfunction rotationBetween(axes1, axes2) {\n    return mjs.multiply(axes2, mjs.transpose(axes1));\n}\n\n/**\n * Euler angles (in ZYZ or ZXZ convention) from a rotation matrix R\n * \n * @param  {Array}  R           Rotation matrix\n * @param  {String} convention  Convention to use ('zyz' or 'zxz', by default 'zyz')\n * \n * @return {Array}      Euler angles\n */\nfunction eulerFromRotation(R, convention='zyz') {\n\n    /*\n        \n        For the ZYZ convention the rotation matrix is:\n\n        ⎡-sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(α)⋅cos(β)⋅cos(γ) + sin(γ)⋅cos(α)   -sin(β)⋅cos(γ)⎤\n        ⎢                                                                                            ⎥\n        ⎢-sin(α)⋅cos(γ) - sin(γ)⋅cos(α)⋅cos(β)  -sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(β)⋅sin(γ) ⎥\n        ⎢                                                                                            ⎥\n        ⎣            sin(β)⋅cos(α)                          sin(α)⋅sin(β)                  cos(β)    ⎦\n\n        \n        While for the ZXZ convention it is:\n        \n        ⎡-sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(α)⋅cos(γ) + sin(γ)⋅cos(α)⋅cos(β)   sin(β)⋅sin(γ)⎤\n        ⎢                                                                                           ⎥\n        ⎢-sin(α)⋅cos(β)⋅cos(γ) - sin(γ)⋅cos(α)  -sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(β)⋅cos(γ)⎥\n        ⎢                                                                                           ⎥\n        ⎣            sin(α)⋅sin(β)                         -sin(β)⋅cos(α)                 cos(β)    ⎦\n\n\n        The math is identical for the beta angle as well as the gimbal lock case. In the general case, \n        there's some changes in signs.\n\n     */\n\n\n    let cosb = R[2][2];\n    // Fix for the occasional numerical error\n    cosb = Math.min(Math.max(cosb, -1), 1);\n\n    let a;\n    let b = Math.acos(cosb);\n    let c;\n\n    if (Math.abs(cosb) === 1) {\n        // Special case, gimbal lock\n        c = 0;\n        a = Math.atan2(R[0][1], R[0][0]);\n    }\n    else {\n        // General case\n        switch (convention) {\n            case 'zyz':\n                a = Math.atan2(R[2][1],  R[2][0]);\n                c = Math.atan2(R[1][2], -R[0][2]);\n                break;\n            case 'zxz':\n                a = Math.atan2(R[2][0], -R[2][1]);\n                c = Math.atan2(R[0][2],  R[1][2]);\n                break;\n            default:\n                throw Error('Unrecognised Euler angles convention');\n        }\n    }\n\n    return [a, b, c];\n}\n\n/**\n * Rotation matrix from ZYZ Euler angles\n * \n * @param  {Number} alpha \n * @param  {Number} beta \n * @param  {Number} gamma \n * \n * @return {Array}   Rotation matrix\n */\nfunction rotationMatrixFromZYZ(alpha, beta, gamma) {\n\n    const sa = Math.sin(alpha);\n    const ca = Math.cos(alpha);\n    const sb = Math.sin(beta);\n    const cb = Math.cos(beta);\n    const sg = Math.sin(gamma);\n    const cg = Math.cos(gamma);\n\n    return [\n        [ca*cb*cg-sa*sg, sa*cb*cg+ca*sg, -sb*cg], \n        [-ca*cb*sg,      -sa*cb*sg+ca*cg, sb*sg],\n        [ca*sb,          sa*sb,           cb]\n    ];\n\n}\n\n/**\n * Euler angles between the Haeberlen eigenvectors of two NMR tensors\n * \n * @param  {CrystVis.TensorData}    T1          First tensor\n * @param  {CrystVis.TensorData}    T2          Second tensor\n * @param  {String}                 convention  Euler angles convention\n * \n * @return {Array}                              Euler angles\n */\nfunction eulerBetweenTensors(T1, T2, convention='zyz') {\n    const ax1 = T1.haeberlen_eigenvectors;\n    const ax2 = T2.haeberlen_eigenvectors;\n    return eulerFromRotation(rotationBetween(ax1, ax2), convention);\n}\n\nexport { rotationBetween, eulerFromRotation, eulerBetweenTensors, \n         rotationMatrixFromZYZ };","/**\n * A class to manage more conveniently click events sent to the CrystVis app.\n * It helps sorting out possible conflicts between different components trying\n * to each set their own handler.\n */\nclass ClickHandler {\n\n    constructor(app, codes=[]) {\n\n        this._callbacks = {};\n        const handler = this;\n\n        codes.forEach((code) => {\n\n            handler._callbacks[code] = {};\n\n            // Handler\n            function handleClick(atom, event) {\n                const cbacks = handler._callbacks[code];\n\n                for (let n in cbacks) {\n                    cbacks[n](atom, event);\n                }\n            }\n\n            app.onAtomClick(handleClick, code);\n        });\n    }\n\n    setCallback(name, code, cback=null) {\n\n        if (!(code in this._callbacks)) {\n            throw Error('Invalid callback code; unsupported event type');\n        }\n\n        if (!cback) {\n            delete(this._callbacks[code][name]);\n        }\n        else {\n            this._callbacks[code][name] = cback;            \n        }\n\n    }\n\n}\n\nexport { ClickHandler };","import _ from 'lodash';\nimport { dipolarCoupling, jCoupling } from '../../utils';\n\nfunction makeSelector(prefix, extras=[]) {\n    // Creates and returns a selector function for a given prefix\n    function selector(state) {\n        let ans = {};\n\n        for (let key in state) {\n            if (!_.startsWith(key, prefix) && extras.indexOf(key) === -1)\n                continue;\n            ans[key] = state[key];\n        }\n\n        return ans;\n    }\n\n    return selector;\n}\n\nconst addPrefix = (p, n) => p + '_' + n;\n\nfunction getSel(app) {\n    let sel = app.selected;\n    if (sel) {\n        return sel.length > 0? sel : app.displayed;\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getNMRData(view, datatype, tenstype='ms', reftable=null) {\n\n    let units = '';\n    let tens_units = {\n        ms: 'ppm',\n        efg: 'au'\n    }[tenstype];\n    let values = null;\n    let tensors = view.map((a) => (a.getArrayValue(tenstype)));\n\n    switch(datatype) {\n        case 'iso': \n            values = tensors.map((T) => T.isotropy);\n            units = tens_units;\n            break;\n        case 'aniso':\n            values = tensors.map((T) => T.anisotropy);\n            units = tens_units;\n            break;\n        case 'redaniso':\n            values = tensors.map((T) => T.reduced_anisotropy);\n            units = tens_units;\n            break;            \n        case 'asymm':\n            values = tensors.map((T) => T.asymmetry);\n            break;\n        case 'span':\n            values = tensors.map((T) => T.span);\n            break;\n        case 'skew':\n            values = tensors.map((T) => T.skew);\n            break;\n        case 'cs':\n            if (!reftable) {\n                throw Error('Can not compute chemical shifts without a reference table');\n            }\n            values = tensors.map((T, i) => {\n                let el = view.atoms[i].element;\n                let ref = reftable[el] || 0.0;\n                return ref-T.isotropy;\n            });\n            units = tens_units;\n            break;\n        case 'e_x':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[0]);\n            break;\n        case 'e_y':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[1]);\n            break;\n        case 'e_z':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[2]);\n            break;\n        case 'Q':\n            values = tensors.map((T, i) => {\n                let iD = view.atoms[i].isotopeData;\n                return T.efgAtomicToHz(iD.Q).haeberlen_eigenvalues[2] / 1e6;\n            });\n            units = 'MHz'; // if this changes, change formatNumber as well!\n            break;\n        default:\n            break;\n    }\n\n    return [units, values];\n}\nfunction formatNumber(value, unit, precision=2) {\n    // function to adapt metric prefix to number given a unit string\n    // and a precision\n    // returns a string with the number and the unit\n    \n    // special handling for Hz\n    // we want the precision to be relative to the MHz scale\n    if (unit === 'MHz') {\n        // -- handle negative values -- //\n        if (value < 0) {\n            return '-' + formatNumber(-value, unit, precision);\n        }\n\n        // -- handle positive values -- //\n        \n        // suppress label completely if value is less than 1e-8 MHz\n        if (value < 1e-8) {\n            return '';\n        }\n\n        // convert to kHz if value is less than 1 MHz but larger than 1 kHz\n        if (value < 1 && value > 1e-3) {\n            value *= 1e3;\n            unit = 'kHz';\n            // scale precision to kHz scale (minimum 0)\n            precision = Math.max(0, precision-3);\n        }\n        // Convert to Hz if value is less than 1 kHz but larger than 1e-2 Hz\n        else if (value < 1e-3 && value > 1e-8) {\n            value *= 1e6;\n            unit = 'Hz';\n            // scale precision to Hz scale (minimum 0)\n            precision = Math.max(0, precision-6);\n        }\n        else {;\n        }\n\n    }\n    return value.toFixed(precision) + ' ' + unit;\n}\n\nfunction getLinkLabel(a1, a2, linktype, precision=2) {\n\n    switch (linktype) {\n        case 'dip':\n            const D = dipolarCoupling(a1, a2)[0];\n            return (D/1e3).toFixed(precision) + ' kHz';\n        case 'jc':\n            const J = jCoupling(a1, a2);\n            if (J === null) {\n                return '';\n            }\n            return J.toFixed(precision) + ' Hz';\n        default:\n            return '';\n    }\n}\n\n\nclass BaseInterface {\n\n    constructor(state, dispatcher) {\n        this._state = state;\n        this._dispatcher = dispatcher;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    dispatch(action) {\n        this._dispatcher(action);\n    }\n\n}\n\nclass DataCheckInterface extends BaseInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));            \n    }\n\n}\n\nexport { \n    makeSelector, \n    addPrefix,\n    getSel,\n    getNMRData,\n    formatNumber,\n    getLinkLabel,\n    BaseInterface,\n    DataCheckInterface\n};","/**\n * Colors used in ellipsoids, labels, etc.\n *\n * This isn't the best place to insert them, but they will stay here until\n * I can find a working way to have interoperability between JS and CSS on this.\n */\n\nconst selColor = 0xffffff; // Used for crystallographic labels\nconst msColor = 0xff8000;\nconst efgColor = 0x0080ff;\nconst dipColor = 0x00ff80;\nconst jcColor = 0xff0080;\n\nexport {\n    selColor,\n    msColor,\n    efgColor,\n    dipColor,\n    jcColor\n};","/**\n * Listeners for the rendering of ellipsoids\n */\n\nimport _ from 'lodash';\nimport { addPrefix, getSel } from '../utils';\nimport { msColor, efgColor } from './colors';\n\nfunction makeEllipsoidListener(name, color) {\n    // Factory for a listener that will be used for both MS and EFG ellipsoids\n    // with minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_on = addPrefix(name, 'ellipsoids_on');\n    const pre_scale = addPrefix(name, 'ellipsoids_scale');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases for convenience\n        const on = state[pre_on];\n        let scale = state[pre_scale];\n\n\n        if (current_view && (current_view !== next_view || !on)) {\n            // Something's changing. Remove old ellipsoids!\n            current_view.removeEllipsoids(name);\n        }\n\n        // Now for the new view and data\n        if (on) {\n\n            const data = next_view.map((a) => a.getArrayValue(name));\n\n            if (scale === 0) {\n                // Auto scale needed\n                let avg = data.map((t) => _.sum(t.eigenvalues.map(Math.abs))/3.0);\n                avg = _.sum(avg)/data.length;\n                scale = 2.0/avg;\n            }\n\n            next_view.addEllipsoids(data, name, {scalingFactor: scale, color: color, opacity: 0.125});\n        }\n\n        return {\n            [pre_view]: next_view,\n            [pre_scale]: scale\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst msEllipsoidListener = makeEllipsoidListener('ms', msColor);\nconst efgEllipsoidListener = makeEllipsoidListener('efg', efgColor);\n\nexport { msEllipsoidListener, efgEllipsoidListener };","/**\n * Listeners for the rendering of labels\n */\n\nimport { addPrefix, getSel, getNMRData, formatNumber } from '../utils';\nimport { selColor, msColor, efgColor } from './colors';\n\nfunction makeLabelListener(name, color, shiftfunc) {\n    // Factory for a function that will be used for both MS and EFG with\n    // minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_references = addPrefix(name, 'references');\n    const pre_type = addPrefix(name, 'labels_type');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n        let ref_table = state[pre_references];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases\n        const mode = state[pre_type];\n\n        if (current_view && (current_view !== next_view || mode === 'none')) {\n            // Remove old labels\n            current_view.removeLabels(name);\n        }\n\n        let label_texts;\n        if (mode !== 'none') {\n\n            if (name !== 'sel_sites') {\n                // Get the data\n                let [units, values] = getNMRData(next_view, mode, name, ref_table);\n                // get precision depending on name\n                let precision = state[addPrefix(name, 'precision')];\n                \n                // use formatNumber to get the right number of decimals\n                label_texts = values.map((v) => formatNumber(v, units, precision));\n                \n            }\n            else {\n                // Non-NMR labels\n                if (mode === 'element') {\n                    label_texts = next_view.atoms.map((a) => a.element);\n                }\n                else if (mode === 'isotope') {\n                    label_texts = next_view.atoms.map((a) => a.isotope + a.element);\n                }\n                else if (mode === 'labels') {\n                    label_texts = next_view.atoms.map((a) => a.crystLabel);\n                }\n            }\n\n            next_view.addLabels(label_texts, name, (a, i) => ({ \n                color: color,  \n                shift: shiftfunc(a.radius),\n                height: 0.02\n            }));\n        }\n\n        return {\n            [pre_view]: next_view,\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst selLabelListener = makeLabelListener('sel_sites', selColor, (r) => ([r, r, 0]));\nconst msLabelListener = makeLabelListener('ms', msColor, (r) => ([1.414*r, 0.0, 0.0]));\nconst efgLabelListener = makeLabelListener('efg', efgColor, (r) => ([r, -r, 0.0]));\n\nexport { selLabelListener, msLabelListener, efgLabelListener };","import { addPrefix } from '../utils';\n\nimport { dipColor, jcColor } from './colors';\nimport { getLinkLabel } from '../utils';\n\n\nfunction makeCalculateLinksListener(name) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of calculating which atoms are the\n    // 'targets' to which we're drawing links to. Must precede a call to \n    // updateViews so that the ghosts get visualised or hidden as needed\n    \n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_homo = addPrefix(name, 'homonuclear');\n\n    const pre_view = addPrefix(name, 'view');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let model = app.model;\n\n        if (!model) {\n            // Can happen if we're running with an empty visualiser.\n            return {};\n        }\n\n        let ghostreqs = {\n            ...state.sel_ghosts_requests\n        };\n\n        // Targets?\n        const on = state[pre_on];\n        const catom = state[pre_ca];\n        const r = state[pre_r];\n        const hn = state[pre_homo];\n\n        let linkview;\n\n        if (on && catom) {\n\n            let query = { sphere: [catom, r] };\n            if (hn) {\n                query = {\n                    '$and': [\n                        query,\n                        { elements: [catom.element] }\n                    ]\n                };\n            }\n\n\n            linkview = model.find(query);\n            ghostreqs[name] = linkview;\n        }        \n        else {\n            linkview = model.view([]);\n            // Cancel previous ghosts, if present\n            delete(ghostreqs[name]);\n        }\n\n        return {\n            [pre_view]: linkview,\n            sel_ghosts_requests: ghostreqs\n        };\n    }\n\n    return listener;\n\n}\n\nfunction makeDisplayLinksListener(name, color) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of actually drawing the links  \n\n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_sph = addPrefix(name, 'sphere_show');\n\n    const pre_view = addPrefix(name, 'view');\n\n    // These we keep inside this enclosed variable, as a way to keep track for\n    // when we delete them\n    let current_link_names = [];\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let linkview = state[pre_view];\n\n        const catom = state[pre_ca];\n        const radius = state[pre_r];\n        const on = state[pre_on];\n        const sphere = state[pre_sph];\n\n        const model = app.model;\n\n\n        if (!model) {\n            // Nothing to do\n            return {};\n        }\n\n        // First, cleaning up old visualisation\n        current_link_names.forEach((name) => { model.removeGraphics(name); });\n\n        // Now creating a new one\n        let precision = state[addPrefix(name, 'precision')];\n        current_link_names = [];\n        if (on && catom && linkview) {\n            linkview.atoms.forEach((a2, i) => {\n\n                if (a2 === catom)\n                return;\n\n                const lname = name + '_link_' + i;\n                const label = getLinkLabel(catom, a2, name, precision);\n\n                if (label === '') {\n                    // No coupling found\n                    return;\n                }\n\n                model.addLink(catom, a2, lname, label, {\n                    color: color,\n                    dashed: true,\n                    onOverlay: true\n                });\n                current_link_names.push(lname);\n            });\n        }\n\n        // Now the sphere\n        if (on && catom && sphere) {\n            model.addSphere(catom.xyz, radius, name + '_sphere', {\n                opacity: 0.25,\n                showAxes: false,\n                showCircles: true\n            });\n        }\n        else {\n            model.removeGraphics(name + '_sphere');\n        }\n\n        return {};\n    }\n\n    return listener;\n\n}\n\nconst dipCalculateLinksListener = makeCalculateLinksListener('dip');\nconst dipDisplayLinksListener = makeDisplayLinksListener('dip', dipColor);\n\nconst jcCalculateLinksListener = makeCalculateLinksListener('jc');\nconst jcDisplayLinksListener = makeDisplayLinksListener('jc', jcColor);\n\n\nexport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener, jcDisplayLinksListener };","/**\n * Listeners for Euler angles\n */\n\nimport { msColor, efgColor } from './colors';\nimport { eulerBetweenTensors } from '../../../utils';\n\nconst ctable = {\n    'ms': msColor,\n    'efg': efgColor\n};\n\nfunction eulerAngleListener(state) {\n\n    const a1A = state.eul_atom_A;\n    const a1B = state.eul_atom_B;\n\n    const a2A = state.eul_newatom_A;\n    const a2B = state.eul_newatom_B;\n\n    const tA = state.eul_tensor_A;\n    const tB = state.eul_tensor_B;\n\n    const conv = state.eul_convention;\n\n    let nmrA = null;\n    let nmrB = null;\n\n    if (a1A) {\n        a1A.removeLabel('eulA');\n    }\n\n    if (a2A) {\n        let r = a2A.radius;\n        a2A.addLabel('A', 'eulA', {\n            shift: [0, 0.25*r, 0],\n            color: ctable[tA],\n            onOverlay: true,\n            height: 0.04\n        });\n\n        // Now get the tensor value\n        if (a2A.model.hasArray(tA)) {\n            nmrA = a2A.getArrayValue(tA);\n        }\n    }\n\n    if (a1B) {\n        a1B.removeLabel('eulB');\n    }\n\n    if (a2B) {\n        let r = a2B.radius;\n        a2B.addLabel('B', 'eulB', {\n            shift: [0, -0.5*r, 0],\n            color: ctable[tB],\n            onOverlay: true\n        });\n\n        // Now get the tensor value\n        if (a2B.model.hasArray(tB)) {\n            nmrB = a2B.getArrayValue(tB);\n        }\n    }\n\n    let results = null;\n\n    if (nmrA && nmrB) {\n        // Get the eigenvectors\n        results = eulerBetweenTensors(nmrA, nmrB, conv);\n    }\n\n    return {\n        eul_atom_A: a2A,\n        eul_atom_B: a2B,\n        eul_results: results\n    };\n}\n\nexport { eulerAngleListener };","// Events used to trigger listeners\nimport { Enum } from '../../../utils';\n\nconst Events = new Enum([\n    'DISPLAY',\n    'VIEWS',\n    'SEL_LABELS',\n    'CELL',\n    'CSCALE',\n    'MS_ELLIPSOIDS',\n    'MS_LABELS',\n    'EFG_ELLIPSOIDS',\n    'EFG_LABELS',\n    'EUL_ANGLES',\n    'DIP_LINKS',                // Links require two events, one before a VIEWS update, the other after\n    'DIP_RENDER',\n    'JC_LINKS',\n    'JC_RENDER',\n    'PLOTS_RECALC'\n]);\n\n// Event priority ranking. Events with higher priority fire first, and are\n// followed by all the ones of lower priority. Example: a change in Views\n// (priority 1) inevitably triggers all events of priority 0.\nconst eventPriority = {\n    0: new Set([Events.DISPLAY]),                               // Called last. If we need to change displayed model\n    1: new Set([Events.SEL_LABELS, Events.CELL,                 // All events having to do with rendering something that\n                Events.CSCALE,                                  // is affected by displayed/selected atoms\n                Events.MS_ELLIPSOIDS, Events.MS_LABELS,         \n                Events.EFG_ELLIPSOIDS, Events.EFG_LABELS,\n                Events.EUL_ANGLES, Events.PLOTS_RECALC,\n                Events.DIP_RENDER, Events.JC_RENDER]),\n    2: new Set([Events.VIEWS]),                                 // Changing displayed/selected atoms\n    3: new Set([Events.DIP_LINKS, Events.JC_LINKS])             // Computing links and required ghosts (which changes displayed atoms)\n};\n\nfunction getPriorityOfEvent(event) {\n\n    for (let p in eventPriority) {\n        let eset = eventPriority[p];\n        if (eset.has(event)) {\n            return p;\n        }\n    }\n\n    return 0; // Default value\n}\n\nfunction getEventsWithPriority(priority) {\n    return eventPriority[priority];\n}\n\n\nexport default Events;\nexport { getPriorityOfEvent, getEventsWithPriority };","/**\n * This file contains the master function for controlling the listener system.\n * Listeners are subscribed to the magresStore and fire whenever the state\n * changes. Since it could get too expensive to check which parts of the state\n * have changed at any time, listeners must be invoked EXPLICITLY by a method\n * making a dispatch by adding their names to the listen_update Array.\n *\n * A listener must have the following interface:\n *\n * function exampleListener(state) {\n *\n *      // ...do something...\n *\n *      return [new_data, new_listeners];\n * \n * }\n *\n * where new_data is a dictionary that will be directly used to update the\n * state while new_listeners is a list of any new listeners that should be\n * queued for update next. The process will stop only once that listen_update = []\n * at the end of a run through the current queue, (so be wary of creating infinite loops!).\n */\n\nimport { displayListener } from './display';\nimport { viewsListener } from './views';\nimport { msEllipsoidListener, efgEllipsoidListener } from './ellipsoids';\nimport { selLabelListener, msLabelListener, efgLabelListener } from './labels';\nimport { colorScaleListener } from './cscales';\nimport { cellListener } from './cell';\nimport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener,  jcDisplayLinksListener } from './links';\nimport { eulerAngleListener } from './euler';\nimport { plotsListener } from './plots';\nimport Events, { getPriorityOfEvent, getEventsWithPriority } from './events';\n\nconst initialListenerState = {\n    listen_update: []\n};\n\nconst listeners = {\n    [Events.DISPLAY]:           displayListener,\n    [Events.VIEWS]:             viewsListener,\n    [Events.SEL_LABELS]:        selLabelListener,\n    [Events.CELL]:              cellListener,\n    [Events.CSCALE]:            colorScaleListener,\n    [Events.MS_ELLIPSOIDS]:     msEllipsoidListener,\n    [Events.MS_LABELS]:         msLabelListener,\n    [Events.EFG_ELLIPSOIDS]:    efgEllipsoidListener,\n    [Events.EFG_LABELS]:        efgLabelListener,\n    [Events.EUL_ANGLES]:        eulerAngleListener,\n    [Events.PLOTS_RECALC]:      plotsListener,\n    [Events.DIP_LINKS]:         dipCalculateLinksListener,\n    [Events.DIP_RENDER]:        dipDisplayLinksListener,\n    [Events.JC_LINKS]:          jcCalculateLinksListener,\n    [Events.JC_RENDER]:         jcDisplayLinksListener\n};\n\nfunction makeMasterListener(store) {\n\n    function listener() {\n\n        let state = store.getState();\n        let toUpdate = state.listen_update;\n\n        if (toUpdate && toUpdate.length > 0) {\n\n            let data = {};\n\n            // Find max priority\n            let maxPriority = toUpdate.reduce((P, e) => {\n                let p = getPriorityOfEvent(e);\n                return p > P? p : P;\n            }, -1);\n\n            toUpdate = toUpdate.filter((e) => {\n                return getPriorityOfEvent(e) === maxPriority;\n            });\n\n            toUpdate = new Set(toUpdate); // Avoid duplicates\n\n            toUpdate.forEach((lname) => {\n\n                if (!(lname in listeners))\n                    return;\n\n                try {\n                    let d = listeners[lname](state);\n                \n                    data = {\n                        ...data,\n                        ...d\n                    };\n                }\n                catch (e) {\n                    // Can happen if the listener e.g. relies on there being\n                    // a model, and we don't have one loaded. Tolerated with a\n                    // warning.\n                    console.warn(e);\n                }\n\n            });\n\n            // Next do all the lower priority\n            let nextToUpdate = [];\n            if (maxPriority > 0) {\n                nextToUpdate = [...getEventsWithPriority(maxPriority-1)];\n            }\n            data.listen_update = nextToUpdate;\n\n            store.dispatch({\n                type: 'update',\n                data: data\n            });\n        }\n    }\n\n    return listener;\n}\n\nexport { initialListenerState, Events };\nexport default makeMasterListener;","// import { centerDisplayed } from '../../../utils';\n\nfunction displayListener(state) {\n\n    const app = state.app_viewer;\n    const toDisplay = state.app_model_queued;\n\n    let data = {};\n\n    if (app && toDisplay) {\n        app.displayModel(toDisplay);\n        data = {\n            app_default_displayed: app.displayed,\n            app_model_queued: null\n        };\n\n        // Center model\n        // centerDisplayed(app);\n    }\n\n    return data;\n}\n\nexport { displayListener };","// import { centerDisplayed } from '../../../utils';\n\nfunction viewsListener(state) {\n\n    let app = state.app_viewer;\n    let model = app.model;\n\n    if (!model) {\n        return {};\n    }\n\n    // Aliases\n    let sel = state.sel_selected_view;\n    let displ = state.sel_displayed_view? state.sel_displayed_view : state.app_default_displayed;\n\n    // Assign new selection\n    if (sel && sel !== app.selected)\n        app.selected = sel;\n\n    if (model)\n        model.all.hide();\n\n    // Deal with ghosts\n    Object.values(state.sel_ghosts_requests).forEach((s, i) => {\n        // Make each of these visible but translucent\n        s.show();\n        s.setProperty('opacity', 0.5);\n    });\n    \n    // Doing this after the ghosts means any overlap will be fixed here\n    app.displayed = displ;\n    displ.setProperty('opacity', 1.0);\n\n    // Center model\n    // centerDisplayed(app);\n\n    // We now update all visualizations that may be changed as a result of this\n    return  {};\n}\n\nexport { viewsListener };","/** \n * Listener for when cell/axes visibility is changed\n */\n\nfunction cellListener(state) {\n    const app = state.app_viewer;\n\n    if (app) { \n        const model = app.model;\n        if (model) {\n            model.box.visible = state.sel_show_cell;\n            model.axes.visible = state.sel_show_cell;\n        }\n    }\n\n    return {};\n}\n\nexport { cellListener };","/**\n * Listeners for color scales\n */\n\nimport _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\nimport { getColorScale } from '../../../utils';\n\nfunction colorScaleListener(state) {\n\n    let app = state.app_viewer;\n    let current_view = state.cscale_view;\n    let current_greyed = state.cscale_displ;\n    let displayed = app.displayed;\n\n    let next_view = getSel(app);\n    let next_greyed = null;\n\n    const cstype = state.cscale_type;\n    const cmap = state.cscale_cmap;\n\n    // Restore color to the grayed out atoms\n    if (current_greyed) {\n        current_greyed.setProperty('color', null);\n    }\n\n    if (cstype !== 'none') {\n\n        // Split in prefix and mode\n        const [, prefix, mode] = cstype.match(/^([^_]*)_(.*)$/);\n        const ref_table = state[prefix + '_references'];\n\n        next_greyed = displayed.xor(next_view);\n\n        const nmrdata = getNMRData(next_view, mode, prefix, ref_table);\n        const values = nmrdata[1];\n        if (cstype === 'efg_Q') {\n            // Special case for EFG Q\n            // convert all to absolute values\n            values.forEach((v, i) => values[i] = Math.abs(v));\n        }\n\n\n        let minv = _.min(values);\n        let maxv = _.max(values);\n        let cs = getColorScale(minv, maxv, cmap);\n        let colors = values.map((v) => cs.getColor(v).toHexString());\n\n        // store minv and maxv TODO: is this the correct place to do this?\n        state.cscale_lims = [minv, maxv];\n\n        // store units\n        state.cscale_units = nmrdata[0];\n\n        next_view.setProperty('color', colors);\n        next_greyed.setProperty('color', 0x888888);\n    }\n    else {\n        if (current_view)\n            current_view.setProperty('color', null);\n    }\n\n    return {\n        cscale_view: next_view,\n        cscale_displ: next_greyed\n    };\n}\n\nexport { colorScaleListener };","import _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\n\nfunction plotsListener(state) {\n\n    const minx = parseFloat(state.plots_min_x);\n    const maxx = parseFloat(state.plots_max_x);\n\n    const miny = parseFloat(state.plots_min_y);\n    const maxy = parseFloat(state.plots_max_y);\n\n    // Get target atom view\n    const app = state.app_viewer;\n    const view = getSel(app);\n    const ref_table = state.ms_references;\n    const use_refs = state.plots_use_refs;\n    const nmr_mode = use_refs? 'cs' : 'iso';\n\n    // Is there even anything to plot?\n    let noplot = !view;\n    noplot = noplot || (isNaN(minx) || isNaN(maxx) || isNaN(miny) || isNaN(maxy));\n    noplot = noplot || (state.plots_mode === 'none');\n\n    if (noplot) {\n        return {\n            plots_data: []\n        };\n    }\n\n    let xaxis = [];\n    let yaxis = [];\n\n    const w = parseFloat(state.plots_peak_width);\n    const n = parseInt(state.plots_x_steps);\n    const peaks = getNMRData(view, nmr_mode, 'ms', ref_table)[1];         \n    const labels = view.atoms.map((a) => a.crystLabel);\n    const rangepeaks = peaks.filter((x) => (x+w >= minx && x-w <= maxx));\n    // filter labels by peak positions\n    const rangelabels = labels.filter((x, i) => (rangepeaks.indexOf(peaks[i]) >= 0));\n    // check that rangelabels has the same length as rangepeaks\n    if (rangelabels.length !== rangepeaks.length) {\n        throw Error('Mismatch between labels and peaks');\n    }\n    // sort labels and peaks by peak position\n    const sorted = _.zip(rangepeaks, rangelabels).sort((a, b) => (a[0] - b[0]));\n    const sortedpeaks = sorted.map((x) => x[0]);\n    const sortedlabels = sorted.map((x) => x[1]);\n\n\n    switch(state.plots_mode) {\n        case 'bars-1d':\n\n            xaxis = sortedpeaks;\n            yaxis = xaxis.map(() => (maxy * 0.75));\n\n            break;\n        case 'line-1d':\n\n            function lorentzian(x, x0, w) {\n                return 0.5/Math.PI*w/(Math.pow(x-x0, 2)+0.25*w*w);  // Lorentzian peak\n            }\n\n            xaxis = _.range(n).map((i) => (minx + (maxx-minx)*i/(n-1)));\n            yaxis = xaxis.map((x) => {\n                return sortedpeaks.reduce((s, x0) => (s + lorentzian(x, x0, w)), 0);\n            });\n\n            break;\n        default:\n            break;\n    }\n\n\n    // Build x range\n    const data = [{\n        id: 'Curve',\n        data: xaxis.map((x, i) => ({\n            x: x,\n            y: yaxis[i]\n        })),\n        // return labels for peaks in the range\n        // or empty array if no peaks in range\n        peaks: sortedpeaks? sortedpeaks : [],\n        labels: sortedlabels? sortedlabels: [],\n    }];\n\n    return {\n        plots_data: data\n    };\n}\n\nexport { plotsListener };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from '@ccp-nc/crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst SLC = CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON;\nconst CLC = CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON;\n\nconst initialSelState = {\n    sel_selected_view: null,\n    sel_displayed_view: null,\n    sel_ghosts_requests: {},\n    sel_on: false,\n    sel_mode: 'atom',\n    sel_sphere_r: 2.0,\n    sel_bond_n: 1,\n    sel_hlight: true,\n    sel_sites_view: null,\n    sel_sites_labels_type: 'none',\n    sel_show_cell: true\n};\n\nclass SelInterface extends BaseInterface {\n\n    get app() {\n        return this.state.app_viewer;\n    }\n\n    get selected() {\n        return this.state.sel_selected_view;\n    }\n\n    set selected(v) {\n        if (!v) {\n            let model = this.state.app_viewer.model;\n            if (model) {\n                v = model.view([]);\n            }\n        }\n\n        this.dispatch({\n            type: 'update', \n            data: {\n                sel_selected_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get displayed() {\n        return this.state.sel_displayed_view || this.state.app_default_displayed;\n    }\n\n    set displayed(v) {\n        if (!v) {\n            v = this.state.app_default_displayed;\n            if (!v) {\n                // Then there's just no model at all\n                return;\n            }\n        }\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_displayed_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get defaultDisplayed() {\n        return this.state.app_default_displayed;\n    }\n\n    get highlightSelected() {\n        return this.state.sel_hlight;\n    }\n\n    set highlightSelected(v) {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        app.highlightSelected = v;\n        this.dispatch({\n            type: 'set',\n            key: 'sel_hlight',\n            value: v\n        });\n    }\n\n    // labels\n    get labelMode() {\n        return this.state.sel_sites_labels_type;\n    }\n\n    set labelMode(v) {\n        this.dispatch({\n            type: 'update',\n            data: {sel_sites_labels_type: v, listen_update: [Events.SEL_LABELS]}\n        });\n    }\n\n    get showCell() {\n        return this.state.sel_show_cell;\n    }\n\n    set showCell(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_show_cell: v,\n                listen_update: [Events.CELL]\n            }\n        });\n    }\n\n    get selectionOn() {\n        return this.state.sel_on;\n    }\n\n    set selectionOn(v) {\n        this.setSelection(this.selectionMode, {on: v});\n    }\n\n    get selectionMode() {\n        return this.state.sel_mode;\n    }\n\n    set selectionMode(v) {\n        this.setSelection(v);\n    }\n\n    get selectionSphereR() {\n        return this.state.sel_sphere_r;\n    }\n\n    set selectionSphereR(v) {\n        this.setSelection(this.selectionMode, {r: v});\n    }\n\n    get selectionBondN() {\n        return this.state.sel_bond_n;\n    }\n\n    set selectionBondN(v) {\n        this.setSelection(this.selectionMode, {n: v});\n    }\n\n    get isotopeChoices() {\n        // Find which isotopes are available for the currently selected atoms\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        let elements = sel.map((a, i) => a.element);\n        // Are they all the same?\n        let el = elements[0];\n        if (!elements.reduce((s, x) => (s && x === el), true)) {\n            return null;\n        }\n\n        // Get the isotope information\n        let eData = sel.atoms[0].elementData;\n\n        let iKeys = Object.keys(eData.isotopes).sort();\n        let iData = iKeys.map((A, i) => {\n            let iso = eData.isotopes[A];\n            return {\n                A: A,\n                is_nmr_active: iso.spin !== 0,\n                is_Q_active: iso.Q !== 0,\n                is_max_nmr: A === eData.maxiso_NMR,\n                is_max_Q: A === eData.maxiso_Q,\n                abundance: iso.abundance\n            };\n        });\n\n        return iData;\n    }\n\n    setIsotope(A) {\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        sel.setProperty('isotope', A);\n\n        // Must update everything that depends on isotope properties\n        this.dispatch({\n            type: 'update',\n            data: {\n                listen_update: [Events.EFG_LABELS, Events.CSCALE, \n                                Events.DIP_RENDER, Events.JC_RENDER,\n                                Events.SEL_LABELS]\n            }\n        });\n    }\n\n    setSelection(mode, options={}) {\n        // Set the selection for a certain mode and options\n\n        let app = this.state.app_viewer;\n        if (!app) \n            return;\n\n        let default_options = {\n            r: this.selectionSphereR,\n            n: this.selectionBondN,\n            on: this.selectionOn\n        };\n\n        options = {\n            ...default_options,\n            ...options\n        };\n\n        // Selector functions\n        let selFunc = null;\n\n        if (options.on) {\n            switch(mode) {\n                case 'atom':\n                    selFunc = ((a, e) => {\n                        return app.model.view([a.imgIndex]); // Just the one\n                    });\n                    break;\n                case 'element':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryElements(a.element);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'label':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryLabels([a.crystLabel]);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'sphere':\n                    const r = options.r;\n                    selFunc = ((a, e) => {\n                        var found = app.model._querySphere(a, r); \n                        return app.model.view(found);\n                    });\n                    break;\n                case 'molecule': \n                    selFunc = ((a, e) => {\n                        var found = app.model._queryMolecule(a);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'bonds':\n                    const n = options.n;\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryBonded(a, n, false);\n                        found = found.concat([a.imgIndex]); // Crystvis excludes the original atom\n                        return app.model.view(found);\n                    });\n                    break;\n                default:\n                    // No selection at all\n                    break;\n            }\n        }\n\n        // We use this to guarantee that the selection still doesn't go out of\n        // the default display (e.g. the main cell). Everything else remains\n        // hidden or can be used as ghost for other purposes\n        const dd = this.state.app_default_displayed;\n        const intf = this;\n        const handler = this.state.app_click_handler;\n\n        if (selFunc) {\n            handler.setCallback('sel', LC, (a, e) => { intf.selected = dd.and(selFunc(a, e)); });\n            handler.setCallback('sel', SLC, (a, e) => { intf.selected = dd.and(app.selected.or(selFunc(a, e))); });\n            handler.setCallback('sel', CLC, (a, e) => { intf.selected = dd.and(app.selected.xor(selFunc(a, e))); });\n        }\n        else {\n            // Free the events\n            handler.setCallback('sel', LC);\n            handler.setCallback('sel', SLC);\n            handler.setCallback('sel', CLC);\n        }\n\n        this.dispatch({type: 'update', data: {\n            sel_mode: mode,\n            sel_sphere_r: options.r,\n            sel_bond_n: options.n,\n            sel_on: options.on\n        }});\n    }\n\n}\n\n// Hook for interface\nfunction useSelInterface() {\n    let state = useSelector(makeSelector('sel', ['app_viewer', 'app_click_handler', 'app_default_displayed']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new SelInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default useSelInterface;\nexport { initialSelState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\n\nconst initialCScaleState = {\n    cscale_view: null,\n    cscale_displ: null,\n    cscale_type: 'none',\n    cscale_lims: [0,1],\n    cscale_units: '',\n    cscale_cmap: 'viridis',\n};\n\n// A base class not meant to be used directly, but inherited by all interfaces\n// that make use of color scales. \n// \n// Must be used in conjuction with makeCScaleSelector!\nclass CScaleInterface extends BaseInterface {\n\n    get colorScaleType() {\n        return this.state.cscale_type;\n    }\n\n    set colorScaleType(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_type: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    get colorScalePrefix() {\n        return this.colorScaleType.split('_', 2)[0];\n    }\n\n    get colorScaleLimits() {\n        return this.state.cscale_lims;\n    }\n\n    get colorScaleUnits() {\n        return this.state.cscale_units;\n    }\n\n    get colorScaleCmap() {\n        return this.state.cscale_cmap;\n    }\n\n    set colorScaleCmap(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_cmap: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    reset() {\n        this.dispatch({\n            type: 'update',\n            data: {\n                ...initialCScaleState,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n}\n\nfunction makeCScaleSelector(prefix, extras=[]) {\n    extras = extras.concat(Object.keys(initialCScaleState));\n\n    return makeSelector(prefix, extras);\n}\n\nexport default CScaleInterface;\nexport { initialCScaleState, makeCScaleSelector };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialMSState = {\n    ms_view: null,\n    ms_ellipsoids_on: false,\n    ms_ellipsoids_scale: 0.05,\n    ms_labels_type: 'none',\n    ms_references: {},\n    ms_precision: 2,\n};\n\n// Update any new references for chemical shifts\nfunction msSetReferences(state, refs=null) {\n\n    let new_refs = {};\n\n    // Default behaviour if refs is null is to clear everything,\n    // otherwise we update the existing table.\n    if (refs) {\n        new_refs = {\n            ...state.ms_references,\n            ...refs\n        };\n    }\n\n    // We then update the state and refresh the ms labels, in case any changes\n    // are needed\n    return {\n        ms_references: new_refs,\n        listen_update: [Events.MS_LABELS, Events.CSCALE, Events.PLOTS_RECALC]\n    };\n}\n\n// Action creator\nconst msAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass MSInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.ms_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(msAction({ ms_ellipsoids_on: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.ms_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(msAction({ ms_ellipsoids_scale: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.ms_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(msAction({ 'ms_labels_type': v }, [Events.MS_LABELS]));\n    }\n\n    get precision() {\n        return this.state.ms_precision;\n    }\n\n    set precision(v) {\n        this.dispatch(msAction({ 'ms_precision': v }, [Events.MS_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'ms');\n    }\n\n    get referenceTable() {\n\n        if (!this.state.app_viewer || !this.state.app_viewer.model)\n            return [];\n\n        // Find the elements, then return the respective references as pairs\n        const elements = _.uniq(this.state.app_viewer.model.symbols);\n        const refs = this.state.ms_references;\n        return _.fromPairs(elements.map((el) => [el, refs[el] || 0]));\n    }\n\n    updateReferenceTable(data) {\n        this.dispatch({\n            type: 'call',\n            function: msSetReferences,\n            arguments: [data]\n        });\n    }\n\n    getReference(el) {\n        return this.state.ms_references[el] || 0.0;\n    }\n\n    // reset \n    reset() {\n        // reset the parent class \n        super.reset();\n        \n        // reset references\n        this.updateReferenceTable([null])\n\n        this.precision = initialMSState.ms_precision;\n        this.labelsMode = initialMSState.ms_labels_type;\n        this.hasEllipsoids = initialMSState.ms_ellipsoids_on;\n        this.ellipsoidScale = initialMSState.ms_ellipsoids_scale;\n\n        \n    }\n\n}\n\nfunction useMSInterface() {\n    let state = useSelector(makeCScaleSelector('ms', ['app_viewer', 'efg_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new MSInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useMSInterface;\nexport { initialMSState, msSetReferences };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialEFGState = {\n    efg_view: null,\n    efg_ellipsoids_on: false,\n    efg_ellipsoids_scale: 0.1,\n    efg_labels_type: 'none',\n    efg_precision: 2,\n};\n\n// Action creator\nconst efgAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass EFGInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.efg_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_on: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.efg_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_scale: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.efg_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(efgAction({ efg_labels_type: v }, [Events.EFG_LABELS]));\n    }\n\n    get precision() {\n        return this.state.efg_precision;\n    }\n\n    set precision(v) {\n        this.dispatch(efgAction({ 'efg_precision': v }, [Events.EFG_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'efg');\n    }\n\n    // reset \n    reset() {\n        // reset the parent class \n        super.reset();\n\n        // for some reason at least one needs to fire off like this to properly reset the cscale\n        // so this is a bit of a hack. Instead of doing:\n        // this.ellipsoidScale = initialEFGState.efg_ellipsoids_scale;\n        // we do:\n        this.dispatch(efgAction({ 'efg_ellipsoids_scale':  initialEFGState.efg_ellipsoids_scale}, [Events.CSCALE]));\n        \n        // the others can be reset like this\n        this.hasEllipsoids = initialEFGState.efg_ellipsoids_on;\n        this.labelsMode = initialEFGState.efg_labels_type;\n        this.precision = initialEFGState.efg_precision;\n        \n    }\n\n}\n\nfunction useEFGInterface() {\n    let state = useSelector(makeCScaleSelector('efg', ['app_viewer', 'ms_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EFGInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEFGInterface;\nexport { initialEFGState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from '@ccp-nc/crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialDipState = {\n    dip_view: null,\n    dip_link_names: [],\n    dip_links_on: false,\n    dip_central_atom: null,\n    dip_radius: 1.5,\n    dip_sphere_show: true,\n    dip_homonuclear: false,\n    dip_precision: 2,\n};\n\n\nclass DipInterface extends BaseInterface {\n\n    get isOn() {\n        return this.state.dip_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            dip_links_on: v,\n            listen_update: [ Events.DIP_LINKS ]\n        };\n\n        if (!v) \n            data.dip_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.dip_central_atom;\n    }\n\n    get radius() {\n        return this.state.dip_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.dip_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_homonuclear: v,\n                listen_update: [ Events.DIP_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.dip_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_sphere_show: v,\n                listen_update: [ Events.DIP_RENDER ]\n            }\n        });\n    }\n\n    get precision() {\n        return this.state.dip_precision;\n    }\n\n    set precision(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_precision: v,\n                listen_update: [ Events.DIP_LINKS ]\n            }\n        });\n    }\n\n    // reset options\n    reset() {\n        this.isOn = initialDipState.dip_links_on;\n        this.showSphere = initialDipState.dip_sphere_show;\n        this.precision = initialDipState.dip_precision;\n        this.homonuclearOnly = initialDipState.dip_homonuclear;\n        this.radius = initialDipState.dip_radius;\n    }\n\n\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('dip', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        dip_central_atom: a,\n                        listen_update: [ Events.DIP_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('dip', LC); \n    }\n\n}\n\nfunction useDipInterface() {\n    let state = useSelector(makeSelector('dip', ['app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new DipInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useDipInterface;\nexport { initialDipState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from '@ccp-nc/crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialJCoupState = {\n    jc_view: null,\n    jc_link_names: [],\n    jc_links_on: false,\n    jc_central_atom: null,\n    jc_radius: 1.5,\n    jc_sphere_show: true,\n    jc_homonuclear: false,\n    jc_precision: 2,\n};\n\n\nclass JCoupInterface extends BaseInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    get isOn() {\n        return this.state.jc_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            jc_links_on: v,\n            listen_update: [ Events.JC_LINKS ]\n        };\n\n        if (!v) \n            data.jc_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.jc_central_atom;\n    }\n\n    get radius() {\n        return this.state.jc_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.jc_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_homonuclear: v,\n                listen_update: [ Events.JC_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.jc_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_sphere_show: v,\n                listen_update: [ Events.JC_RENDER ]\n            }\n        });\n    }\n\n    get precision() {\n        return this.state.jc_precision;\n    }\n\n    set precision(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_precision: v,\n                listen_update: [ Events.JC_LINKS ]\n            }\n        });\n    }\n\n    // reset the state to the initial state\n    reset() {\n        this.isOn = initialJCoupState.jc_links_on;\n        this.showSphere = initialJCoupState.jc_sphere_show;\n        this.precision = initialJCoupState.jc_precision;\n        this.homonuclearOnly = initialJCoupState.jc_homonuclear;\n        this.radius = initialJCoupState.jc_radius;\n\n    }\n    \n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('jc', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        jc_central_atom: a,\n                        listen_update: [ Events.JC_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('jc', LC); \n    }\n\n}\n\nfunction useJCoupInterface() {\n    let state = useSelector(makeSelector('jc', ['app_click_handler', 'app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new JCoupInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useJCoupInterface;\nexport { initialJCoupState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, DataCheckInterface } from '../utils';\nimport { eulerBetweenTensors } from '../../../utils';\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from '@ccp-nc/crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst RC = CrystVis.RIGHT_CLICK;\n\nconst initialEulerState = {\n    eul_atom_A: null,\n    eul_newatom_A: null,\n    eul_tensor_A: 'ms',\n    eul_atom_B: null,\n    eul_newatom_B: null,\n    eul_tensor_B: 'ms',\n    eul_convention: 'zyz',\n    eul_results: null\n};\n\nconst tensorValues = new Set(['ms', 'efg']);\nconst conventionValues = new Set(['zyz', 'zxz']);\n\nfunction makeCallback(dispatch, ending='A') {    \n\n    function cback(a, e) {\n        dispatch({\n            type: 'update',\n            data: {\n                ['eul_newatom_' + ending]: a,\n                listen_update: [Events.EUL_ANGLES]\n            }\n        });\n    }\n\n    return cback;\n}\n\nfunction makeEulerAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.EUL_ANGLES]\n        }\n    };\n}\n\nclass EulerInterface extends DataCheckInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get convention() {\n        return this.state.eul_convention;\n    }\n\n    set convention(v) {\n        if (!conventionValues.has(v))\n            throw Error('Invalid Euler angles convention');\n        this.dispatch(makeEulerAction({eul_convention: v}));\n    }\n\n    _getAtomLabel(ending='A') {\n        let a = this.state['eul_atom_' + ending];\n        if (a)\n            return a.crystLabel\n        else\n            return 'Not selected'        \n    }\n\n    _setTensorType(v, ending='A') {\n        if (!tensorValues.has(v))\n            throw Error('Invalid NMR tensor for Euler angles');\n        this.dispatch(makeEulerAction({['eul_tensor_' + ending]: v}));\n    }\n\n    get atomA() {\n        return this.state.eul_atom_A;\n    }\n\n    get atomLabelA() {\n        return this._getAtomLabel('A');\n    }\n\n    get atomB() {\n        return this.state.eul_atom_B;\n    }\n\n    get atomLabelB() {\n        return this._getAtomLabel('B');\n    }\n\n    get tensorA() {\n        return this.state.eul_tensor_A;\n    }\n\n    set tensorA(v) {\n        this._setTensorType(v, 'A');\n    }\n\n    get tensorB() {\n        return this.state.eul_tensor_B;\n    }\n\n    set tensorB(v) {\n        this._setTensorType(v, 'B');        \n    }\n\n    _getResult(i, rad=false) {\n        let f = rad? 1.0 : 180/Math.PI;\n        let r = this.state.eul_results;\n        return r? (r[i]*f) : 'N/A';        \n    }\n\n    get alpha() {\n        return this._getResult(0);\n    }\n\n    get beta() {\n        return this._getResult(1);\n    }\n\n    get gamma() {\n        return this._getResult(2);\n    }\n\n    get alphaRad() {\n        return this._getResult(0, true);\n    }\n\n    get betaRad() {\n        return this._getResult(1, true);\n    }\n\n    get gammaRad() {\n        return this._getResult(2, true);\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC, makeCallback(dispatch, 'A'));\n        handler.setCallback('eul', RC, makeCallback(dispatch, 'B'));\n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC);\n        handler.setCallback('eul', RC);\n\n        this.dispatch(makeEulerAction({\n            eul_newatom_A: null,\n            eul_newatom_B: null\n        }));\n    }\n\n    txtReport() {\n        let report = 'Euler angles between tensors:\\n';\n\n        report += `${this.tensorA} on ${this.atomLabelA}\\nand\\n`;\n        report += `${this.tensorB} on ${this.atomLabelB}\\n\\n`;\n\n        report += `Convention: ${this.convention.toUpperCase()}\\n\\n`;\n\n        report += `Degrees:\\n${this.alpha}    ${this.beta}    ${this.gamma}\\n\\n`;\n        report += `Radiants:\\n${this.alphaRad}     ${this.betaRad}     ${this.gammaRad}`;\n\n        return report;\n    }\n\n    txtSelfAngleTable() {\n        // Return a full table of MS-to-EFG tensor angles for each atom\n        if (!(this.hasMSData && this.hasEFGData)) {\n            // Pointless\n            throw Error('Both MS and EFG tensors are needed to compute the table');\n        }\n\n        // Selection if available, otherwise displayed atoms\n        let targ = this.state.app_viewer.selected;\n        targ = (targ.length > 0)? targ : this.state.app_viewer.displayed;\n\n        const data = targ.map((a, i) => {\n            return [a.crystLabel, a.getArrayValue('ms'), a.getArrayValue('efg')];\n        });\n\n        let table = `Euler angles between MS and EFG tensors in radiants, convention: ${this.convention.toUpperCase()}\\n`;\n        let conv = this.convention;\n\n        data.forEach((d, i) => {\n\n            let [label, ms, efg] = d;\n\n\n            let [alpha, beta, gamma] = eulerBetweenTensors(ms, efg, conv);\n\n            table += `${label}    ${alpha}    ${beta}    ${gamma}\\n`;\n        });\n\n        return table;\n    }\n}\n\nfunction useEulerInterface() {\n    let state = useSelector(makeSelector('eul', ['app_viewer', 'app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EulerInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEulerInterface;\nexport { initialEulerState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { CallbackMerger, ClickHandler } from '../../../utils';\n\nimport { initialSelState } from './SelInterface';\nimport { initialCScaleState } from './CScaleInterface';\nimport { initialMSState } from './MSInterface';\nimport { initialEFGState } from './EFGInterface';\nimport { initialDipState } from './DipInterface';\nimport { initialJCoupState } from './JCoupInterface';\nimport { initialEulerState } from './EulerInterface';\n\nimport { Events } from '../listeners';\n\nimport CrystVis from '@ccp-nc/crystvis-js';\n\n\nconst initialAppState = {\n    app_viewer: null,\n    app_click_handler: null,\n    app_theme: 'dark',\n    app_sidebar: 'load',\n    app_default_displayed: null,\n    app_model_queued: null,\n    app_load_as_mol: null, // crystvis-js will try to figure out what's appropriate...\n    app_use_nmr_isos: true\n};\n\n// Functions meant to operate on the app alone.\n// These exist outside of the AppInterface because they will be invoked\n// directly from inside the reducer as special actions\nfunction appDisplayModel(state, m) {\n    let app = state.app_viewer;\n    let cm = app.model;\n\n    let data = {};\n    if (cm) {\n        // We turn visualizations off\n        data = {\n            ...initialSelState,\n            ...initialCScaleState,\n            ...initialMSState,\n            ...initialEFGState,\n            ...initialDipState,\n            ...initialJCoupState,\n            ...initialEulerState\n        };\n    }\n\n    // Return data for dispatch\n    return {\n        ...data,\n        app_model_queued: m,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS, Events.JC_LINKS]\n    };\n}\n\nfunction appReloadModel(m) {\n\n    let data = {};\n\n    // We turn visualizations off\n    data = {\n        ...initialSelState,\n        ...initialCScaleState,\n        ...initialMSState,\n        ...initialEFGState,\n        ...initialDipState,\n        ...initialJCoupState,\n        ...initialEulerState\n    };\n\n    // Return data for dispatch\n    return {\n        ...data,\n        app_model_queued: m,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS, Events.JC_LINKS]\n    };\n}\n\nfunction appDeleteModel(state, m) {\n    \n    let app = state.app_viewer;\n    let data = {};\n\n    // Delete a model\n    app.deleteModel(m);\n\n    let models = app.modelList;\n\n    if (!app.model && models.length > 0) {\n        // Let's display a different one\n        data = appDisplayModel(state, models[0]);\n    }\n\n    return data;\n}\n\nclass AppInterface extends BaseInterface {\n\n    get initialised() {\n        return this.viewer !== null;\n    }\n\n    get viewer() {\n        return this.state.app_viewer;\n    }\n\n    get models() {\n        let models = [];\n\n        if (this.initialised) {\n            models = this.viewer.modelList;\n        }\n\n        return models;\n    }\n\n    get currentModel() {\n        let model = null;\n\n        if (this.initialised) {\n            model = this.viewer.model;\n        }\n\n        return model;\n    }\n\n    get currentModelName() {\n        let model_name = null;\n\n        if (this.initialised) {\n            model_name = this.viewer.modelName;\n        }\n\n        return model_name;\n    }\n\n    get theme() {\n        return this.state.app_theme;\n    }\n\n    set theme(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_theme',\n            value: v\n        });\n    }\n\n    get sidebar() {\n        return this.state.app_sidebar;\n    }\n\n    set sidebar(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_sidebar',\n            value: v\n        });\n    }\n\n    get loadAsMol() {\n        return this.state.app_load_as_mol;\n    }\n    // if null, crystvis-js will check if the model constains C and H atoms and \n    // if so, will consider it a molecular crystal. Otherwise a boolean. \n    set loadAsMol(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_load_as_mol',\n            value: v\n        });\n    }\n\n    get useNMRIsotopes() {\n        return this.state.app_use_nmr_isos;\n    }\n\n    set useNMRIsotopes(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_use_nmr_isos',\n            value: v\n        });\n    }\n\n    initialise(elem) {\n        console.log('Initialising CrystVis app on element ' + elem);\n        // Initialise app but only if it's not already there\n        const vis = new CrystVis(elem);\n        vis.highlightSelected = true; // Our default\n        \n        const handler = new ClickHandler(vis, [\n            CrystVis.LEFT_CLICK,\n            CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON,\n            CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON,\n            CrystVis.RIGHT_CLICK\n        ]);\n\n        if (!this.initialised) {\n            this.dispatch({\n                type: 'update',\n                data: {\n                    app_viewer: vis,\n                    app_click_handler: handler\n                }\n            });\n        }\n    }\n\n    load(files, cback=null) {\n\n        /* Load from a list of files, running a callback with the aggregate\n        dictionary that reports the success for each of them */\n\n        if (!this.initialised) {\n            return;\n        }\n\n        let cbm = new CallbackMerger(files.length, cback);\n        let app = this.viewer;\n        let intf = this;\n        let params = {\n            supercell: [3, 3, 3],\n            molecularCrystal: this.loadAsMol,\n            useNMRActiveIsotopes: this.useNMRIsotopes\n        };\n\n        // Callback for each file after the FileReader is done\n        function onLoad(contents, name, extension) {\n            var success = app.loadModels(contents, extension, name, params);\n\n            // Find a valid one to load\n            var to_display = null;\n            _.map(success, (v, n) => {\n                if (v === 0) {                 \n                    to_display = n;\n                }\n            });\n\n            if (to_display) {\n                intf.display(to_display);\n            }\n\n            if (cback) {\n                cbm.call(success);\n            }\n        }\n\n        // Function that loads each individual file\n        function parseOne(f) {\n            \n            let reader = new FileReader();\n            // Extension and file name\n            let name = f.name.split('.')[0];\n            let extension = f.name.split('.').pop();\n\n            reader.onload = ((e) => { onLoad(e.target.result, name, extension) });\n            reader.readAsText(f);\n        }\n\n        _.forEach(files, parseOne);\n    }\n\n    display(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDisplayModel,\n            arguments: [m]\n        });\n    }\n\n    reload(m) {\n        this.dispatch({\n            type: 'call',\n            function: appReloadModel,\n            arguments: [m]\n        });\n    }\n\n    delete(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDeleteModel,\n            arguments: [m]\n        });\n    }\n\n}\n\n// Hook for interface\nfunction useAppInterface() {\n    let state = useSelector(makeSelector('app'), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new AppInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useAppInterface;\nexport { initialAppState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { loadImage } from '../../../utils';\nimport { makeSelector, DataCheckInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialPlotsState = {\n    plots_mode: 'none',\n    plots_use_refs: false,\n    plots_q2_shifts: true,\n    plots_show_axes: true,\n    plots_show_grid: true,\n    plots_bkg_img_url: null,\n    plots_bkg_img_w: 0,\n    plots_bkg_img_h: 0,\n    plots_min_x: 0,\n    plots_max_x: 100.0,\n    plots_min_y: 0,\n    plots_max_y: 5.0,\n    plots_peak_width: 2.0,\n    plots_x_steps: 100,\n    plots_data: null,\n    plots_show_labels: true,\n};\n\nfunction makePlotAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.PLOTS_RECALC]\n        }\n    };\n}\n\nclass PlotsInterface extends DataCheckInterface {\n\n    get mode() {\n        return this.state.plots_mode;\n    }\n\n    set mode(v) {\n        this.dispatch(makePlotAction({ plots_mode: v }));\n    }\n\n    get useQ2Shift() {\n        return this.state.plots_q2_shifts;\n    }\n\n    set useQ2Shift(v) {\n        this.dispatch(makePlotAction({ plots_q2_shifts: v }));\n    }\n\n    get useRefTable() {\n        return this.state.plots_use_refs;\n    }\n\n    set useRefTable(v) {\n        this.dispatch(makePlotAction({ \n            plots_use_refs: v,\n         }));\n    }   \n\n    get showAxes() {\n        return this.state.plots_show_axes;\n    }\n\n    set showAxes(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_show_axes: v\n            }\n        });\n    }\n\n    get showGrid() {\n        return this.state.plots_show_grid;\n    }\n\n    set showGrid(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_show_grid: v\n            }\n        });\n    }\n\n    get showLabels() {\n        return this.state.plots_show_labels;\n    }\n\n    set showLabels(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_show_labels: v\n            }\n        });\n    }\n    \n    get peakW() {\n        return this.state.plots_peak_width;\n    }\n\n    set peakW(v) {\n        this.dispatch(makePlotAction({ plots_peak_width: v }));\n    }\n\n    get rangeX() {\n        return [this.state.plots_min_x, this.state.plots_max_x];\n    }\n\n    get floatRangeX() {\n        let xmin = parseFloat(this.state.plots_min_x);\n        let xmax = parseFloat(this.state.plots_max_x);\n\n        xmin = isNaN(xmin)? 0.0 : xmin;\n        xmax = isNaN(xmax)? xmin+100.0 : xmax;\n\n        return [xmin, xmax];\n    }\n\n    get rangeY() {\n        return [this.state.plots_min_y, this.state.plots_max_y];        \n    }\n\n    get floatRangeY() {\n        let ymin = parseFloat(this.state.plots_min_y);\n        let ymax = parseFloat(this.state.plots_max_y);\n\n        ymin = isNaN(ymin)? 0.0 : ymin;\n        ymax = isNaN(ymax)? ymin+100.0 : ymax;\n\n        return [ymin, ymax];\n    }\n\n    get xSteps() {\n        return this.state.plots_x_steps;\n    }\n\n    set xSteps(v) {\n        this.dispatch(makePlotAction({ plots_x_steps: v }));\n    }\n\n    setRange(vmin=null, vmax=null, axis='x') {\n\n        if ('xy'.indexOf(axis) < 0) {\n            // Invalid axis\n            return;\n        }\n\n        vmin = (vmin === null? this.state['plots_min_' + axis] : vmin);\n        vmax = (vmax === null? this.state['plots_max_' + axis] : vmax);\n\n        this.dispatch({\n            type: 'update',\n            data: {\n                ['plots_min_' + axis]: vmin,\n                ['plots_max_' + axis]: vmax,\n                listen_update: [Events.PLOTS_RECALC]\n            }\n        });\n    }\n\n    get data() {\n        return this.state.plots_data;\n    }\n\n    // download existing svg\n    // TODO: there must be a way of selecting from the react component instead of \n    // using the DOM directly\n    downloadSVG() {\n        let node = \"#root > div > div > div.mv-control.mv-modal.mv-modal-draggable.mv-modal-resizable > div.mv-modal-content > div > div > svg\";\n        let svg = document.querySelector(node);\n        let svgData = new XMLSerializer().serializeToString(svg);\n        let svgBlob = new Blob([svgData], {type:\"image/svg+xml;charset=utf-8\"});\n        let svgUrl = URL.createObjectURL(svgBlob);\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = svgUrl;\n        downloadLink.download = \"plot.svg\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    }\n    // download data\n    downloadData() {\n        let data = this.data[0].data;\n        let csvContent = \"data:text/csv;charset=utf-8,\";\n        // x header depends on if use_refs is true\n        let xlabel = this.useRefTable? \"Chemical shift /ppm\" : \"Shielding /ppm\";\n        let factor = this.useRefTable? -1 : 1;\n        csvContent += xlabel + \", Intensity \\n\";\n        data.forEach(function(r) {\n            let row = factor*r.x + \", \" + r.y + \"\\n\";\n            csvContent += row;\n        });\n        let encodedUri = encodeURI(csvContent);\n        let link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", \"magresview_plot_data.csv\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n\n    get bkgImage() {\n        if (this.state.plots_bkg_img_url) {\n            return {\n                url: this.state.plots_bkg_img_url,\n                width: this.state.plots_bkg_img_w,\n                height: this.state.plots_bkg_img_h\n            };\n        }\n\n        return null;\n    }\n\n    loadBkgImage(files) {\n        const dispatch = this._dispatcher;\n        loadImage(files[0]).then((img) => {\n            dispatch({\n                type: 'update',\n                data: {\n                    plots_bkg_img_url: img.src,\n                    plots_bkg_img_w: img.naturalWidth,\n                    plots_bkg_img_h: img.naturalHeight\n                }\n            });\n        });\n    }\n\n    clearBkgImage() {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_bkg_img_url: null,\n                plots_bkg_img_w: 0,\n                plots_bkg_img_h: 0\n            }\n        });\n    }\n\n}\n\n// Hook for interface\nfunction usePlotsInterface() {\n    let state = useSelector(makeSelector('plots', ['app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new PlotsInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default usePlotsInterface;\nexport { initialPlotsState };\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface, getSel, getNMRData } from '../utils';\nimport { tableRow, eulerFromRotation, dipolarCoupling, jCoupling } from '../../../utils';\n\nconst initialFilesState = {\n    files_seltype: 'ms',\n    files_includeJ: false,\n    files_includeD: false,\n    files_includeEFG: true,\n    files_includeMS: true,\n    files_quadrupole_order: 2,\n};\n\nclass FilesInterface extends BaseInterface {\n\n    get fileType() {\n        return this.state.files_seltype;\n    }\n\n    set fileType(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'files_seltype',\n            value: v\n        });\n    }\n\n    get fileName() {\n        let app = this.state.app_viewer;\n        let mname = app.modelName;\n        let type = this.state.files_seltype;\n\n        if (mname) {\n            return `mvtable_${mname}_${type}.txt`;\n        }\n        else {\n            return 'N/A';\n        }\n    }\n\n    get fileValid() {\n        // Can we generate a file with these parameters?\n        let app = this.state.app_viewer;\n        if (!app || !app.model)\n            return false;\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                return this.hasMSData;\n            case 'efg':\n                return this.hasEFGData;\n            case 'isc':\n                return this.hasISCData;\n            case 'spinsys':\n                return (this.hasMSData && this.spinSysIncludeMS) || (this.hasEFGData && this.spinSysIncludeEFG) || this.spinSysIncludeD || (this.hasISCData && this.spinSysIncludeJ);\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    get spinSysIncludeD() {\n        return this.state.files_includeD;\n    }\n\n    set spinSysIncludeD(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                files_includeD: v\n            }\n        });\n    }\n\n    get spinSysIncludeJ() {\n        return this.state.files_includeJ;\n    }\n\n    set spinSysIncludeJ(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                files_includeJ: v\n            }\n        });\n    }\n    \n    get spinSysIncludeEFG() {\n        return this.state.files_includeEFG;\n    }\n\n    set spinSysIncludeEFG(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                files_includeEFG: v\n            }\n        });\n    }\n\n    get spinSysIncludeMS() {\n        return this.state.files_includeMS;\n    }\n\n    set spinSysIncludeMS(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                files_includeMS: v\n            }\n        });\n    }\n\n    get spinSysQuadrupoleOrder() {\n        return this.state.files_quadrupole_order;\n    }\n\n    set spinSysQuadrupoleOrder(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                files_quadrupole_order: v\n            }\n        });\n    }\n\n    get spinSysOptions() {\n        return {\n            includeD: this.state.files_includeD,\n            includeJ: this.state.files_includeJ,\n            includeEFG: this.state.files_includeEFG,\n            includeMS: this.state.files_includeMS,\n            quadrupoleOrder: this.spinSysQuadrupoleOrder\n        };\n        }\n        \n\n\n\n    generateFile() {\n\n        let contents = '';\n\n        // What are the atoms?\n        const app = this.state.app_viewer;\n        let view = null;\n\n        if (app && app.model) {\n            view = getSel(app);\n        }\n\n        if (!view) {\n            return null;\n        }\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                contents = this._msMakeTable(view);\n                break;\n            case 'efg':\n                contents = this._efgMakeTable(view);\n                break;\n            case 'dip':\n                contents = this._dipMakeTable(view);\n                break;\n            case 'isc':\n                contents = this._iscMakeTable(view);\n                break;\n            case 'spinsys':\n                contents = this._spinsysMakeTable(view, this.spinSysOptions);\n                break;\n            default:\n                return null;\n        }\n\n        return contents;\n    }\n\n    // Table generators\n    _msMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'MS Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 's_iso/ppm', \n                           'Anisotropy/ppm', 'Asymmetry', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const iso = getNMRData(view, 'iso', 'ms')[1];\n        const aniso = getNMRData(view, 'aniso', 'ms')[1];\n        const asymm = getNMRData(view, 'asymm', 'ms')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('ms');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index + 1, // 1-indexed\n                iso[i],\n                aniso[i],\n                asymm[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _efgMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'EFG Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Vzz/au', 'Anisotropy/au', \n                           'Asymmetry', 'Q/MHz', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const Vzz = getNMRData(view, 'e_z', 'efg')[1];\n        const aniso = getNMRData(view, 'aniso', 'efg')[1];\n        const asymm = getNMRData(view, 'asymm', 'efg')[1];\n        const Q = getNMRData(view, 'Q', 'efg')[1] / 1e6; // Convert to MHz\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('efg');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index + 1, // 1-indexed\n                Vzz[i],\n                aniso[i],\n                asymm[i],\n                Q[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _dipMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'Dipolar coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'D/kHz', 'r_x/Ang', 'r_y/Ang', 'r_z/Ang'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const [D, r] = dipolarCoupling(a1, a2);\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index + 1, // 1-indexed\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index + 1, // 1-indexed\n                    D,\n                    r[0], r[1], r[2]\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n\n    _iscMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'J coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'J/Hz'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const J = jCoupling(a1, a2);\n\n                if(!J)\n                    return; // No data\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index + 1, // 1-indexed\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index + 1, // 1-indexed\n                    J\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n\n    _spinsysMakeTable(view, options) {\n        // properties can contain 'shift', 'quadrupole', 'dipole' and 'jcoupling'\n        // Follow the soprano function here:\n        // https://github.com/CCP-NC/soprano/blob/master/soprano/calculate/nmr/simpson.py\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n        let table = '{spinsys\\n';\n\n        // channels: show unique isotopes + element label\n        table += 'channels ';\n        const nuclei = view.atoms.map((a) => (a.isotope + a.element));\n        const isotopes = new Set(nuclei);\n        table += Array.from(isotopes).join('    ');\n        table += '\\n'\n        \n        // nuclei\n        table += '    nuclei ';\n        table += nuclei.join('    ');\n        table += '\\n'\n\n        if (options.includeMS) {\n\n            // if there is no MS data, throw warning and skip\n            if (!this.hasMSData) {\n                console.warn('No MS data found. Skipping MS data in spinsys table.');\n            } else {\n                // Get the NMR data\n                // isotropic shift\n                const msiso = getNMRData(view, 'iso', 'ms')[1];\n                // reduced anisotropy\n                const msaniso = getNMRData(view, 'reduced_aniso', 'ms')[1];\n                // asymmetry parameter\n                const msasymm = getNMRData(view, 'asymm', 'ms')[1];\n                // Euler angles\n                // Euler angles\n                const euler = view.atoms.map((a) => {\n                    const T = a.getArrayValue('ms');\n                    return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n                });\n\n                view.atoms.forEach((a, i) => {\n                    table += tableRow([\n                        'shift',\n                        i + 1, // 1-indexed\n                        -msiso[i].toFixed(prec).toString()+'p',   // -isotropy (note minus sign!)\n                        -msaniso[i].toFixed(prec).toString()+'p', // -reduced anisotropy (note minus sign!)\n                        msasymm[i],  // asymmetry\n                        euler[i][0], // alpha\n                        euler[i][1], // beta\n                        euler[i][2], // gamma\n                    ], tabW, prec);\n                });\n            }\n        } // end shift\n\n        if (options.includeEFG) {\n            if (!this.hasEFGData) {\n                console.warn('No EFG data found. Skipping EFG data in spinsys table.');\n            }\n            else {\n                // Get the NMR data\n                // quadrupolar coupling\n                const q_order = options.quadrupoleOrder;\n\n                \n                if (q_order > 0) {\n                    if (q_order >2) {\n                        console.warn('Warning: quadrupole order > 2 not supported')\n                    }\n\n                    const Q = getNMRData(view, 'Q', 'efg')[1]\n                    const efgasym = getNMRData(view, 'asymm', 'efg')[1];\n                    const efgeuler = view.atoms.map((a) => {\n                        const T = a.getArrayValue('efg');\n                        return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n                    });\n\n                    view.atoms.forEach((a, i) => {\n                        let cq = Q[i]\n                        if (cq && cq !== 0.0) {\n                            table += tableRow([\n                                'quadrupole',\n                                i + 1, // 1-indexed\n                                q_order,\n                                cq * 1e6, // quadrupolar coupling TODO: what units?? Currently Hz\n                                efgasym[i],\n                                efgeuler[i][0], // alpha\n                                efgeuler[i][1], // beta\n                                efgeuler[i][2], // gamma\n                            ], tabW, prec);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (options.includeD) {\n            const atoms = view.atoms;\n            atoms.forEach((a1, i) => {\n                atoms.slice(i+1).forEach((a2, j) => {\n                    let [D, r] = dipolarCoupling(a1, a2);\n                    // angles TODO: check convention soprano has the angles the other way round\n                    const a = Math.atan2(-r[1], -r[0]) % (2*Math.PI);\n                    const b = Math.acos(-r[2]) % (2*Math.PI);\n                    // convert to degrees\n                    const a_deg = a*180.0/Math.PI;\n                    const b_deg = b*180.0/Math.PI;\n\n                    // convert D from Hz to rad/s\n                    // soprano seems to do this, but MGV1 not...?\n                    // D *= 2*Math.PI;\n\n                    table += tableRow([\n                        'dipole',\n                        j + 1, // 1-indexed\n                        i + 1, // 1-indexed\n                        D,\n                        a_deg,\n                        b_deg,\n                        0.0,\n                    ], tabW, prec);\n                });\n            });\n        }\n        // TODO: what are the rest of the jcoupling columns ?\n        // if (options.includeJ) {\n            // if (!this.hasJData) {\n            //     console.warn('No J data found. Skipping J data in spinsys table.');\n            // }\n            // else {\n            //     const atoms = view.atoms;\n            //     atoms.forEach((a1, i) => {\n            //         atoms.slice(i+1).forEach((a2, j) => {\n            //             const J = jCoupling(a1, a2);\n\n            //             if(J) {\n\n            //                 table += tableRow([\n            //                     'jcoupling',\n            //                     j + 1, // 1-indexed\n            //                     i + 1, // 1-indexed\n            //                     J\n            //                 ], tabW, prec);\n            //             }\n            //         });\n            //     });\n            // }\n        // }\n\n\n\n\n\n        // add closing bracket\n        table += '}';\n\n        return table;\n    }\n}\n\n// Hook for interface\nfunction useFilesInterface() {\n    let state = useSelector(makeSelector('files', ['app_viewer', \n                                                   'app_default_displayed', \n                                                   'eul_convention']), \n                            shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new FilesInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useFilesInterface;\nexport { initialFilesState };","import { createStore } from 'redux';\n\n// Initial state, merged from segments\nimport { initialAppState } from './interfaces/AppInterface';\nimport { initialSelState } from './interfaces/SelInterface';\nimport { initialCScaleState } from './interfaces/CScaleInterface';\nimport { initialMSState } from './interfaces/MSInterface';\nimport { initialEFGState } from './interfaces/EFGInterface';\nimport { initialDipState } from './interfaces/DipInterface';\nimport { initialJCoupState } from './interfaces/JCoupInterface';\nimport { initialEulerState } from './interfaces/EulerInterface';\nimport { initialPlotsState } from './interfaces/PlotsInterface';\nimport { initialFilesState } from './interfaces/FilesInterface';\nimport makeMasterListener, { initialListenerState } from './listeners';\n\n// Merging together\nconst initialState = {\n    ...initialAppState,\n    ...initialSelState,\n    ...initialCScaleState,\n    ...initialMSState,\n    ...initialEFGState,\n    ...initialDipState,\n    ...initialJCoupState,\n    ...initialEulerState,\n    ...initialFilesState,\n    ...initialPlotsState,\n    ...initialListenerState\n};\n\n// Reducer\nfunction storeReducer(state=initialState, action={type: 'none'}) {\n    switch(action.type) {\n        case 'set':\n            // Set a single value\n            state = {\n                ...state,\n                [action.key]: action.value,\n            };\n            break;\n        case 'update':\n            // Set multiple values\n            state = {\n                ...state,\n                ...action.data\n            };\n            break;\n        case 'call':\n            // Do complex stuff with state\n            let args = [state].concat(action.arguments);\n            let data = action.function(...args);\n            state = {\n                ...state,\n                ...data\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nconst magresStore = createStore(storeReducer);\nmagresStore.subscribe(makeMasterListener(magresStore));\n\nexport default magresStore;","import magresStore from './store';\nimport useAppInterface from './interfaces/AppInterface';\nimport useSelInterface from './interfaces/SelInterface';\nimport useMSInterface from './interfaces/MSInterface';\nimport useEFGInterface from './interfaces/EFGInterface';\nimport useDipInterface from './interfaces/DipInterface';\nimport useEulerInterface from './interfaces/EulerInterface';\nimport useJCoupInterface from './interfaces/JCoupInterface';\nimport usePlotsInterface from './interfaces/PlotsInterface';\nimport useFilesInterface from './interfaces/FilesInterface';\n\nexport default magresStore;\n\nexport { \n    useAppInterface, \n    useSelInterface, \n    useMSInterface, \n    useEFGInterface,\n    useDipInterface,\n    useJCoupInterface,\n    useEulerInterface,\n    usePlotsInterface,\n    useFilesInterface\n};","export default __webpack_public_path__ + \"static/media/logo.09fd6d2f.svg\";","import './controls.css';\nimport './MVCustomSelect.css';\n\nimport React, { useState, cloneElement, useEffect } from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\n\nimport { chainClasses } from '../utils';\n\nfunction MVCustomSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className='mv-control mv-cselect-opt' onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVCustomSelect(props) {\n\n    const [ show, setShow ] = useState(false);\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVCustomSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    // Translation?\n    let tstyle = {};    \n    \n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    // If disabled while open, must close\n    useEffect(() => {\n        if (props.disabled)\n            setShow(false);\n    }, [props.disabled]);\n\n    return (\n        <div style={tstyle} className={chainClasses('mv-control', 'mv-cselect', show? null : 'mv-cselect-closed', \n                                                    props.disabled? 'mv-cselect-disabled' : null )} \n            onMouseLeave={(e) => { setShow(false); }} title={props.title}>\n            <div className='mv-control mv-cselect-main' onClick={() => { setShow(true && (!props.disabled)); }}>\n                {options[selected]}\n                <span className='mv-cselect-main-caret'><FaCaretDown /></span>\n            </div>\n            <div className='mv-control mv-cselect-ddown'>\n                {options.map((o, i) => {\n                    return cloneElement(o, {key: i, onClick: () => { setShow(false); onSelect(values[i]); }});\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport { MVCustomSelectOption };\nexport default MVCustomSelect;","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMs(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg47\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-18.293285,-29.905846)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path31-3\",\n    style: {\n      fill: \"#ffffff\",\n      strokeWidth: 0.113242,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 20.409953,29.969924 a 2.0525921,2.0525921 0 0 0 -2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,-2.052588 2.0525921,2.0525921 0 0 0 -2.052588,-2.052588 z m 0,0.304891 a 1.7477165,1.7477165 0 0 1 1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,-1.747697 1.7477165,1.7477165 0 0 1 1.747697,-1.747697 z m 0,0.981852 a 0.76590603,0.76590603 0 0 0 -0.765845,0.765845 0.76590603,0.76590603 0 0 0 0.765845,0.765844 0.76590603,0.76590603 0 0 0 0.765844,-0.765844 0.76590603,0.76590603 0 0 0 -0.765844,-0.765845 z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMs);\nexport default __webpack_public_path__ + \"static/media/ms.f07fad56.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEfg(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379\",\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"M 2.5730992,0.53564415 C 2.0763787,1.0247144 2.1174995,2.1158593 2.1174995,2.1158593 c 0,0 1.090811,0.040787 1.5798807,-0.4559341 C 4.1697678,1.1801491 3.9991355,0.77827206 3.7271516,0.50620724 3.4550908,0.23406562 3.0528756,0.06325682 2.5730992,0.53564415 Z\",\n    id: \"path949\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"m 3.2382813,0.12109375 c -0.2336518,-0.021225 -0.4928561,0.0749413 -0.75,0.328125 C 2.2066461,0.72651627 2.0927766,1.1440416 2.0390625,1.4902344 1.9853484,1.8364272 1.9960938,2.1210938 1.9960937,2.1210938 L 2,2.2324219 l 0.1132813,0.00391 c 0,0 0.2827996,0.010832 0.6289062,-0.042969 C 3.0882941,2.1395587 3.5059251,2.0257566 3.7832031,1.7441406 4.0363717,1.4870123 4.1324787,1.2277171 4.1113281,0.99414063 4.0901775,0.7605642 3.9606182,0.56808419 3.8125,0.41992188 3.6643293,0.27170718 3.471933,0.14231875 3.2382813,0.12109375 Z m -0.021484,0.2421875 C 3.3722117,0.37739918 3.5167352,0.46787023 3.640625,0.59179687 3.7644904,0.71569911 3.8570292,0.86030307 3.8710938,1.015625 3.8851583,1.1709469 3.8305467,1.3515714 3.6113281,1.5742187 3.399537,1.7893233 3.0266438,1.9050922 2.7050781,1.9550781 c -0.251685,0.039123 -0.3754283,0.03197 -0.4570312,0.03125 -7.728e-4,-0.080876 -0.00797,-0.2062232 0.03125,-0.4589844 0.049905,-0.3216465 0.1638213,-0.69447771 0.3789062,-0.90624995 0.222632,-0.21920321 0.403179,-0.27193043 0.5585938,-0.2578125 z\",\n    id: \"path951\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 1.6602402,3.6976978 C 2.1569607,3.2086275 2.11584,2.1174825 2.11584,2.1174825 c 0,0 -1.0908111,-0.040787 -1.57988078,0.4559342 -0.4723876,0.4797762 -0.3017553,0.8816532 -0.0297709,1.153718 C 0.7782491,3.9992763 1.1804642,4.1700851 1.6602402,3.6976978 Z\",\n    id: \"path957\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1210938,1.9960937 c 0,0 -0.2847528,-0.010832 -0.6308594,0.042969 -0.3461066,0.053801 -0.76373761,0.1676027 -1.04101565,0.4492188 -0.25316852,0.2571283 -0.34927569,0.5164235 -0.328125,0.75 C 0.14224444,3.4718577 0.27180335,3.6643377 0.41992188,3.8125 0.56809254,3.9607147 0.76048898,4.0901031 0.99414063,4.1113281 1.2277923,4.1325531 1.48895,4.0363868 1.7460937,3.7832031 2.0277289,3.5059056 2.1396453,3.0883803 2.1933594,2.7421875 2.2470735,2.3959947 2.2363281,2.1132813 2.2363281,2.1132813 L 2.2324219,2 Z M 1.9863281,2.2480469 c 7.439e-4,0.081628 0.00781,0.2052829 -0.03125,0.4570312 C 1.9051725,3.0267247 1.7912568,3.3995559 1.5761719,3.6113281 1.3535401,3.8305313 1.1710397,3.8852117 1.015625,3.8710938 0.86021029,3.8569758 0.71568671,3.7645516 0.59179687,3.640625 0.46793127,3.5167228 0.37734588,3.3721188 0.36328125,3.2167969 0.34921662,3.061475 0.40382827,2.8808505 0.62304687,2.6582031 0.83483802,2.4430985 1.2057781,2.3292828 1.5273437,2.2792969 1.7800414,2.2400162 1.905477,2.2472982 1.9863281,2.2480469 Z\",\n    id: \"path959\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 2.1132813,1.9960937 2,2 1.9960937,2.1132813 c 0,0 -0.010745,0.2827134 0.042969,0.6289062 0.053714,0.3461928 0.1675836,0.7637181 0.4492188,1.0410156 0.2571437,0.2531837 0.5163483,0.34935 0.75,0.328125 C 3.4719329,4.0901031 3.6643293,3.9607147 3.8125,3.8125 3.9606185,3.6643377 4.0901775,3.4718577 4.1113281,3.2382813 4.1324788,3.0047048 4.0363716,2.7454096 3.7832031,2.4882813 3.5059251,2.2066652 3.0882941,2.0928632 2.7421875,2.0390625 2.3960809,1.9852618 2.1132812,1.9960937 2.1132813,1.9960937 Z m 0.1347656,0.2519532 c 0.081645,-7.179e-4 0.2054038,-0.00786 0.4570312,0.03125 0.3215657,0.049986 0.6944589,0.1638016 0.90625,0.3789062 C 3.8305467,2.8808505 3.8851584,3.061475 3.8710938,3.2167969 3.8570291,3.3721188 3.7644906,3.5167228 3.640625,3.640625 3.5167352,3.7645516 3.3722116,3.8569758 3.2167969,3.8710938 3.0613821,3.8852117 2.8808349,3.8305313 2.6582031,3.6113281 2.4431182,3.3995559 2.3292024,3.0267247 2.2792969,2.7050781 2.2402454,2.4533874 2.2473047,2.3297177 2.2480469,2.2480469 Z\",\n    id: \"path4379-8-7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 0.99414063,0.12304687 C 0.76052273,0.14426881 0.56808207,0.27367078 0.41992188,0.421875 0.27181384,0.57002685 0.14224137,0.76255105 0.12109375,0.99609375 0.09994613,1.2296364 0.19606487,1.4889803 0.44921875,1.7460937 0.72646854,2.0276811 1.1441384,2.1415134 1.4902344,2.1953125 c 0.346096,0.053799 0.6308594,0.042969 0.6308594,0.042969 l 0.1113281,-0.00391 0.00391,-0.1132812 c 0,0 0.010744,-0.2827241 -0.042969,-0.6289063 C 2.1396469,1.1460053 2.0277002,0.72844112 1.7460937,0.45117188 1.4889649,0.19800288 1.2277585,0.10182494 0.99414063,0.12304687 Z M 1.015625,0.36328125 c 0.1554485,-0.014121 0.3379002,0.0405478 0.5605469,0.25976562 0.2151136,0.21180052 0.328999,0.58459283 0.3789062,0.90625003 0.039228,0.2528276 0.032025,0.3781486 0.03125,0.4589843 -0.08081,7.505e-4 -0.2062203,0.00804 -0.4589844,-0.03125 C 1.2057675,1.9070437 0.83486627,1.7913052 0.62304687,1.5761719 0.40381362,1.3535096 0.34921357,1.1729338 0.36328125,1.0175781 0.37734893,0.86222244 0.46792083,0.71766269 0.59179687,0.59375 0.71569719,0.46981287 0.86017652,0.37740225 1.015625,0.36328125 Z\",\n    id: \"path4379-8-7-9\"\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEfg);\nexport default __webpack_public_path__ + \"static/media/efg.dd4cc518.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDip(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path1204\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffb\",\n      strokeWidth: 0.214,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 4.089079,2.0563225 c 0,1.0289629 -0.8331367,1.8631023 -1.3433946,1.8631023 -0.5102579,-10e-8 -0.5044128,-0.8341394 -0.5044128,-1.8631023 0,-1.0289628 -0.00584,-1.86310211 0.5044128,-1.86310221 0.5102579,0 1.3433946,0.83413931 1.3433946,1.86310221 z\",\n    id: \"path1994\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 2.7460938,0.0859375 c -0.1567163,3e-8 -0.2914586,0.07367204 -0.3789063,0.18945313 C 2.2797398,0.39117171 2.2300544,0.54136545 2.1972656,0.71875 c -0.065577,0.3547691 -0.0625,0.8236122 -0.0625,1.3378906 0,0.5142784 -0.00308,0.9811683 0.0625,1.3359375 0.032788,0.1773846 0.082474,0.3295313 0.1699219,0.4453125 0.087448,0.1157812 0.2221891,0.1894531 0.3789063,0.1894531 0.3134343,0 0.6597622,-0.2320725 0.9453125,-0.5859374 0.2855502,-0.353865 0.5039062,-0.841406 0.5039062,-1.3847657 0,-0.5433597 -0.218356,-1.0309007 -0.5039062,-1.3847656 C 3.405856,0.31801006 3.0595281,0.0859375 2.7460938,0.0859375 Z m 0,0.21484375 c 0.196823,0 0.5207148,0.18541461 0.7792968,0.50585938 0.258582,0.32044477 0.4570313,0.76439787 0.4570313,1.24999997 0,0.4856022 -0.1984493,0.9295552 -0.4570313,1.25 C 3.2668086,3.6270854 2.9429167,3.8125 2.7460938,3.8125 2.6476822,3.8125 2.5920753,3.7817592 2.5371094,3.7089844 2.4821435,3.6362095 2.4377356,3.5132859 2.4082031,3.3535156 2.3491381,3.0339751 2.3476563,2.5713242 2.3476563,2.0566406 c 0,-0.5146833 0.00148,-0.9792875 0.060547,-1.2988281 0.029533,-0.1597703 0.07394,-0.28074067 0.1289063,-0.35351562 0.054966,-0.072775 0.1105744,-0.10351561 0.2089844,-0.10351563 z\",\n    id: \"path1996\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 1.4882812,0.09765625 c -0.3134344,0 -0.66171528,0.23207255 -0.94726558,0.5859375 C 0.25546533,1.0374587 0.03710938,1.5249996 0.03710937,2.0683594 c 0,0.5433597 0.21835596,1.0309007 0.50390625,1.3847656 0.2855503,0.3538649 0.63383118,0.5839844 0.94726558,0.5839844 0.1567172,-1e-7 0.2914583,-0.071719 0.3789063,-0.1875 0.087448,-0.1157812 0.1371335,-0.2679279 0.1699219,-0.4453125 0.065577,-0.3547692 0.0625,-0.8216592 0.0625,-1.3359375 0,-0.5142785 0.00308,-0.9831215 -0.0625,-1.33789065 C 2.0043206,0.5530842 1.9546352,0.40289046 1.8671875,0.28710938 1.7797398,0.17132829 1.6449975,0.09765628 1.4882812,0.09765625 Z m 0,0.21484375 c 0.09841,2e-8 0.1540186,0.0307407 0.2089844,0.10351563 0.054966,0.0727749 0.099374,0.19374531 0.1289063,0.35351562 0.059066,0.31954065 0.058594,0.78414475 0.058594,1.29882815 0,0.5146835 4.713e-4,0.9773345 -0.058594,1.296875 -0.029532,0.1597702 -0.07394,0.2826939 -0.1289063,0.3554687 -0.054966,0.072775 -0.1105728,0.1035156 -0.2089844,0.1035157 -0.196823,0 -0.52266797,-0.1854147 -0.78124995,-0.5058594 -0.25858198,-0.3204448 -0.45507812,-0.7643979 -0.45507812,-1.25 0,-0.4856022 0.19649614,-0.9295553 0.45507812,-1.25000002 C 0.96561323,0.4979146 1.2914582,0.3125 1.4882812,0.3125 Z\",\n    id: \"path1204-3\"\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDip);\nexport default __webpack_public_path__ + \"static/media/dip.4ab1e1ee.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgJcoup(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g2792\",\n    transform: \"translate(-0.12942697,-0.24771585)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 0.86132813,2.609375 a 0.25,0.25 0 0 0 -0.25000001,0.25 c 0,0.4485824 0.23846935,0.8635994 0.62695308,1.0878906 0.3884838,0.2242913 0.8693287,0.2242912 1.2578126,0 C 2.8845776,3.7229744 3.125,3.3079575 3.125,2.859375 a 0.25,0.25 0 0 0 -0.25,-0.25 0.25,0.25 0 0 0 -0.25,0.25 c 0,0.2707514 -0.1444286,0.5208743 -0.3789062,0.65625 -0.2344777,0.1353757 -0.523335,0.1353757 -0.7578126,0 C 1.2538037,3.3802493 1.1113281,3.1301264 1.1113281,2.859375 a 0.25,0.25 0 0 0 -0.24999997,-0.25 z\",\n    id: \"path2096\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 V 2.859375 a 0.25,0.25 0 0 0 0.25,0.25 0.25,0.25 0 0 0 0.25,-0.25 V 0.86328125 a 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1171875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 0.25,0.25 0 0 0 0.25,0.24999995 h 1.5136719 a 0.25,0.25 0 0 0 0.25,-0.24999995 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453-6\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJcoup);\nexport default __webpack_public_path__ + \"static/media/jcoup.2bc45a9a.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEuler(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g23220\",\n    transform: \"translate(-0.12438843,0.37954715)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.70134777,2.576951 H 3.7807629 V 3.0747627 H 0.70134777 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247-3\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    transform: \"rotate(-45)\",\n    d: \"M -1.5022547,2.2452056 H 1.5771604 V 2.7430173 H -1.5022547 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.95025361,2.8258569 A 0.24890584,0.24890584 0 0 1 0.70134777,3.0747628 0.24890584,0.24890584 0 0 1 0.45244193,2.8258569 0.24890584,0.24890584 0 0 1 0.70134777,2.5769511 0.24890584,0.24890584 0 0 1 0.95025361,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 3.1277298,0.64838237 A 0.24890584,0.24890584 0 0 1 2.878824,0.8972882 0.24890584,0.24890584 0 0 1 2.6299182,0.64838237 0.24890584,0.24890584 0 0 1 2.878824,0.39947653 0.24890584,0.24890584 0 0 1 3.1277298,0.64838237 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5-6\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 4.0296685,2.8258569 A 0.24890584,0.24890584 0 0 1 3.7807627,3.0747628 0.24890584,0.24890584 0 0 1 3.5318568,2.8258569 0.24890584,0.24890584 0 0 1 3.7807627,2.5769511 0.24890584,0.24890584 0 0 1 4.0296685,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-6\",\n    style: {\n      fill: \"#505050\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: 8.64555,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 2.0206488,1.4219955 1.735275,1.725696 A 1.5092943,1.5092943 0 0 1 2.2104616,2.811338 L 2.6276135,2.807408 A 1.9264272,1.9264272 0 0 0 2.0206488,1.4219955 Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEuler);\nexport default __webpack_public_path__ + \"static/media/euler.04feefb4.svg\";\nexport { ForwardRef as ReactComponent };","import './MVIcon.css';\n\nimport React from 'react';\n\nimport { ReactComponent as MSIcon } from './ms.svg';\nimport { ReactComponent as EFGIcon } from './efg.svg';\nimport { ReactComponent as DipIcon } from './dip.svg';\nimport { ReactComponent as JcoupIcon } from './jcoup.svg';\nimport { ReactComponent as EulerIcon } from './euler.svg';\n\nconst icons = {\n    ms: MSIcon,\n    efg: EFGIcon,\n    dip: DipIcon,\n    jcoup: JcoupIcon,\n    euler: EulerIcon,\n};\n\nfunction MVIcon(props) {\n\n    if (!(props.icon in icons)) {\n        throw new Error('Invalid icon in MVIcon');\n    }\n\n    const Icon = icons[props.icon];\n    const color = (props.color || '#ffffff');\n\n    return (\n        <Icon className='mv-icon' style={{'--path-fill': color}} {...props}/>\n        );\n}\n\nexport default MVIcon;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewHeader.css';\nimport logo from '../icons/logo.svg';\nimport { FaSun, FaMoon, FaRegFolderOpen, FaMousePointer, FaFile, FaBan } from 'react-icons/fa';\nimport { GiHistogram } from 'react-icons/gi';\n\nimport React from 'react';\nimport MVCustomSelect, { MVCustomSelectOption } from '../controls/MVCustomSelect';\nimport MVIcon from '../icons/MVIcon';\nimport { useAppInterface } from './store';\n\nfunction ThemeSwitcher() {\n\n    const appint = useAppInterface();\n\n    const other = {\n        dark: 'light',\n        light: 'dark'\n    };\n\n    return (<div id='mv-themeswitch' onClick={() => { appint.theme = other[appint.theme]; }}>\n        <div id='mv-themeicons' className={appint.theme}>\n            <FaMoon id='mv-themedark'/>\n            <FaSun id='mv-themelight'/>\n        </div>\n    </div>);\n}\n\nfunction MagresViewHeader() {\n\n    const appint = useAppInterface();\n\n    return (<header className='mv-header'>\n        <div className='mv-header-left'>\n            <img src={logo} alt='MagresView logo' id='mv-header-logo'></img>\n            <h3 id='mv-header-title'>\n                <span style={{color: 'var(--ms-color-2)'}}>M</span>agres<span style={{color: 'var(--efg-color-2)'}}>V</span>iew 2.0\n            </h3>\n        </div>\n        <div className='mv-header-right'>\n            <MVCustomSelect onSelect={(v) => { appint.sidebar = v; }} selected={appint.sidebar}>\n                <MVCustomSelectOption value='load' icon={<FaRegFolderOpen />}>Load file</MVCustomSelectOption>\n                <MVCustomSelectOption value='select' icon={<FaMousePointer />}>Select and display</MVCustomSelectOption>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>Magnetic Shielding</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>Electric Field Gradient</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='jcoup' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='euler' icon={<MVIcon icon='euler' color='var(--bkg-color-3)'/>}>Euler Angles</MVCustomSelectOption>\n                <MVCustomSelectOption value='plots' icon={<GiHistogram />}>Spectral plots</MVCustomSelectOption>\n                <MVCustomSelectOption value='files' icon={<FaFile />}>Report files</MVCustomSelectOption>\n                <MVCustomSelectOption value='none' icon={<FaBan />}>No sidebar</MVCustomSelectOption>\n            </MVCustomSelect>            \n            <span className='mv-hor-sep-3'></span>\n            <ThemeSwitcher />\n        </div>\n    </header>);\n}\n\nexport default MagresViewHeader;\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewScreenshot.css';\n\nimport { FaCamera } from 'react-icons/fa';\nimport useAppInterface from './store/interfaces/AppInterface';\nimport { saveImage } from '../utils';\n\n\nfunction MagresViewScreenshot(props) {\n\n    const appint = useAppInterface();\n\n    function takeScreenshot() {\n        let data = appint.viewer.getScreenshotData();\n        saveImage(data, 'MagresViewScreenshot.png');\n    }\n\n    return (<div className='mv-sshot' onClick={takeScreenshot}>\n        <FaCamera />\n        <div className='mv-sshot-text'>\n            Take a screenshot\n        </div>\n    </div>);\n}\n\nexport default MagresViewScreenshot;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewSidebar.css';\n\nimport React from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\n\nimport { chainClasses } from '../../utils';\nimport { useAppInterface } from '../store';\n\nfunction MagresViewSidebar(props) {\n\n    const appint = useAppInterface();\n\n    return (<div className={chainClasses('mv-sidebar', props.show? 'open' : '')}>\n        <div className='mv-sidebar-title'>\n            {props.title? <h2>{props.title}</h2> : null}            \n            <FaAngleDoubleRight className='mv-sidebar-hide' onClick={() => { appint.sidebar = 'none'; }} />\n        </div>\n        {props.children}\n    </div>);\n}\n\nexport default MagresViewSidebar;","import './MVFile.css';\nimport { chainClasses } from '../utils';\n\nimport React from 'react';\n\nfunction MVFile(props) {\n\n    function onChange(e) {\n        if (props.onSelect) {\n            var files = e.target.files;\n            if (files.length > 0) {\n                props.onSelect(files);\n            }\n        }\n        e.target.value = null;\n    }\n\n    return (\n        <input className={chainClasses('mv-control', 'mv-file', props.notext? 'hide-text' : null)} type='file' \n            accept={props.filetypes} \n            onChange={onChange} \n            multiple={props.multiple}\n        />\n    );\n}\n\nexport default MVFile;","import './MVBox.css';\nimport React from 'react';\nimport { GrFormClose } from 'react-icons/gr';\n\nimport { chainClasses } from '../utils';\n\nfunction MVBox(props) {\n\n    const status_class = (props.status)? 'mv-box-' + props.status : '';\n    const onClose = props.onClose || (() => {});\n\n    return (<div className={chainClasses('mv-control', 'mv-box', status_class)}>\n        <div className='mv-box-header'><GrFormClose onClick={onClose} size={22}/></div>\n        {props.children}\n    </div>);\n}\n\nexport default MVBox;","import './MVCheckBox.css';\n\nimport React from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVCheckBox(props) {\n\n    const id = useId('checkbox');\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    const onCheck = props.onCheck || (() => {});\n\n    return (\n        <span className='mv-control mv-checkbox' style={style} title={props.title}>\n            <input id={id} type='checkbox' checked={props.checked} onChange={(e) => onCheck(e.target.checked)}/>\n            <label htmlFor={id}/>{props.children}\n        </span>\n    );\n}\n\nexport default MVCheckBox;","import './controls.css';\nimport './MVListSelect.css';\n\nimport React, { cloneElement } from 'react';\n\nimport { chainClasses } from '../utils';\n\nfunction MVListSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className={chainClasses('mv-control', 'mv-lselect-opt', props.selected? 'mv-lselected': null)} \n             onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVListSelect(props) {\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVListSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    return (\n        <div className='mv-control mv-lselect' title={props.title}>\n            {options.map((o, i) => {\n                return cloneElement(o, {key: i, selected: (i === selected),\n                                        onClick: () => { onSelect(values[i]); }});\n            })}\n        </div>\n    );\n}\n\n\nexport { MVListSelectOption };\nexport default MVListSelect;","import { usePopperTooltip } from 'react-popper-tooltip';\nimport 'react-popper-tooltip/dist/styles.css';\nimport { BsFillInfoSquareFill } from 'react-icons/bs';\nimport './MVTooltip.css';\n\n\n\nimport React, { useState } from 'react';\n\n\nconst MVTooltip = ({tooltipText}) => {\n\n    const [isVisible, setIsVisible] = useState(false)\n\n    const {\n        getArrowProps,\n        getTooltipProps,\n        setTooltipRef,\n        setTriggerRef,\n        visible,\n      } = usePopperTooltip({\n        trigger: 'hover',\n        closeOnOutsideClick: false,\n        visible: isVisible,\n        onVisibleChange: setIsVisible\n      })\n    return (\n        <>\n            <div className=\"field-info\" ref={setTriggerRef}>\n                <BsFillInfoSquareFill size={16} style={{color: 'var(--ms-color-2)'}}/ >\n            </div>\n            {visible && (\n            <div\n                ref={setTooltipRef}\n                {...getTooltipProps({ className: 'tooltip-container' })}\n            >\n                {tooltipText}\n                <div {...getArrowProps({ className: 'tooltip-arrow' })} />\n            </div>\n            )}\n        </>\n    )\n}\n\nexport default MVTooltip;","// Helper tooltip messages for the sidebar elements\n\n//  --- Load file sidebar ---\nexport const tooltip_molecular_crystal = <div>\n    <p>MagresView tries to identify molecular units within the crystal structure. <br />\n        It can then draw the correct periodic image of each atom such that full molecular units are visible. <br />\n        This is especially useful for molecular crystals.\n    </p>\n    <p>\n        <b>Auto:</b> (default): it will do a very basic check to see if your structure looks organic (if it has C and H atoms).\n        If it does, it will load it as a molecular crystal. <br />\n        <b>Yes:</b> it will load the structure as a molecular crystal. <br />\n        <b>No:</b> display structure exactly as in the loaded file.\n    </p>\n</div>;\nexport const tooltip_nmr_active = <div>\n    <p> MagresView will default to assuming NMR-active isotopes for each element, rather than the most abundant isotope. <br />\n        You can disable this by unchecking this box. <br />\n    </p>\n    <p>\n        To set a custom isotope for each atom/element, use the <b>Select and display</b> tab.\n    </p>\n</div>;\n\n\n//  --- Select and display sidebar ---\n// isotope selection\nexport const tooltip_isotope_select = <div>\n    Select either a single atom or group of atoms with the same element and then select their isotope.\n    By default these are set to the NMR-active isotope for each element.\n    You can easily see what isotopes have been set by setting the \"Label by\" dropdown to \"Isotope\".\n</div>\n\n// --- Magnetic shielding sidebar ---\n","import MagresViewSidebar from './MagresViewSidebar';\n\nimport { AiFillEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { IoMdRefresh } from 'react-icons/io';\nimport { MdDeleteForever } from 'react-icons/md';\n\nimport MVFile from '../../controls/MVFile';\nimport MVBox from '../../controls/MVBox';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVListSelect, { MVListSelectOption } from '../../controls/MVListSelect';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport MVTooltip from '../../controls/MVTooltip';\nimport { useAppInterface } from '../store';\n\n\nimport React, { useState } from 'react';\n/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\nimport { tooltip_molecular_crystal, tooltip_nmr_active } from './tooltip_messages';\n\n// Accepted file formats\nconst file_formats = ['.cif', '.xyz', '.magres', '.cell'];\n\nfunction MVSidebarLoad(props) {\n\n    const [ state, setState ] = useState({\n        load_message: '',\n        load_message_status: null,\n        list_selected: ''\n    });\n\n    const appint = useAppInterface();\n    const models = appint.models;\n\n    console.log('[MVSidebarLoad rendered]');\n\n    // Methods\n    function loadModel(f) {\n\n        appint.load(f, (success) => {\n            // Check success\n            let msg = '';\n            let err = false;\n            _.map(success, (v, n) => {\n                if (v !== 0) {\n                    msg += 'Error parsing file ' + n + ': ' + v + '\\n';\n                    err = true;\n                }\n            });\n            if (msg === '') {\n                msg = 'All files parsed successfully!'\n            }\n\n            setState({\n                ...state,\n                load_message: msg, \n                load_message_status: err? 'error' : 'success'\n            });\n        });\n    }\n\n    function makeModelOption(m, i) {\n\n        let model_icon;        \n        if (m === appint.currentModelName) {\n            model_icon = <AiFillEye size={22}/>;\n        }\n        else {\n            model_icon = <AiOutlineEyeInvisible size={22} onClick={() => { appint.display(m); }} />\n        }\n\n        return (<MVListSelectOption key={i} value={m} icon={model_icon}>\n            {m}\n            <IoMdRefresh style={{color: 'var(--dark-color-1)'}} size={22} onClick={() => { appint.reload(m); }}/>\n            <MdDeleteForever style={{color: 'var(--err-color-2)'}} size={22} onClick={() => { appint.delete(m); }}/>\n        </MVListSelectOption>);\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Load file'>\n        <div className='mv-sidebar-block'>\n            <MVFile filetypes={file_formats.join(',')} onSelect={loadModel} notext={true} multiple={true}/>\n            <span className='sep-1' />\n            <div className='mv-sidebar-block'>\n                <div className='mv-sidebar-tooltip-grid'>\n                    <div>Display unwrapped molecular units?&nbsp;</div>\n                    <MVTooltip tooltipText={tooltip_molecular_crystal} />\n                    <MVCustomSelect onSelect={(v) => { appint.loadAsMol = v; }} selected={appint.loadAsMol} name='loadasmol_dropdown'>\n                        <MVCustomSelectOption value={null}>Auto</MVCustomSelectOption>\n                        <MVCustomSelectOption value={true}>Yes</MVCustomSelectOption>\n                        <MVCustomSelectOption value={false}>No</MVCustomSelectOption>\n                    </MVCustomSelect>\n                </div>\n            </div>\n            <span className='sep-1' />\n            <div className='mv-sidebar-block'>\n                <div className='mv-sidebar-tooltip-grid'>\n                    <MVCheckBox onCheck={(v) => { appint.useNMRIsotopes = v }} checked={appint.useNMRIsotopes}>Use only NMR active isotopes</MVCheckBox>\n                    <MVTooltip tooltipText={tooltip_nmr_active} />\n                </div>\n            </div>\n        </div>\n        <h4>Files loaded:</h4>\n        <MVListSelect selected={state.list_selected} onSelect={(v) => { setState({...state, list_selected: v}); appint.display(v);}}>\n            {models.map(makeModelOption)}\n        </MVListSelect>\n        <span className='sep-1' />\n        <MVBox status={state.load_message_status} onClose={() => {setState({...state, load_message_status: ''})}}>\n            {state.load_message}\n        </MVBox>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarLoad;","import './MVButton.css';\nimport React from 'react';\n\nfunction MVButton(props) {\n    return (\n    <div className='mv-control'>\n        <button {...props} className='mv-control mv-button'>\n            {props.children}\n        </button>\n    </div>);\n}\n\nexport default MVButton;","import './MVRadioButton.css';\nimport _ from 'lodash';\n\nimport React, { cloneElement } from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVRadioButton(props) {\n\n    const uid = useId('radiobutton');\n\n    return (<span className='mv-control mv-radio' title={props.title}>\n        <input id={uid} name={props.name} type=\"radio\" checked={props.checked} onChange={props.onChange}/>\n        <label htmlFor={uid}></label>{props.children}\n    </span>);\n}\n\nfunction MVRadioGroup(props) {\n\n    // Which children are buttons?\n    const buttons = _.filter(props.children, (c) => c.type === MVRadioButton);\n    const values = buttons.map((b) => b.props.value);\n\n    // Find the index of the one we want selected\n    const selected = values.findIndex((v) => v === props.selected);\n    const onChange = props.onSelect? props.onSelect : (() => {});\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    return(<span className='mv-control mv-radiogroup' style={style} title={props.title}>\n        {props.label? <span className=\"mv-radiogroup-label\" style={props.labelStyle}>{props.label}</span> : null}\n        {buttons.map((b, i) => {\n            return cloneElement(b, {key: i, \n                index: i, \n                checked: (i === selected), \n                name: props.name, \n                onChange: (e) => { onChange(b.props.value); }\n            });\n        })}\n    </span>);\n}\n\nexport { MVRadioGroup };\nexport default MVRadioButton;","import './MVText.css';\n\nimport React, { useState } from 'react';\n\nimport { chainClasses, useId } from '../utils';\n\nfunction MVText(props) {\n\n    const [submitted, setSubmitted] = useState(true);\n    const id = useId('text');\n\n    var filter = null;\n    if (props.filter)\n        filter = new RegExp(props.filter);\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n    }\n\n    const waitSubmit = (props.onSubmit && !submitted);\n\n    function onChange(e) {\n        var v = e.target.value;\n        if (filter) {\n            let m = filter.exec(v)\n            v = m? m[0] : props.value;\n        }\n        setSubmitted(false);\n        if(props.onChange)\n            props.onChange(v);\n    }\n\n    function onKeyDown(e) {\n        if (e.key === 'Enter') {\n            if (waitSubmit)\n                props.onSubmit(props.value);\n            setSubmitted(true);\n        }\n    }\n\n    return (\n    <span className='mv-text' style={style} title={props.title}>\n        {props.children? <label htmlFor={id} className='mv-textlabel'>{props.children}</label> : <></>}\n        <input type='text' id={id} className={chainClasses('mv-control mv-textfield', waitSubmit? 'mv-submit-wait' : '')} \n            size={props.size} value={props.value}\n            onChange={onChange} onKeyDown={onKeyDown}\n            disabled={props.disabled}\n        />\n    </span>);\n}\n\nexport default MVText;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarSelect.css';\n\nimport _ from 'lodash';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useSelInterface } from '../store';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVText from '../../controls/MVText';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\n\nfunction sharedElement(sel) {\n    if (sel == null || sel.atoms.length === 0) {\n        return null;\n    }\n\n    let atoms = sel.atoms;\n    let el = atoms[0].element;\n\n    if (atoms.slice(1).reduce((s, a) => (s && a.element === el), true)) {\n        return el;\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction MVIsotopeSelection(props) {\n\n    // Actually unnecessary; we only use it to trigger a re-render\n    const [ state, setState ] = useState(1);\n\n    const selint = useSelInterface();\n    const selected = selint.selected;\n    const el = sharedElement(selected);\n\n    let elData = null;\n    let isoConf = null;\n    let selOptions = [];\n    let currentOption = 0;\n\n    if (el) {\n        // Information about that element?\n        elData = selected.atoms[0].elementData;\n        isoConf = selected.atoms.map((a) => a.isotope);\n\n        // Are they all the same?\n        currentOption = isoConf[0].toString();\n        if (!isoConf.reduce((s, x) => s && x === isoConf[0], true)) {\n            // If not, then we have to add a special option that reproduces this last\n            // configuration\n            selOptions = [<MVCustomSelectOption key={-1} value={isoConf}>\n                {_.join(_.uniq(isoConf))}\n            </MVCustomSelectOption>];\n            currentOption = isoConf;\n        }\n\n        // Generate options\n        let keys = Object.keys(elData.isotopes).sort();\n        selOptions = selOptions.concat(keys.map((A, i) => (<MVCustomSelectOption key={i} value={A}>\n                {A}\n            </MVCustomSelectOption>))\n        );\n    }\n    else {\n        selOptions = [<MVCustomSelectOption key={0} value={0}>N/A</MVCustomSelectOption>];\n    }\n\n    // This component handles specifically just the selection of isotopes\n    return (<>\n        <h3>Isotope selection</h3>\n        <MVCustomSelect disabled={!el} onSelect={(A) => { selint.setIsotope(A); setState(-state); }} selected={currentOption}>{selOptions}</MVCustomSelect>\n    </>);\n}\n\n\nfunction MVSidebarSelect(props) {\n\n    const selint = useSelInterface();\n\n    console.log('[MVSidebarSelect rendered]');\n\n    function selectMode(v) {\n        selint.selectionMode = v;\n    }\n\n    function labelMode(v) {\n        selint.labelMode = v;\n    }\n\n    function setR(v) {\n        selint.selectionSphereR = v;\n    }\n\n    function setN(v) {\n        selint.selectionBondN = v;\n    }\n\n    const selRef = useRef();\n    selRef.current = selint;\n\n    useEffect(() => {\n        console.log('Binding select clicks');\n        let selint = selRef.current;\n        selint.selectionOn = props.show;\n    }, [props.show, selint.app]); // The dependency on app guarantees this is executed AFTER the app itself is loaded\n\n    return (<MagresViewSidebar show={props.show} title='Select and display'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={selint.highlightSelected} onCheck={(v) => { selint.highlightSelected = v }}>Highlight selected</MVCheckBox>        \n            <MVCheckBox checked={selint.showCell} onCheck={(v) => { selint.showCell = v }}>Show unit cell</MVCheckBox>        \n            <span className='sep-1' />  \n            {/* drop down for label by mode */}\n            <h4>Label by</h4>\n            {/* default is none */}\n            <MVCustomSelect onSelect={(v) => { labelMode(v); }} selected={selint.labelMode} name='label_mode_dropdown'>\n                <MVCustomSelectOption value='none'>None</MVCustomSelectOption>\n                <MVCustomSelectOption value='labels'>Crystallographic labels</MVCustomSelectOption>\n                <MVCustomSelectOption value='element'>Element</MVCustomSelectOption>\n                <MVCustomSelectOption value='isotope'>Isotope</MVCustomSelectOption>\n            </MVCustomSelect>\n            <span className='sep-1' />\n            <MVRadioGroup label='Selection mode' onSelect={selectMode} selected={selint.selectionMode} name='selec_mode_radio'>\n                <MVRadioButton value='atom'>Atom</MVRadioButton>\n                <MVRadioButton value='element'>Element</MVRadioButton>\n                <MVRadioButton value='label'>Crystallographic label</MVRadioButton>\n                <MVRadioButton value='sphere'>Sphere, radius =&nbsp;\n                    <MVText size='5' value={selint.selectionSphereR} filter='[0-9]*(?:\\.[0-9]*)?' onChange={setR} onSubmit={setR} />&nbsp;  &#8491;\n                </MVRadioButton>\n                <MVRadioButton value='molecule'>Molecule</MVRadioButton>\n                <MVRadioButton value='bonds'>Bonds, max distance = &nbsp;\n                    <MVText size='3' value={ selint.selectionBondN } filter='[0-9]*' onChange={setN} onSubmit={setN} />\n                </MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <div className='mv-sidebar-grid'>\n                <MVButton onClick={() => { selint.selected = selint.displayed }}>Select visible</MVButton>\n                <MVButton onClick={() => { selint.selected = null }}>Select none</MVButton>                \n                <MVButton onClick={() => { selint.displayed = selint.selected }}>Display selected</MVButton>\n                <MVButton onClick={() => { selint.displayed = null }}>Reset displayed</MVButton>                \n            </div>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVIsotopeSelection />\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Selection controls:</h3>\n            <ul>\n                <li><tt>CLICK</tt> to select an atom/element/etc.</li>\n                <li><tt>SHIFT+CLICK</tt> to add to the current selection</li>\n                <li><tt>CTRL+CLICK</tt> to add or remove (XOR) from the current selection</li>\n            </ul>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarSelect;","import './MVRange.css';\nimport './MVText.css'; \n\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { regularExpressions, useId } from '../utils';\nimport MVText from './MVText';\n\nfunction MVRange(props) {\n\n    // Range definition\n    const min = 'min' in props? props.min : 0;\n    const max = 'max' in props? props.max : 100;\n    const defaultValue = 'default' in props? props.default : (min + max) / 2;\n    const step = 'step' in props? props.step : 1;\n\n    function toNumber(v) {\n        v = parseFloat(v);\n        // The slider already constrains to min/max\n        // and steps correctly, so let's allow the user\n        // to enter any value they want here.\n\n        // v = Math.min(v, max);\n        // v = Math.max(v, min);\n        // round to the nearest step\n        // v = Math.round(v / step) * step;\n        \n        // fix rounding errors\n        v = parseFloat(v.toFixed(6));\n        return v;\n    }\n\n    const in_val = (props.value != null? toNumber(props.value) : defaultValue);\n    const id = useId('range');\n\n    const [text, setText] = useState(in_val.toString());\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n        style['--thumb-color'] = props.color;\n    }\n\n    function acceptValue(v) {\n        v = toNumber(v);\n\n        if (props.onChange)\n            props.onChange(v);\n    }\n\n    let stateRef = useRef();\n    stateRef.current = [text, setText];\n\n    // Update the text value if the props one changed and if necessary\n    useEffect(() => {\n        const [text, setText] = stateRef.current;\n\n        if (parseFloat(text) !== in_val)\n            setText(in_val.toString());\n    }, [in_val]);\n\n\n    return (\n        <div className='mv-control'>\n            {props.children? <label htmlFor={id} className='mv-rangelabel'>{props.children}</label> : <></>}            \n            <span className='mv-control mv-range' style={style}>\n                <input className='mv-range-slider' type='range' id={id} onInput={(e) => { acceptValue(e.target.value); }}\n                 min={min} max={max} step={step} value={in_val} disabled={props.disabled}/>\n                <MVText size={4} filter={regularExpressions.float} value={text} onChange={setText} onSubmit={acceptValue} disabled={props.disabled}/>\n            </span>\n        </div>);\n}\n\nexport default MVRange;","import './controls.css';\nimport './MVModal.css';\n\nimport React, { useEffect, useReducer } from 'react';\nimport { IconContext } from 'react-icons';\nimport { IoClose } from 'react-icons/io5';\n\nimport { chainClasses } from '../utils';\n\nimport MVButton from './MVButton';\n\nfunction modalReducer(state, action={}) {\n    switch(action.type) {\n        case 'dragstart': \n            state = {\n                ...state,\n                is_drag: true,\n                x0: action.x0,\n                y0: action.y0\n            };\n            break;\n        case 'move':\n            state = {\n                ...state,\n                dx: action.dx-state.x0,\n                dy: action.dy-state.y0\n            };\n            break;\n        case 'dragend': \n            state = {\n                ...state,\n                is_drag: false,\n                x0: null,\n                y0: null\n            };\n            break;\n        default: \n            break;\n    }\n\n    return state;\n}\n\nfunction MVModal(props) {\n\n    const [state, dispatch] = useReducer(modalReducer, {\n        dx: 0,\n        dy: 0,\n        x0: null,\n        y0: null,\n        is_drag: false\n    });\n\n    const onAccept = props.onAccept || (() => {});\n    const onClose = props.onClose || (() => {});\n\n    function onTitleMouseDown(e) {\n\n        if (props.draggable && e.button === 0) {\n            dispatch({\n                type: 'dragstart',\n                x0: e.clientX-state.dx,\n                y0: e.clientY-state.dy\n            });\n        }\n    }\n\n    useEffect(() => {\n\n        if (state.is_drag) {\n            document.onmousemove = (e) => {\n                dispatch({\n                    type: 'move',\n                    dx: e.clientX,\n                    dy: e.clientY\n                });                \n            }\n\n            document.onmouseup = (e) => {\n                dispatch({\n                    type: 'dragend'\n                });\n            }\n        }\n        else {\n            document.onmousemove = null;\n            document.onmouseup = null;\n        }\n\n    }, [state.is_drag]);\n\n    const modalStyle = {\n        transform: 'translate(' + state.dx + 'px, ' + state.dy + 'px)'\n    };\n\n    const hasOverlay = props.hasOverlay;\n\n    if (!hasOverlay && !props.display) {\n        modalStyle['display'] = 'none';\n    }\n\n    let modal = (<div className={chainClasses('mv-control mv-modal', props.draggable? 'mv-modal-draggable' : '', \n                                              props.resizable? 'mv-modal-resizable' : '')} style={modalStyle}>\n        <div className='mv-modal-title' onMouseDown={onTitleMouseDown}>\n            {props.title} \n            <IconContext.Provider value={{color: 'var(--fwd-color-1)'}}>\n                <IoClose size={22} onClick={onClose}/>\n            </IconContext.Provider>\n        </div>\n        <div className='mv-modal-content'>\n            {props.children}                \n        </div>\n        {props.noFooter? <></> :\n            <div className='mv-modal-footer'>\n                <MVButton onClick={onAccept}>OK</MVButton>\n                <MVButton onClick={onClose}>Cancel</MVButton>\n            </div>\n        }\n    </div>);\n\n    if (hasOverlay) {\n        modal = (<div className={chainClasses('mv-control mv-modal-overlay', props.display? '' : 'mv-modal-hidden')}>\n            {modal}\n        </div>);\n    }\n\n    return modal;\n}\n\nexport default MVModal;","import './MVCScaleBar.css';\nimport React from 'react';\nimport ColorScale from 'color-scales';\nimport colormap from 'colormap';\n\n\nfunction get_colorbar(min, max, units, cmap, hidden=false) {\n    if (hidden) {\n        return null;\n    }\n\n    // ncolors must be odd to display correctly\n    const nshades = 11;\n\n    let color_spec = colormap({\n        colormap: cmap,\n        nshades: nshades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    let cscale = new ColorScale(0, 1, color_spec, 1.0);\n    // make table with one row and nshades columns and color the cells\n    let cells = [];\n    let ticks = [];\n    let tick_labels = [];\n    // values is a range from 0 to 1 (inclusive) with nshades elements\n    let values = Array.from(Array(nshades).keys()).map(x => x/(nshades-1));\n    let colors = values.map((v) => cscale.getColor(v).toHexString());\n    \n    // indices of the ticks and tick labels\n    const first = 0;\n    const middle = ((colors.length-1)/2);\n    const last = colors.length-1;\n\n    for (let i = 0; i < colors.length; i++) {\n        const key_stub = i.toString();\n        cells.push(<td className='mv-cscale-bar' style={{backgroundColor: colors[i]}} key={'c'+i} ></td>);\n        // only show ticks for the first, middle and last color\n        if (i === first || i === middle || i === last) {\n            ticks.push(<td className='mv-cscale-tick' key={'t'+key_stub}>|</td>);\n        } else {\n            ticks.push(<td className='mv-cscale-tick' key={'t'+key_stub}></td>);\n        }\n        tick_labels.push(<td className='mv-cscale-tick-label' key={'l'+key_stub}></td>);\n    }\n\n    // round and display the min, middle and max values\n    tick_labels[first] = <td\n                            className='mv-cscale-tick-label'\n                            key={'l0'}\n                            >{min.toFixed(2)}</td>;\n    tick_labels[middle] = <td \n                            className='mv-cscale-tick-label'\n                            key={'l'+(((tick_labels.length-1)/2)).toString()}\n                            >{((min+max)/2).toFixed(2)}</td>;\n    // add units to final cell\n    tick_labels[last] = <td\n                            className='mv-cscale-tick-label'\n                            key={'l' + (tick_labels.length-1).toString()}\n                            >{max.toFixed(2) + ' ' + units}</td>;\n\n    return (\n            <table className='mv-cscale-table'>\n                <tbody>\n                <tr>\n                    {cells}\n                </tr>\n                <tr>\n                    {ticks}\n                </tr>\n                <tr>\n                    {tick_labels}\n                </tr>\n                </tbody>\n            </table>\n\n    );\n}\n\n\n\nfunction MVCScaleBar(props) {\n\n    return (\n    <div className='mv-cscalebar'>\n            {get_colorbar(props.lims[0], props.lims[1], props.units, props.cmap, props.hidden)}\n    </div>);\n\n}\n\nexport default MVCScaleBar;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarMS.css';\n\nimport _ from 'lodash';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useMSInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVModal from '../../controls/MVModal';\nimport MVText from '../../controls/MVText';\nimport MVCScaleBar from '../../controls/MVCScaleBar';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\nfunction MVReferenceTable(props) {\n\n    const msint = useMSInterface();\n    const [ refTable, setRefTable ] = useState(msint.referenceTable);\n\n    // We store a copy of the reference list internally; it only gets set on\n    // the interface once we click OK. This is to avoid needless expensive \n    // operations when typing text in the fields, especially if the CS labels\n    // are on.\n    \n    const intRef = useRef();\n    intRef.current = msint;\n\n    useEffect(() => {\n        setRefTable(intRef.current.referenceTable);\n    }, [props.display]);\n\n    const elements = _.keys(refTable).sort();\n\n    function copyAll(v) {\n        setRefTable(_.fromPairs(elements.map((el) => [el, v])));\n    }\n\n    return (\n    <MVModal title='References for chemical shifts, by element (ppm)' display={props.display} hasOverlay={true}\n             onClose={props.close} onAccept={() => { msint.updateReferenceTable(refTable); props.close(); }}>\n        <div className='mv-msref-table'>\n            {elements.map((el, i) => {\n                const ref = refTable[el];\n\n                return (<div key={i} className='mv-msref-table-row'>\n                            <div className='mv-msref-table-el'>{el}</div>\n                            <div className='mv-msref-table-ref'>\n                                <MVText value={ref} onChange={(v) => { setRefTable({...refTable, [el]: v}) }} size={5}/>\n                            </div>\n                            <div className='mv-msref-table-copy'>\n                                <MVButton onClick={() => { copyAll(ref); }}>Apply to all</MVButton>\n                            </div>\n                        </div>);\n            })}\n        </div>\n    </MVModal>);\n}\n\n\nfunction MVSidebarMS(props) {\n\n    const [ state, setState ] = useState({\n        showRefTable: false\n    });\n\n    const msint = useMSInterface();\n\n    console.log('[MVSidebarMS rendered]');\n\n    var has_ms = false;\n    if (props.show) {\n        has_ms = msint.hasData;\n    }\n\n\n    return (<MagresViewSidebar show={props.show} title='Magnetic Shielding'>\n        <div className={chainClasses('mv-sidebar-block', has_ms? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { msint.hasEllipsoids = v; }} checked={msint.hasEllipsoids}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.01} max={0.5} step={0.005} value={msint.ellipsoidScale}\n                      onChange={(s) => { msint.ellipsoidScale = s; }} disabled={!msint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { msint.ellipsoidScale = 0; }} disabled={!msint.hasEllipsoids}>Auto scale</MVButton>\n             <MVButton onClick={() => { setState({...state, showRefTable: true}) }}>Set References</MVButton>\n             <MVReferenceTable display={state.showRefTable} close={() => { setState({...state, showRefTable: false}) }}/>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { msint.labelsMode = v; }} selected={msint.labelsMode} name='ms_label_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='cs'>Chemical Shifts (ppm, uses references)</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='redaniso'>Reduced Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRange min={0} max={6} step={1} value={msint.precision} onChange={(p) => { msint.precision = p; }} disabled={msint.labelsMode === 'none'}>Label Precision</MVRange>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { msint.colorScaleType = v; }} selected={msint.colorScaleType} disabled={!msint.colorScaleAvailable} name='ms_cscale_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='ms_iso'>Isotropy</MVRadioButton>\n                <MVRadioButton value='ms_cs'>Chemical Shifts (uses references)</MVRadioButton>\n                <MVRadioButton value='ms_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='ms_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             {/* hide scalebar if msintcolorScaleType is 'none' */}\n             <MVCScaleBar label={msint.colorScaleType} \n             hidden={msint.colorScaleType === 'none'}  \n             lims={msint.colorScaleLimits} \n             cmap={msint.colorScaleCmap}\n             units={msint.colorScaleUnits} />\n             Color map\n            <MVCustomSelect onSelect={(v) => { msint.colorScaleCmap = v; }} selected={msint.colorScaleCmap} name='cmap_dropdown'>\n                <MVCustomSelectOption value='viridis'>Viridis</MVCustomSelectOption>\n                <MVCustomSelectOption value='portland'>Portland</MVCustomSelectOption>\n                <MVCustomSelectOption value='RdBu'>Red-Blue</MVCustomSelectOption>\n                <MVCustomSelectOption value='inferno'>Inferno</MVCustomSelectOption>\n                <MVCustomSelectOption value='jet'>Jet</MVCustomSelectOption>\n            </MVCustomSelect>\n            {/* reset button */}\n            <MVButton onClick={() => { msint.reset(); }}>Reset options</MVButton>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_ms? 'hidden': '')}>No MS data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarMS;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEFG.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEFGInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport React from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVCScaleBar from '../../controls/MVCScaleBar';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\nfunction MVSidebarEFG(props) {\n\n    const efgint = useEFGInterface();\n\n    console.log('[MVSidebarEFG rendered]');\n\n    var has_efg = false;\n    if (props.show) {\n        has_efg = efgint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Electric Field Gradient'>\n        <div className={chainClasses('mv-sidebar-block', has_efg? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { efgint.hasEllipsoids = v; }} checked={ efgint.hasEllipsoids } color={'var(--efg-color-2)'}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.1} max={10.0} step={0.05} value={efgint.ellipsoidScale} color={'var(--efg-color-2)'}\n                      onChange={(s) => { efgint.ellipsoidScale = s; }} disabled={!efgint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { efgint.ellipsoidScale = 0; }} disabled={!efgint.hasEllipsoids}>Auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { efgint.labelsMode = v; }} selected={efgint.labelsMode} name='efg_label_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='Q'>Quadrupole Coupling</MVRadioButton>\n                <MVRadioButton value='e_z'>Vzz (au)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRange min={0} max={6} step={1} value={efgint.precision} onChange={(p) => { efgint.precision = p; }} disabled={efgint.labelsMode === 'none'}>Label Precision</MVRange>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { efgint.colorScaleType = v; }} selected={ efgint.colorScaleType } disabled={!efgint.colorScaleAvailable}\n                           name='efg_cscale_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='efg_Q'>|Quadrupole Coupling|</MVRadioButton>\n                <MVRadioButton value='efg_e_z'>Vzz</MVRadioButton>\n                <MVRadioButton value='efg_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n        {/* hide scalebar if msintcolorScaleType is 'none' */}\n        <MVCScaleBar label={efgint.colorScaleType} \n                    hidden={efgint.colorScaleType === 'none'} \n                    lims={efgint.colorScaleLimits}\n                    units={efgint.colorScaleUnits}\n                    cmap={efgint.colorScaleCmap}/>\n        Color map\n        <MVCustomSelect onSelect={(v) => { efgint.colorScaleCmap = v; }} selected={efgint.colorScaleCmap} name='cmap_dropdown'>\n                <MVCustomSelectOption value='viridis'>Viridis</MVCustomSelectOption>\n                <MVCustomSelectOption value='portland'>Portland</MVCustomSelectOption>\n                <MVCustomSelectOption value='RdBu'>Red-Blue</MVCustomSelectOption>\n                <MVCustomSelectOption value='inferno'>Inferno</MVCustomSelectOption>\n                <MVCustomSelectOption value='jet'>Jet</MVCustomSelectOption>\n        </MVCustomSelect>\n        {/* reset button */}\n        <MVButton onClick={() => { efgint.reset(); }}>Reset options</MVButton>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_efg? 'hidden' : '')}>No EFG data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEFG;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarDip.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport { useDipInterface } from '../store';\n\n\nfunction MVSidebarDip(props) {\n\n    const dipint = useDipInterface();\n\n    console.log('[MVSidebarDip rendered]');\n\n    const intRef = useRef();\n    intRef.current = dipint;\n\n    useEffect(() => {\n        let dipint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && dipint.isOn) {\n            dipint.bind();\n        }\n        else {\n            dipint.unbind();\n        }\n\n    }, [props.show, dipint.isOn]);\n\n    return (<MagresViewSidebar show={props.show} title='Dipolar couplings'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.isOn = v; }} checked={ dipint.isOn } >Show dipolar couplings</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-block'>\n            <p>\n                Click on an atom to show all dipolar couplings in a selected radius.\n                (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n            </p>\n             <MVRange min={1.0} max={20.0} step={0.05} value={dipint.radius} color={'var(--dip-color-3)'}\n                      onChange={(s) => { dipint.radius = s; }}>Selection radius / Å</MVRange>\n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.showSphere = v; }} checked={ dipint.showSphere } >Show selection sphere</MVCheckBox>                        \n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.homonuclearOnly = v; }} checked={ dipint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n             <MVRange min={0} max={6} step={1} value={dipint.precision} onChange={(p) => { dipint.precision = p; }} disabled={!dipint.isOn}>Label Precision</MVRange>\n             {/* reset button */}\n             <MVButton onClick={() => { dipint.reset(); }}>Reset options</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarDip;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarJCoup.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useJCoupInterface } from '../store';\nimport { chainClasses } from '../../utils';\nimport MVButton from '../../controls/MVButton';\n\n\nfunction MVSidebarJCoup(props) {\n\n    const jcint = useJCoupInterface();\n\n    console.log('[MVSidebarJCoup rendered]');\n\n    const intRef = useRef();\n    intRef.current = jcint;\n\n    useEffect(() => {\n        let jcint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && jcint.isOn) {\n            jcint.bind();\n        }\n        else {\n            jcint.unbind();\n        }\n\n    }, [props.show, jcint.isOn]);\n\n    var has_jc = false;\n    if (props.show) {\n        has_jc = jcint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='J couplings'>\n        <div className={has_jc? '' : 'hidden'}>\n            <div className='mv-sidebar-block'>\n                <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.isOn = v; }} checked={ jcint.isOn } >Show J couplings</MVCheckBox>\n            </div>\n            <div className='mv-sidebar-block'>\n                <p>\n                    Choose Click on an atom to show all J couplings in a selected radius.\n                    (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n                </p>\n                 <MVRange min={1.0} max={20.0} step={0.05} value={jcint.radius} color={'var(--jcoup-color-3)'}\n                          onChange={(s) => { jcint.radius = s; }}>Selection radius / Å</MVRange>\n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.showSphere = v; }} checked={ jcint.showSphere } >Show selection sphere</MVCheckBox>                        \n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.homonuclearOnly = v; }} checked={ jcint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n                 <MVRange min={0} max={6} step={1} value={jcint.precision} onChange={(p) => { jcint.precision = p; }} disabled={!jcint.isOn}>Label Precision</MVRange>\n                {/* reset button */}\n                <MVButton onClick={() => { jcint.reset(); }}>Reset options</MVButton>\n            </div>\n        </div>\n         <div className={chainClasses('mv-warning-noms', has_jc? 'hidden': '')}>No J coupling data found in file (lines beginning isc)</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarJCoup;","import './MVSwitch.css';\nimport { chainClasses } from '../utils';\n\nfunction MVSwitch(props) {\n\n    const style = {\n        '--color-true': props.colorTrue || 'var(--ok-color-2)',\n        '--color-false': props.colorFalse || 'var(--err-color-2)'\n    };\n\n    const onClick = props.onClick || (() => {});\n\n    return (<div className={chainClasses('mv-control mv-switch', props.on? 'mv-switch-true' : 'mv-switch-false')} \n        style={style} onClick={onClick}>\n        <div className='mv-switch-thumb'></div>\n    </div>);\n}\n\nexport default MVSwitch;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEuler.css';\n\nimport { useRef, useEffect } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEulerInterface } from '../store';\nimport { saveContents, copyContents } from '../../utils';\n\nimport MVSwitch from '../../controls/MVSwitch';\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport { FaCopy } from 'react-icons/fa';\n\nfunction MVSidebarEuler(props) {\n\n    const eulint = useEulerInterface();\n\n    console.log('[MVSidebarEuler rendered]');\n\n    const intRef = useRef();\n    intRef.current = eulint;\n\n    useEffect(() => {\n        let eulint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show) {\n            eulint.bind();\n        }\n        else {\n            eulint.unbind();\n        }\n\n    }, [props.show]);\n\n    const otherTensor = {\n        ms: 'efg',\n        efg: 'ms'\n    };\n\n    // Round values\n    let a = eulint.alpha;\n    let b = eulint.beta;\n    let c = eulint.gamma;\n\n    if (a !== 'N/A') {\n        // It's a number\n        a = a.toFixed(2);\n        b = b.toFixed(2);\n        c = c.toFixed(2);\n    }\n\n    const hasSel = (eulint.atomA && eulint.atomB);\n\n    return (<MagresViewSidebar show={props.show} title='Euler angles'>\n        <p>\n            Left and right click on atoms to pick a pair of atoms, A and B respectively (which can be the same). Use the switches below to select the pair\n            of tensors of interest.\n        </p>\n        <div className='mv-sidebar-block'>\n            <h3>Atom A</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelA}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>Shielding</span>\n                    <MVSwitch on={ eulint.tensorA === 'efg' } onClick={() => { eulint.tensorA = otherTensor[eulint.tensorA]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Atom B</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelB}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>Shielding</span>\n                    <MVSwitch on={ eulint.tensorB === 'efg' } onClick={() => { eulint.tensorB = otherTensor[eulint.tensorB]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Convention</h3>\n            <MVCustomSelect selected={eulint.convention} onSelect={(v) => { eulint.convention = v; }}>\n                <MVCustomSelectOption value='zyz'>ZYZ</MVCustomSelectOption>\n                <MVCustomSelectOption value='zxz'>ZXZ</MVCustomSelectOption>\n            </MVCustomSelect>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Angles</h3>\n            <table className='mv-eul-results'>\n                <thead>\n                    <tr>\n                        <td>Alpha</td>\n                        <td>Beta</td>\n                        <td>Gamma</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{a}&deg;</td>\n                        <td>{b}&deg;</td>\n                        <td>{c}&deg;</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { copyContents(eulint.txtReport()); }} disabled={!hasSel}><FaCopy />&nbsp;Copy to clipboard</MVButton>            \n        </div>\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { saveContents('data:,' + eulint.txtSelfAngleTable(), 'eulerTable.txt'); }}  disabled={!(eulint.hasMSData && eulint.hasEFGData)}>\n                Download table of MS-to-EFG angles\n            </MVButton>            \n        </div>\n\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEuler;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarPlots.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\n// import MVFile from '../../controls/MVFile';\nimport MVButton from '../../controls/MVButton';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVText from '../../controls/MVText';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nimport { usePlotsInterface } from '../store';\n\nfunction MVSidebarPlots(props) {\n\n    const pltint = usePlotsInterface();\n    // const formats = '.png,.jpg,.jpeg';\n\n    function setMinX(v) {\n        pltint.setRange(v);\n    }\n\n    function setMaxX(v) {\n        pltint.setRange(null, v);\n    }\n\n    function setMinY(v) {\n        pltint.setRange(v, null, 'y');\n    }\n\n    function setMaxY(v) {\n        pltint.setRange(null, v, 'y');\n    }\n\n    return (<MagresViewSidebar show={props.show} title=\"Spectral plots\">\n        \n        <div className='mv-sidebar-block'>\n            <MVRadioGroup label='Plot mode' selected={pltint.mode} onSelect={(v) => {pltint.mode = v}}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='bars-1d'>1D, bars</MVRadioButton>\n                <MVRadioButton value='line-1d'>1D, Lorentzian broadening</MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={pltint.useRefTable} onCheck={(v) => { pltint.useRefTable = v; }}>Show chemical shifts (use references)</MVCheckBox>\n        </div>\n        {/* <div className='mv-sidebar-block'>\n            Background spectrum image\n            <MVFile filetypes={formats} onSelect={(f) => { pltint.loadBkgImage(f); }} notext={false} multiple={false}/>\n            <MVButton onClick={() => { pltint.clearBkgImage(); }}>Clear image</MVButton>\n        </div> */}\n        <div className='mv-sidebar-grid'>\n            <MVCheckBox checked={pltint.showAxes} onCheck={(v) => { pltint.showAxes = v; }}>Show axes</MVCheckBox>\n            <MVCheckBox checked={pltint.showGrid} onCheck={(v) => { pltint.showGrid = v; }}>Show grid</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-grid'>\n            <MVCheckBox checked={pltint.showLabels} onCheck={(v) => { pltint.showLabels = v; }}>Show labels</MVCheckBox>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        X range: &nbsp;\n            <MVText size='5' value={pltint.rangeX[0]} onChange={setMinX} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; to &nbsp; \n            <MVText size='5' value={pltint.rangeX[1]} onChange={setMaxX} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' />\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        Y range: &nbsp;\n            <MVText size='5' value={pltint.rangeY[0]} onChange={setMinY} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; to &nbsp; \n            <MVText size='5' value={pltint.rangeY[1]} onChange={setMaxY} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' />\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        Peak width: &nbsp;\n            <MVText size='3' value={pltint.peakW} onChange={(v) => { pltint.peakW = v; }} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; ppm\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        X steps: &nbsp;\n            <MVText size='3' value={pltint.xSteps} onChange={(v) => { pltint.xSteps = v; }} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' />\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-grid'>\n            {/* download svg */}\n            {/* disable if pltint.mode is none */}\n            <MVButton onClick={() => { pltint.downloadSVG(); }} disabled={pltint.mode === 'none'}>Download SVG</MVButton>\n            {/* download data */}\n            {/* disable if pltint.mode is none */}\n            <MVButton onClick={() => { pltint.downloadData(); }} disabled={pltint.mode === 'none'}>Download data (.csv)</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarPlots;\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarFiles.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport MVIcon from '../../icons/MVIcon';\nimport { GiSpinningTop } from 'react-icons/gi';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\n\nimport { useFilesInterface } from '../store';\nimport { saveContents } from '../../utils';\n\nconst saveFile = (c, fn) => { saveContents('data:,' + c, fn); }\n\nfunction selectquadorder(fileint) {\n    return (<div className='.mv-sidebar-grid'>\n        <h4>Quadrupole order:</h4>\n        <MVCustomSelect selected={fileint.spinSysQuadrupoleOrder} onSelect={(v) => { fileint.spinSysQuadrupoleOrder = v; }}>\n            <MVCustomSelectOption value={0}>0</MVCustomSelectOption>\n            <MVCustomSelectOption value={1}>1</MVCustomSelectOption>\n            <MVCustomSelectOption value={2}>2</MVCustomSelectOption>\n        </MVCustomSelect>\n    </div>);\n\n}\n\n\nfunction spinSysOptions(fileint) {\n    return (<div className='.mv-sidebar-grid'>\n        <h3>Include:</h3>\n        <MVCheckBox checked={fileint.spinSysIncludeMS} onCheck={(v) => { fileint.spinSysIncludeMS = v; }}>MS tensors</MVCheckBox>\n        <MVCheckBox checked={fileint.spinSysIncludeEFG} onCheck={(v) => { fileint.spinSysIncludeEFG = v; }}>EFG tensors</MVCheckBox>\n        {/* <MVCheckBox checked={fileint.spinSysIncludeJ} onCheck={(v) => { fileint.spinSysIncludeJ = v; }}>J couplings</MVCheckBox> */}\n        <MVCheckBox checked={fileint.spinSysIncludeD} onCheck={(v) => { fileint.spinSysIncludeD = v; }}>Dipolar couplings</MVCheckBox>\n        {/* if EFG is selected, show quadrupole selector */}\n        {fileint.spinSysIncludeEFG ? selectquadorder(fileint) : null}\n\n    </div>);\n}\n\nfunction MVSidebarFiles(props) {\n\n    const fileint = useFilesInterface();\n\n    return (<MagresViewSidebar title='Report files' show={props.show}>\n        <div className='mv-sidebar-block'>\n            <h3>File type:</h3>\n            <MVCustomSelect selected={fileint.fileType} onSelect={(v) => { fileint.fileType = v; }}>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)' />}>MS table</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)' />}>EFG table</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)' />}>Dipolar coupling table</MVCustomSelectOption>\n                <MVCustomSelectOption value='isc' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)' />}>J coupling table</MVCustomSelectOption>\n                <MVCustomSelectOption value='spinsys' icon={<GiSpinningTop style={{color: 'var(--spinsys-color-3)'}}/>}>SpinSys</MVCustomSelectOption>\n            </MVCustomSelect>\n            {/* check-boxes for what to include in spinsys output. Only show if fileint.fileType === 'spinsys' */}\n            {fileint.fileType === 'spinsys' ? spinSysOptions(fileint) : null}\n            <MVButton onClick={() => { saveFile(fileint.generateFile(), fileint.fileName); }} disabled={!fileint.fileValid}>Save file</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarFiles;","import './ImageLayer.css';\n\nimport { useState } from 'react';\n\nimport { chainClasses } from '../../utils';\n\n// Size of the markers\nconst mW = 5;\nconst mH = 20;\n\n// Click sensitivity radius\nconst mR2 = Math.pow((mW+mH)/2.0, 2);\n\nfunction ImageLayer(props) {\n\n    // The state is used to check which, if any, of the indicators is selected\n    const [state, setState] = useState(-1);\n\n    const margins = props.margins || {};\n    const image = props.image || {};\n\n    // Indicator positions\n    const indPos = [\n        [margins.left, image.height-margins.bottom],\n        [margins.left, margins.top],\n        [image.width - margins.right, image.height-margins.bottom]\n    ];\n\n    const setMargins = props.setMargins || (() => {});\n\n    // Click detection\n    function onClick(e) {\n\n        let x = e.clientX;\n        let y = e.clientY;\n        let selind = -1;\n\n\n        if (e.target.nodeName === 'image') {\n            // If we clicked on the image, we can get the absolute position in\n            // the image's frame\n            const brect = e.target.getBoundingClientRect();\n            x -= brect.left;\n            y -= brect.top;            \n\n            for (let i = 0; i < indPos.length; ++i) {\n                let [iPx, iPy] = indPos[i];\n                let r2 = Math.pow(x-iPx, 2.0) + Math.pow(y-iPy, 2.0);\n                if (r2 <= mR2) {\n                    selind = i;\n                    break;\n                }\n            }\n        }\n        else if (e.target.nodeName === 'rect') {\n            // We clicked on an indicator\n            const cname = e.target.parentElement.className.baseVal.trim();\n            // Which one?\n            selind = ['img-margin-origin', 'img-margin-top', 'img-margin-right'].indexOf(cname);\n            if (selind >= 0)\n                [x, y] = indPos[selind];\n            else {\n                // Something weird has happened, ignore click\n                return;\n            }\n        }\n\n        if (state < 0) {\n            // Nothing's selected; select\n            setState(selind);\n        }\n        else {\n            if (selind === -1) {\n                // Can't overlap...\n                switch(state) {\n                    case 0:\n                        // Origin\n                        setMargins({\n                            left: x,\n                            bottom: image.height-y\n                        });\n                        break;\n                    case 1:\n                        // Top\n                        setMargins({\n                            top: y\n                        });\n                        break;\n                    case 2:\n                        // Right\n                        setMargins({\n                            right: image.width-x\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n            setState(-1);\n        }\n    }\n\n\n    return (<g className='img-layer' transform={'translate(-' + margins.left + ',-' + margins.top + ')'} onClick={onClick}>\n        <image href={image.url} />\n        <g className='img-layer-margins'>\n            <g className={chainClasses('img-margin-origin', (state === 0? 'selected' : ''))} transform={'translate(' + indPos[0][0] + ',' + indPos[0][1] + ')'}>\n                <rect x={-mW/2.0} y={-mH/2.0} width={mW} height={mH} />\n                <rect x={-mH/2.0} y={-mW/2.0} width={mH} height={mW} />\n            </g>\n            <g className={chainClasses('img-margin-top', (state === 1? 'selected' : ''))} transform={'translate(' + indPos[1][0] + ',' + indPos[1][1] + ')'}>\n                <rect x={-mW/2.0} y={0} width={mW} height={mH/1.5} />\n                <rect x={-mH/2.0} y={-mW/2.0} width={mH} height={mW} />\n            </g>\n            <g className={chainClasses('img-margin-right', (state === 2? 'selected' : ''))} transform={'translate(' + indPos[2][0] + ',' + indPos[2][1] + ')'}>\n                <rect x={-mW/2.0} y={-mH/2.0} width={mW} height={mH} />\n                <rect x={-mH/1.5} y={-mW/2.0} width={mH/1.5} height={mW} />\n            </g>\n        </g>\n    </g>)\n}\n\nexport default ImageLayer;","import _ from 'lodash';\n\nimport { Line } from '@nivo/line'\n\nimport { useState } from 'react';\n\nimport MVModal from '../../controls/MVModal';\nimport { usePlotsInterface } from '../store';\n\nimport ImageLayer from './ImageLayer';\n\nfunction MVPlot1D(props) {\n\n    // State used for margins\n    const [state, setState] = useState({\n        top: 20,\n        left: 50,\n        right: 20,\n        bottom: 50\n    });\n\n    const pltint = usePlotsInterface();\n\n    const image = pltint.bkgImage;\n\n    let width = 640;\n    let height = 480;\n\n    if (image) {\n        width = image.width;\n        height = image.height;\n    }\n\n    function setMargins(data={}) {\n        setState({\n            ...state,\n            ...data\n        });\n    }\n\n    function imgLayer() {\n\n        if (image) {\n            return <ImageLayer image={image} margins={state} setMargins={setMargins} />\n        }\n\n        return null;\n    }\n\n    let layers = [imgLayer, 'grid', 'axes', 'areas', 'crosshair', \n                  'lines', 'points', 'markers', 'slices', 'mesh', 'legends'];\n\n    if (!pltint.showGrid)\n        layers = _.without(layers, 'grid');\n \n    if (!pltint.showAxes)\n        layers = _.without(layers, 'axes');\n\n    const show = (pltint.mode !== 'none');\n\n    let lineprops = {};\n    // y axis properties\n    let leftaxis = {}\n    // Custom mode-dependent properties\n    switch (pltint.mode) {\n        case 'line-1d':\n            lineprops = {\n                enablePoints: false,                \n                enableArea: true,  \n            }\n            leftaxis = {\n                legend: 'Intensity',\n                legendOffset: -40,\n                legendPosition: 'middle'\n            }\n\n\n            break;\n        case 'bars-1d':\n            lineprops = {\n                pointSymbol: ((p) => {\n                    return (<rect x = {-p.size / 4} width={p.size / 2} height={(height-(state.top+state.bottom)) * 0.75} color={p.borderColor} \n                                  fill={p.color} strokeWidth={p.borderWidth}></rect>);\n                }),\n                pointLabelYOffset: 0,\n                lineWidth: 0\n            };\n            // y axis properties\n            leftaxis = {\n                // no axis label\n                legend: '',\n                // no ticks\n                tickValues: 0,\n            };\n\n            break;\n        default: \n            break;\n    }\n    \n    // function to return the nearest peak to a give x value\n    const getNearestPeak = (x) => {\n        let nearest = null;\n        let idx = 0;\n        let min = 1e10;\n        let peaks = pltint.data[0].peaks\n        let labels = pltint.data[0].labels\n        \n        for (let i=0; i<peaks.length; i++) {\n            let d = peaks[i];\n            let dx = Math.abs(d - x);\n            if (dx < min) {\n                min = dx;\n                nearest = d;\n                idx = i;\n            }\n        }\n        if (nearest) {\n            return {x: nearest, label: labels[idx]};\n        }\n        return null;\n\n    }\n    \n    const renderNearestPeak = (p) => {\n        if (p) {\n            return (\n                <div>\n                    <strong>{p.label}</strong>: {p.x.toFixed(2)} ppm\n                </div>\n            );\n        }\n    }\n\n\n\n    const tooltip = ({ point }) => (\n        // find nearest peak to the point\n        <div\n            style={{\n                background: 'white',\n                padding: '9px 12px',\n                border: '1px solid #ccc',\n            }}\n        >\n            {/* show nearest peak x and label */}\n            {renderNearestPeak(getNearestPeak(point.data.x))}\n            {/* show intensity */}\n            <strong>x:</strong> {point.data.xFormatted} <br/>\n            <strong>y:</strong> {point.data.yFormatted}\n        </div>\n    )\n\n    const markers = () => {\n        if (pltint.data.length > 0 && pltint.showLabels) {\n            let markers = [];\n            let peaks = pltint.data[0].peaks;\n            let labels = pltint.data[0].labels;\n            // set threshold for considering the labels to be overlapping\n            // set it to 1/5 of the width of the plot\n            const overlap_threshold = (pltint.floatRangeX[1] - pltint.floatRangeX[0]) / 20; // in ppm\n            \n\n            let last_x = -1e6;\n            let last_label = '';\n            let last_offset = 5;\n            let label = '';\n            let new_labels = [];\n            let offsets = [];\n            let offset = 5;\n            // loop over peaks and figure out non-overlapping labels\n            // TODO: I wrote as separate loops so as to be able to \n            // add more complex combined labels later. But SVG doens't handle\n            // text wrapping, so this is not needed for now.\n            for (let i=0; i<peaks.length; i++) {\n                let x = peaks[i];\n                let dx = Math.abs(x - last_x);\n                if (dx > overlap_threshold) {\n                    label = labels[i];\n                    last_x = x;\n                    last_label = label;\n                    offset = 5;\n                    last_offset = offset;\n                    \n                }\n                else {\n                    if (labels[i] === last_label) {\n                        label = '';\n                        offset = 5;\n                    }\n                    else {\n                        last_label = labels[i];\n                        label = labels[i]\n                        offset = last_offset + 20;\n                        last_offset = offset;\n                    }\n                }\n                // push the label to the array\n                new_labels.push(label);\n                offsets.push(offset);\n            }\n\n            // add marker to the list\n            for (let i=0; i<peaks.length; i++) {\n                let x = peaks[i];\n                if (new_labels[i] !== '') {\n                    markers.push({\n                        axis: 'x',\n                        value: x,\n                        lineStyle: { stroke: \"var(--ms-color-2)\", strokeWidth: 2 , opacity: 0.5},\n                        legend: new_labels[i],\n                        textStyle: { fontSize: 12, fill: \"black\", fontWeight: \"bold\"},\n                        legendOffsetY: offsets[i],\n                        legendOffsetX: -10,\n                        legendOrientation: 'horizontal',\n                    });\n                }\n            }\n            return markers;\n        }\n        return [];\n    }\n    \n\n    // x axis properties\n    let bottomaxis = {\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        // if pltint.useRefTable is true, then we're plotting chemical shifts\n        legend: pltint.useRefTable ? 'Chemical shift/ppm' : 'Shielding/ppm',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    };\n\n\n    return (<MVModal title=\"Spectral 1D plot\" display={show}\n        noFooter={true} resizable={true} draggable={true} onClose={() => { pltint.mode = 'none'; }}>\n        <div style={{backgroundColor: 'white', color: 'black'}}>\n        {show? \n            // if show is true, then we're in one of the plot modes\n            <Line\n            {...lineprops}\n            isInteractive={true}\n            useMesh={true}\n            // enableSlices='x'\n            enableCrosshair={true}\n            xFormat=\" >-.3f\"\n            yFormat=\" >-.3f\"\n            width={width}\n            height={height} \n            colors={{ scheme: 'category10' }}\n            // add marker for each peak in data\n            markers={markers()}\n            data={pltint.data}\n            margin={state}\n            xScale={{\n                type: 'linear',\n                min: pltint.floatRangeX[0],\n                max: pltint.floatRangeX[1],\n                reverse: pltint.useRefTable? true : false\n            }}\n            yScale={{\n                type: 'linear',\n                min: pltint.floatRangeY[0],\n                max: pltint.floatRangeY[1]\n            }}\n            layers={layers}\n            axisBottom={bottomaxis}\n            axisLeft={leftaxis}\n            motionConfig=\"gentle\"\n            tooltip={tooltip}\n            />           \n        : null }\n        </div>\n    </MVModal>);\n}\n\nexport default MVPlot1D;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './themes.css';\nimport '../controls/controls.css';\nimport './MagresViewApp.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { chainClasses } from '../utils';\nimport { useAppInterface } from './store';\n\nimport MagresViewHeader from './MagresViewHeader';\nimport MagresViewScreenshot from './MagresViewScreenshot';\n\nimport MVSidebarLoad from './sidebars/MVSidebarLoad';\nimport MVSidebarSelect from './sidebars/MVSidebarSelect';\nimport MVSidebarMS from './sidebars/MVSidebarMS';\nimport MVSidebarEFG from './sidebars/MVSidebarEFG';\nimport MVSidebarDip from './sidebars/MVSidebarDip';\nimport MVSidebarJCoup from './sidebars/MVSidebarJCoup';\nimport MVSidebarEuler from './sidebars/MVSidebarEuler';\nimport MVSidebarPlots from './sidebars/MVSidebarPlots';\nimport MVSidebarFiles from './sidebars/MVSidebarFiles';\n\nimport MVPlot1D from './plot/MVPlot1D';\n\nfunction MagresViewPage() {\n\n    const [hovered, setHovered] = useState(false);\n\n    let appint = useAppInterface();\n\n    const appRef = useRef(appint);\n\n    useEffect(() => {\n        appRef.current.initialise('#mv-appwindow');\n    }, []);\n\n\n    // Handling the dragging events\n    function handleDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handleDragEnter(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(true);        \n    }\n\n    function handleDragLeave(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(false);        \n    }\n\n    function handleDrop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            appint.load(e.dataTransfer.files)\n            e.dataTransfer.clearData()\n        }        \n        setHovered(false);\n    }\n\n    return (<div className={chainClasses('mv-main-page', 'theme-' + appint.theme, hovered? 'has-drag' : '' )}\n                 onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={handleDrop}>\n                <MagresViewHeader />\n                <MVSidebarLoad show={appint.sidebar === 'load'} />\n                <MVSidebarSelect show={appint.sidebar === 'select'} />\n                <MVSidebarMS show={appint.sidebar === 'ms'} />\n                <MVSidebarEFG show={appint.sidebar === 'efg'} />\n                <MVSidebarDip show={appint.sidebar === 'dip'} />\n                <MVSidebarJCoup show={appint.sidebar === 'jcoup'} />\n                <MVSidebarEuler show={appint.sidebar === 'euler'} />\n                <MVSidebarPlots show={appint.sidebar === 'plots'} />\n                <MVSidebarFiles show={appint.sidebar === 'files'} />\n                <div id='mv-appwindow' className='mv-background'/>\n                <MagresViewScreenshot />\n                <div className='drag-overlay' />\n            { /* Modals */ }\n                <MVPlot1D />\n            </div>);\n}\n\nfunction MagresViewApp() {\n\n    return (\n        <div className='mv-main-app'>\n            <MagresViewPage />\n        </div>\n    );\n}\n\nexport default MagresViewApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport MagresViewApp from './core/MagresViewApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport magresStore from './core/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={magresStore}>\n      <MagresViewApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}