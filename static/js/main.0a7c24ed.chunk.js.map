{"version":3,"sources":["utils/utils-react.js","utils/utils-generic.js","utils/utils-regexp.js","icons/logo.svg","controls/MVCustomSelect.js","icons/ms.svg","icons/efg.svg","icons/dip.svg","icons/jcoup.svg","icons/MVIcon.js","core/store/utils.js","utils/utils-nmr.js","core/store/listeners/events.js","core/store/listeners/colors.js","core/store/listeners/ellipsoids.js","core/store/listeners/labels.js","core/store/listeners/links.js","core/store/listeners/index.js","core/store/listeners/views.js","core/store/listeners/cscales.js","core/store/interfaces/CScaleInterface.js","core/store/interfaces/MSInterface.js","core/store/interfaces/AppInterface.js","core/store/interfaces/SelInterface.js","core/store/interfaces/EFGInterface.js","core/store/interfaces/DipInterface.js","core/store/store.js","core/store/index.js","core/MagresViewHeader.js","core/sidebars/MagresViewSidebar.js","controls/MVFile.js","controls/MVBox.js","controls/MVCheckBox.js","controls/MVListSelect.js","core/sidebars/MVSidebarLoad.js","controls/MVButton.js","controls/MVRadioButton.js","controls/MVText.js","core/sidebars/MVSidebarSelect.js","controls/MVRange.js","controls/MVModal.js","core/sidebars/MVSidebarMS.js","core/sidebars/MVSidebarEFG.js","core/sidebars/MVSidebarDip.js","core/MagresViewApp.js","reportWebVitals.js","index.js"],"names":["chainClasses","_","join","flatten","arguments","useId","prefix","useState","uniqueId","id","CallbackMerger","n","callback","this","_callback","_n","_arg","arg","Error","merge","regularExpressions","Map","float","RegExp","int","alpha","alphanumeric","MVCustomSelectOption","props","onClick","className","icon","children","MVCustomSelect","show","setShow","options","filter","c","type","values","map","o","value","selected","findIndex","v","onSelect","useEffect","disabled","style","onMouseLeave","title","i","cloneElement","key","_excluded","_extends","Object","assign","target","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMs","_ref","svgRef","titleId","width","height","viewBox","xmlns","ref","transform","fill","strokeWidth","strokeLinecap","strokeLinejoin","paintOrder","d","_defs","ForwardRef","SvgEfg","fillOpacity","color","InkscapeStroke","SvgDip","SvgJcoup","icons","ms","MSIcon","efg","EFGIcon","dip","DipIcon","jcoup","JcoupIcon","MVIcon","Icon","makeSelector","extras","selector","state","ans","startsWith","addPrefix","p","getSel","app","displayed","getNMRData","data","datatype","tenstype","units","tens_units","T","isotropy","anisotropy","asymmetry","span","skew","haeberlen_eigenvalues","iD","efgAtomicToHz","Q","getLinkLabel","a1","a2","linktype","D","g1","isotopeData","gamma","g2","r1","xyz","r","x","R","Math","sqrt","reduce","s","rnorm","PI","pow","dipolarCoupling","toFixed","BaseInterface","dispatcher","_state","_dispatcher","action","Events","Array","isArray","fromPairs","defineProperty","get","msColor","makeEllipsoidListener","name","pre_view","pre_on","pre_scale","app_viewer","current_view","next_view","on","scale","removeEllipsoids","a","getArrayValue","avg","t","sum","eigenvalues","abs","addEllipsoids","scalingFactor","opacity","msEllipsoidListener","efgEllipsoidListener","makeLabelListener","shiftfunc","pre_references","pre_type","label_texts","ref_table","mode","nmr_mode","removeLabels","element","crystLabel","addLabels","shift","radius","selLabelListener","msLabelListener","efgLabelListener","dipCalculateLinksListener","pre_ca","pre_r","linkview","model","ghostreqs","sel_ghosts_requests","catom","find","sphere","view","VIEWS","makeCalculateLinksListener","dipDisplayLinksListener","pre_sph","pre_lnames","lnames","forEach","removeGraphics","atoms","lname","label","addLink","dashed","onOverlay","push","addSphere","showAxes","showCircles","makeDisplayLinksListener","listeners","sel","sel_selected_view","displ","sel_displayed_view","app_default_displayed","all","hide","setProperty","SEL_LABELS","CSCALE","MS_ELLIPSOIDS","MS_LABELS","EFG_ELLIPSOIDS","EFG_LABELS","DIP_RENDER","cscale_view","current_greyed","cscale_displ","next_greyed","cstype","cscale_type","split","xor","cs","min","max","shades","colors","colormap","nshades","format","ColorScale","getColorScale","getColor","toHexString","DIP_LINKS","makeMasterListener","store","getState","toUpdate","listen_update","nextToUpdate","concat","dispatch","initialCScaleState","CScaleInterface","colorScaleType","makeCScaleSelector","msSetReferences","refs","ms_references","ms_labels_type","msAction","update","MSInterface","m","hasArray","ms_ellipsoids_on","ms_ellipsoids_scale","pre","colorScalePrefix","elements","uniq","symbols","el","function","useMSInterface","useSelector","shallowEqual","useDispatch","appDisplayModel","sel_sites_labels_type","ms_cscale_type","efg_ellipsoids_on","efg_labels_type","efg_cscale_type","dip_links_on","displayModel","appDeleteModel","deleteModel","models","modelList","AppInterface","viewer","initialised","model_name","modelName","app_theme","app_sidebar","elem","console","log","vis","CrystVis","highlightSelected","files","params","cback","cbm","intf","parseOne","onLoad","contents","extension","success","loadModels","to_display","display","f","reader","FileReader","pop","onload","e","result","readAsText","useAppInterface","LC","LEFT_CLICK","SLC","SHIFT_BUTTON","CLC","CTRL_BUTTON","SelInterface","sel_hlight","sel_on","setSelection","selectionMode","sel_mode","sel_sphere_r","sel_bond_n","eData","elementData","isotopes","sort","A","iso","is_nmr_active","spin","is_Q_active","is_max_nmr","maxiso_NMR","is_max_Q","maxiso_Q","abundance","default_options","selectionSphereR","selectionBondN","selectionOn","selFunc","imgIndex","found","_queryElements","_querySphere","_queryMolecule","_queryBonded","dd","onAtomClick","and","or","useSelInterface","efgAction","EFGInterface","efg_ellipsoids_scale","useEFGInterface","DipInterface","dip_central_atom","dip_radius","dip_sphere_show","useDipInterface","initialState","sel_sites_view","ms_view","efg_view","dip_view","dip_link_names","magresStore","createStore","args","subscribe","ThemeSwitcher","appint","other","dark","light","theme","MagresViewHeader","src","logo","alt","sidebar","MagresViewSidebar","MVFile","notext","accept","filetypes","onChange","multiple","MVBox","status_class","status","onClose","size","MVCheckBox","onCheck","checked","htmlFor","MVListSelectOption","MVListSelect","file_formats","MVSidebarLoad","load_as_mol","load_message","load_message_status","list_selected","setState","molecularCrystal","supercell","load","msg","err","model_icon","currentModelName","delete","MVButton","MVRadioButton","uid","MVRadioGroup","buttons","b","labelStyle","index","MVText","submitted","setSubmitted","waitSubmit","onSubmit","exec","onKeyDown","MVIsotopeSelection","selint","slice","sharedElement","elData","isoConf","selOptions","currentOption","isotope","toString","setIsotope","MVSidebarSelect","setR","setN","selRef","useRef","current","showCrystLabels","MVRange","step","toNumber","parseFloat","round","in_val","text","setText","acceptValue","stateRef","onInput","MVModal","onAccept","Provider","MVReferenceTable","msint","referenceTable","refTable","setRefTable","intRef","close","updateReferenceTable","MVSidebarMS","showRefTable","has_ms","hasData","hasEllipsoids","ellipsoidScale","noState","labelsMode","colorScaleAvailable","MVSidebarEFG","efgint","has_efg","MVSidebarDip","dipint","isOn","bind","unbind","MagresViewPage","appRef","initialise","MagresViewApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a7c24ed.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { useState } from 'react';\n\n/**\n * Chain multiple class strings into a single string, useful when passing them\n * to React components' className property\n *\n * @param {String} name1, name2...    Name of the first class, second class, etc.\n * \n * @return {String}                   Chained class names\n */\nfunction chainClasses() {\n    return _.join(_.flatten(arguments), ' ');\n}\n\n/**\n * Generate a memoized unique ID for an element\n * \n * @param  {String} prefix Prefix of the id\n * \n * @return {String}        Unique ID\n */\nfunction useId(prefix='uid') {\n    const [id] = useState(() => (_.uniqueId(prefix)));\n    return id;\n}\n\nexport { chainClasses, useId };","import _ from 'lodash';\nimport colormap from 'colormap';\nimport ColorScale from 'color-scales';\n\n/*\n * Merges together all the outputs of multiple async processes into a single\n * argument to pass to a callback, according the outputs are in Object form.\n */\nclass CallbackMerger {\n    \n    constructor(n, callback) {\n        this._callback = callback;\n        this._n = n;\n\n        this._arg = {};\n    }\n\n    call(arg) {\n        \n        if (this._n <= 0) {\n            throw Error('CallbackMerger has completed its iterations');\n        }\n\n        _.merge(this._arg, arg);\n        this._n -= 1;\n        if (this._n === 0) {\n            this._callback(this._arg);\n        }\n    }\n}\n\nfunction getColorScale(min=0, max=1, scale='jet', shades=10) {\n    \n    let colors = colormap({\n        colormap: scale,\n        nshades: shades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    // If min and max are equal we get an error so fix that\n    max = (max === min)? max+1e-8 : max;\n\n    let cscale = new ColorScale(min, max, colors, 1.0);\n\n    return cscale;\n}\n\n/**\n * Merge the values from an object into another, but without creating\n * new values if they were absent to begin with.\n * \n * @param  {Object} a The object to update\n * @param  {Object} b The object containing the updated values\n * \n * @return {Object}   The updated object\n */\nfunction mergeOnly(a, b) {\n\n    let c = {};\n\n    for (let k in a) {\n        c[k] = (k in b)? b[k] : a[k];\n    }\n\n    return c;\n}\n\nclass Enum {\n\n    constructor(values={}) {\n\n        if (Array.isArray(values)) {\n            values = _.fromPairs(values.map((x, i) => [x, i]));\n        }\n\n        for (let key in values) {\n            let v = values[key];\n\n            Object.defineProperty(this, key, {\n                get: () => v\n            });\n        }\n    }\n\n}\n\nexport { CallbackMerger, getColorScale, mergeOnly, Enum };","import { Map } from 'immutable';\n\n// Immutable map makes these entries safe\nconst regularExpressions = Map({\n    float: new RegExp('[0-9]*(?:[.][0-9]*)?'),\n    int: new RegExp('[0-9]*'),\n    alpha: new RegExp('[a-zA-Z]*'),\n    alphanumeric: new RegExp('[0-9a-zA-Z]*')\n});\n\nexport default regularExpressions;","export default __webpack_public_path__ + \"static/media/logo.3a5b963a.svg\";","import './controls.css';\nimport './MVCustomSelect.css';\n\nimport React, { useState, cloneElement, useEffect } from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\n\nimport { chainClasses } from '../utils';\n\nfunction MVCustomSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className='mv-control mv-cselect-opt' onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVCustomSelect(props) {\n\n    const [ show, setShow ] = useState(false);\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVCustomSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    // Translation?\n    let tstyle = {};    \n    \n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    // If disabled while open, must close\n    useEffect(() => {\n        if (props.disabled)\n            setShow(false);\n    }, [props.disabled]);\n\n    return (\n        <div style={tstyle} className={chainClasses('mv-control', 'mv-cselect', show? null : 'mv-cselect-closed', \n                                                    props.disabled? 'mv-cselect-disabled' : null )} \n            onMouseLeave={() => { setShow(false); }} title={props.title}>\n            <div className='mv-control mv-cselect-main' onClick={() => { setShow(true && (!props.disabled)); }}>\n                {options[selected]}\n                <span className='mv-cselect-main-caret'><FaCaretDown /></span>\n            </div>\n            <div className='mv-control mv-cselect-ddown'>\n                {options.map((o, i) => {\n                    return cloneElement(o, {key: i, onClick: () => { setShow(false); onSelect(values[i]); }});\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport { MVCustomSelectOption };\nexport default MVCustomSelect;","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg47\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-18.293285,-29.905846)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path31-3\",\n    style: {\n      fill: \"#ffffff\",\n      strokeWidth: 0.113242,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 20.409953,29.969924 a 2.0525921,2.0525921 0 0 0 -2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,-2.052588 2.0525921,2.0525921 0 0 0 -2.052588,-2.052588 z m 0,0.304891 a 1.7477165,1.7477165 0 0 1 1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,-1.747697 1.7477165,1.7477165 0 0 1 1.747697,-1.747697 z m 0,0.981852 a 0.76590603,0.76590603 0 0 0 -0.765845,0.765845 0.76590603,0.76590603 0 0 0 0.765845,0.765844 0.76590603,0.76590603 0 0 0 0.765844,-0.765844 0.76590603,0.76590603 0 0 0 -0.765844,-0.765845 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMs);\nexport default __webpack_public_path__ + \"static/media/ms.f07fad56.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEfg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379\",\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"M 2.5730992,0.53564415 C 2.0763787,1.0247144 2.1174995,2.1158593 2.1174995,2.1158593 c 0,0 1.090811,0.040787 1.5798807,-0.4559341 C 4.1697678,1.1801491 3.9991355,0.77827206 3.7271516,0.50620724 3.4550908,0.23406562 3.0528756,0.06325682 2.5730992,0.53564415 Z\",\n    id: \"path949\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"m 3.2382813,0.12109375 c -0.2336518,-0.021225 -0.4928561,0.0749413 -0.75,0.328125 C 2.2066461,0.72651627 2.0927766,1.1440416 2.0390625,1.4902344 1.9853484,1.8364272 1.9960938,2.1210938 1.9960937,2.1210938 L 2,2.2324219 l 0.1132813,0.00391 c 0,0 0.2827996,0.010832 0.6289062,-0.042969 C 3.0882941,2.1395587 3.5059251,2.0257566 3.7832031,1.7441406 4.0363717,1.4870123 4.1324787,1.2277171 4.1113281,0.99414063 4.0901775,0.7605642 3.9606182,0.56808419 3.8125,0.41992188 3.6643293,0.27170718 3.471933,0.14231875 3.2382813,0.12109375 Z m -0.021484,0.2421875 C 3.3722117,0.37739918 3.5167352,0.46787023 3.640625,0.59179687 3.7644904,0.71569911 3.8570292,0.86030307 3.8710938,1.015625 3.8851583,1.1709469 3.8305467,1.3515714 3.6113281,1.5742187 3.399537,1.7893233 3.0266438,1.9050922 2.7050781,1.9550781 c -0.251685,0.039123 -0.3754283,0.03197 -0.4570312,0.03125 -7.728e-4,-0.080876 -0.00797,-0.2062232 0.03125,-0.4589844 0.049905,-0.3216465 0.1638213,-0.69447771 0.3789062,-0.90624995 0.222632,-0.21920321 0.403179,-0.27193043 0.5585938,-0.2578125 z\",\n    id: \"path951\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 1.6602402,3.6976978 C 2.1569607,3.2086275 2.11584,2.1174825 2.11584,2.1174825 c 0,0 -1.0908111,-0.040787 -1.57988078,0.4559342 -0.4723876,0.4797762 -0.3017553,0.8816532 -0.0297709,1.153718 C 0.7782491,3.9992763 1.1804642,4.1700851 1.6602402,3.6976978 Z\",\n    id: \"path957\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1210938,1.9960937 c 0,0 -0.2847528,-0.010832 -0.6308594,0.042969 -0.3461066,0.053801 -0.76373761,0.1676027 -1.04101565,0.4492188 -0.25316852,0.2571283 -0.34927569,0.5164235 -0.328125,0.75 C 0.14224444,3.4718577 0.27180335,3.6643377 0.41992188,3.8125 0.56809254,3.9607147 0.76048898,4.0901031 0.99414063,4.1113281 1.2277923,4.1325531 1.48895,4.0363868 1.7460937,3.7832031 2.0277289,3.5059056 2.1396453,3.0883803 2.1933594,2.7421875 2.2470735,2.3959947 2.2363281,2.1132813 2.2363281,2.1132813 L 2.2324219,2 Z M 1.9863281,2.2480469 c 7.439e-4,0.081628 0.00781,0.2052829 -0.03125,0.4570312 C 1.9051725,3.0267247 1.7912568,3.3995559 1.5761719,3.6113281 1.3535401,3.8305313 1.1710397,3.8852117 1.015625,3.8710938 0.86021029,3.8569758 0.71568671,3.7645516 0.59179687,3.640625 0.46793127,3.5167228 0.37734588,3.3721188 0.36328125,3.2167969 0.34921662,3.061475 0.40382827,2.8808505 0.62304687,2.6582031 0.83483802,2.4430985 1.2057781,2.3292828 1.5273437,2.2792969 1.7800414,2.2400162 1.905477,2.2472982 1.9863281,2.2480469 Z\",\n    id: \"path959\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 2.1132813,1.9960937 2,2 1.9960937,2.1132813 c 0,0 -0.010745,0.2827134 0.042969,0.6289062 0.053714,0.3461928 0.1675836,0.7637181 0.4492188,1.0410156 0.2571437,0.2531837 0.5163483,0.34935 0.75,0.328125 C 3.4719329,4.0901031 3.6643293,3.9607147 3.8125,3.8125 3.9606185,3.6643377 4.0901775,3.4718577 4.1113281,3.2382813 4.1324788,3.0047048 4.0363716,2.7454096 3.7832031,2.4882813 3.5059251,2.2066652 3.0882941,2.0928632 2.7421875,2.0390625 2.3960809,1.9852618 2.1132812,1.9960937 2.1132813,1.9960937 Z m 0.1347656,0.2519532 c 0.081645,-7.179e-4 0.2054038,-0.00786 0.4570312,0.03125 0.3215657,0.049986 0.6944589,0.1638016 0.90625,0.3789062 C 3.8305467,2.8808505 3.8851584,3.061475 3.8710938,3.2167969 3.8570291,3.3721188 3.7644906,3.5167228 3.640625,3.640625 3.5167352,3.7645516 3.3722116,3.8569758 3.2167969,3.8710938 3.0613821,3.8852117 2.8808349,3.8305313 2.6582031,3.6113281 2.4431182,3.3995559 2.3292024,3.0267247 2.2792969,2.7050781 2.2402454,2.4533874 2.2473047,2.3297177 2.2480469,2.2480469 Z\",\n    id: \"path4379-8-7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 0.99414063,0.12304687 C 0.76052273,0.14426881 0.56808207,0.27367078 0.41992188,0.421875 0.27181384,0.57002685 0.14224137,0.76255105 0.12109375,0.99609375 0.09994613,1.2296364 0.19606487,1.4889803 0.44921875,1.7460937 0.72646854,2.0276811 1.1441384,2.1415134 1.4902344,2.1953125 c 0.346096,0.053799 0.6308594,0.042969 0.6308594,0.042969 l 0.1113281,-0.00391 0.00391,-0.1132812 c 0,0 0.010744,-0.2827241 -0.042969,-0.6289063 C 2.1396469,1.1460053 2.0277002,0.72844112 1.7460937,0.45117188 1.4889649,0.19800288 1.2277585,0.10182494 0.99414063,0.12304687 Z M 1.015625,0.36328125 c 0.1554485,-0.014121 0.3379002,0.0405478 0.5605469,0.25976562 0.2151136,0.21180052 0.328999,0.58459283 0.3789062,0.90625003 0.039228,0.2528276 0.032025,0.3781486 0.03125,0.4589843 -0.08081,7.505e-4 -0.2062203,0.00804 -0.4589844,-0.03125 C 1.2057675,1.9070437 0.83486627,1.7913052 0.62304687,1.5761719 0.40381362,1.3535096 0.34921357,1.1729338 0.36328125,1.0175781 0.37734893,0.86222244 0.46792083,0.71766269 0.59179687,0.59375 0.71569719,0.46981287 0.86017652,0.37740225 1.015625,0.36328125 Z\",\n    id: \"path4379-8-7-9\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEfg);\nexport default __webpack_public_path__ + \"static/media/efg.dd4cc518.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDip(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path1204\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffb\",\n      strokeWidth: 0.214,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 4.089079,2.0563225 c 0,1.0289629 -0.8331367,1.8631023 -1.3433946,1.8631023 -0.5102579,-10e-8 -0.5044128,-0.8341394 -0.5044128,-1.8631023 0,-1.0289628 -0.00584,-1.86310211 0.5044128,-1.86310221 0.5102579,0 1.3433946,0.83413931 1.3433946,1.86310221 z\",\n    id: \"path1994\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 2.7460938,0.0859375 c -0.1567163,3e-8 -0.2914586,0.07367204 -0.3789063,0.18945313 C 2.2797398,0.39117171 2.2300544,0.54136545 2.1972656,0.71875 c -0.065577,0.3547691 -0.0625,0.8236122 -0.0625,1.3378906 0,0.5142784 -0.00308,0.9811683 0.0625,1.3359375 0.032788,0.1773846 0.082474,0.3295313 0.1699219,0.4453125 0.087448,0.1157812 0.2221891,0.1894531 0.3789063,0.1894531 0.3134343,0 0.6597622,-0.2320725 0.9453125,-0.5859374 0.2855502,-0.353865 0.5039062,-0.841406 0.5039062,-1.3847657 0,-0.5433597 -0.218356,-1.0309007 -0.5039062,-1.3847656 C 3.405856,0.31801006 3.0595281,0.0859375 2.7460938,0.0859375 Z m 0,0.21484375 c 0.196823,0 0.5207148,0.18541461 0.7792968,0.50585938 0.258582,0.32044477 0.4570313,0.76439787 0.4570313,1.24999997 0,0.4856022 -0.1984493,0.9295552 -0.4570313,1.25 C 3.2668086,3.6270854 2.9429167,3.8125 2.7460938,3.8125 2.6476822,3.8125 2.5920753,3.7817592 2.5371094,3.7089844 2.4821435,3.6362095 2.4377356,3.5132859 2.4082031,3.3535156 2.3491381,3.0339751 2.3476563,2.5713242 2.3476563,2.0566406 c 0,-0.5146833 0.00148,-0.9792875 0.060547,-1.2988281 0.029533,-0.1597703 0.07394,-0.28074067 0.1289063,-0.35351562 0.054966,-0.072775 0.1105744,-0.10351561 0.2089844,-0.10351563 z\",\n    id: \"path1996\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 1.4882812,0.09765625 c -0.3134344,0 -0.66171528,0.23207255 -0.94726558,0.5859375 C 0.25546533,1.0374587 0.03710938,1.5249996 0.03710937,2.0683594 c 0,0.5433597 0.21835596,1.0309007 0.50390625,1.3847656 0.2855503,0.3538649 0.63383118,0.5839844 0.94726558,0.5839844 0.1567172,-1e-7 0.2914583,-0.071719 0.3789063,-0.1875 0.087448,-0.1157812 0.1371335,-0.2679279 0.1699219,-0.4453125 0.065577,-0.3547692 0.0625,-0.8216592 0.0625,-1.3359375 0,-0.5142785 0.00308,-0.9831215 -0.0625,-1.33789065 C 2.0043206,0.5530842 1.9546352,0.40289046 1.8671875,0.28710938 1.7797398,0.17132829 1.6449975,0.09765628 1.4882812,0.09765625 Z m 0,0.21484375 c 0.09841,2e-8 0.1540186,0.0307407 0.2089844,0.10351563 0.054966,0.0727749 0.099374,0.19374531 0.1289063,0.35351562 0.059066,0.31954065 0.058594,0.78414475 0.058594,1.29882815 0,0.5146835 4.713e-4,0.9773345 -0.058594,1.296875 -0.029532,0.1597702 -0.07394,0.2826939 -0.1289063,0.3554687 -0.054966,0.072775 -0.1105728,0.1035156 -0.2089844,0.1035157 -0.196823,0 -0.52266797,-0.1854147 -0.78124995,-0.5058594 -0.25858198,-0.3204448 -0.45507812,-0.7643979 -0.45507812,-1.25 0,-0.4856022 0.19649614,-0.9295553 0.45507812,-1.25000002 C 0.96561323,0.4979146 1.2914582,0.3125 1.4882812,0.3125 Z\",\n    id: \"path1204-3\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDip);\nexport default __webpack_public_path__ + \"static/media/dip.4ab1e1ee.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgJcoup(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g2792\",\n    transform: \"translate(-0.12942697,-0.24771585)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 0.86132813,2.609375 a 0.25,0.25 0 0 0 -0.25000001,0.25 c 0,0.4485824 0.23846935,0.8635994 0.62695308,1.0878906 0.3884838,0.2242913 0.8693287,0.2242912 1.2578126,0 C 2.8845776,3.7229744 3.125,3.3079575 3.125,2.859375 a 0.25,0.25 0 0 0 -0.25,-0.25 0.25,0.25 0 0 0 -0.25,0.25 c 0,0.2707514 -0.1444286,0.5208743 -0.3789062,0.65625 -0.2344777,0.1353757 -0.523335,0.1353757 -0.7578126,0 C 1.2538037,3.3802493 1.1113281,3.1301264 1.1113281,2.859375 a 0.25,0.25 0 0 0 -0.24999997,-0.25 z\",\n    id: \"path2096\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 V 2.859375 a 0.25,0.25 0 0 0 0.25,0.25 0.25,0.25 0 0 0 0.25,-0.25 V 0.86328125 a 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1171875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 0.25,0.25 0 0 0 0.25,0.24999995 h 1.5136719 a 0.25,0.25 0 0 0 0.25,-0.24999995 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453-6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJcoup);\nexport default __webpack_public_path__ + \"static/media/jcoup.2bc45a9a.svg\";\nexport { ForwardRef as ReactComponent };","import './MVIcon.css';\n\nimport React from 'react';\n\nimport { ReactComponent as MSIcon } from './ms.svg';\nimport { ReactComponent as EFGIcon } from './efg.svg';\nimport { ReactComponent as DipIcon } from './dip.svg';\nimport { ReactComponent as JcoupIcon } from './jcoup.svg';\n\nconst icons = {\n    ms: MSIcon,\n    efg: EFGIcon,\n    dip: DipIcon,\n    jcoup: JcoupIcon\n};\n\nfunction MVIcon(props) {\n\n    if (!(props.icon in icons)) {\n        throw new Error('Invalid icon in MVIcon');\n    }\n\n    const Icon = icons[props.icon];\n    const color = (props.color || '#ffffff');\n\n    return (\n        <Icon className='mv-icon' style={{'--path-fill': color}} {...props}/>\n        );\n}\n\nexport default MVIcon;","import _ from 'lodash';\nimport { dipolarCoupling, mergeOnly } from '../../utils';\n\nfunction makeSelector(prefix, extras=[]) {\n    // Creates and returns a selector function for a given prefix\n    function selector(state) {\n        let ans = {};\n\n        for (let key in state) {\n            if (!_.startsWith(key, prefix) && extras.indexOf(key) === -1)\n                continue;\n            ans[key] = state[key];\n        }\n\n        return ans;\n    }\n\n    return selector;\n}\n\nconst addPrefix = (p, n) => p + '_' + n;\nconst getSel = (app) => app.selected.length > 0? app.selected : app.displayed;\n\nfunction getNMRData(data, datatype, tenstype='ms') {\n\n    let units = '';\n    let tens_units = {\n        ms: 'ppm',\n        efg: 'au'\n    }[tenstype];\n    let values = null;\n\n    switch(datatype) {\n        case 'iso': \n            values = data.map(([T, iD]) => T.isotropy);\n            units = tens_units;\n            break;\n        case 'aniso':\n            values = data.map(([T, iD]) => T.anisotropy);\n            units = tens_units;\n            break;            \n        case 'asymm':\n            values = data.map(([T, iD]) => T.asymmetry);\n            break;\n        case 'span':\n            values = data.map(([T, iD]) => T.span);\n            break;\n        case 'skew':\n            values = data.map(([T, iD]) => T.skew);\n            break;\n        case 'e_x':\n            values = data.map(([T, iD]) => T.haeberlen_eigenvalues[0]);\n            break;\n        case 'e_y':\n            values = data.map(([T, iD]) => T.haeberlen_eigenvalues[1]);\n            break;\n        case 'e_z':\n            values = data.map(([T, iD]) => T.haeberlen_eigenvalues[2]);\n            break;\n        case 'Q':\n            values = data.map(([T, iD]) => T.efgAtomicToHz(iD.Q).haeberlen_eigenvalues[2]/1e3);\n            units = 'kHz';\n            break;\n        default:\n            break;\n    }\n\n    return [units, values];\n}\n\nfunction getLinkLabel(a1, a2, linktype) {\n\n    switch (linktype) {\n        case 'dip':\n            const D = dipolarCoupling(a1, a2)[0];\n            return (D/1e3).toFixed(2) + ' kHz';\n        default:\n            return '';\n    }\n}\n\n\nclass BaseInterface {\n\n    constructor(state, dispatcher) {\n        this._state = state;\n        this._dispatcher = dispatcher;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    dispatch(action) {\n        this._dispatcher(action);\n    }\n\n}\n\nexport { \n    makeSelector, \n    addPrefix,\n    getSel,\n    getNMRData,\n    getLinkLabel,\n    BaseInterface \n};","/** \n * Utilities that have to do with computing non-trivial NMR quantities\n */\n\n/**\n * Dipolar coupling constant in Hz between two atoms. Takes into account both\n * distance and the properties of the isotopes.\n * \n * @param  {AtomImage} a1 First atom\n * @param  {AtomImage} a2 Second atom\n * \n * @return {[Number, Array]}    Dipolar coupling in Hz and unit vector connecting\n *                              the two atoms\n */\nfunction dipolarCoupling(a1, a2) {\n\n    const MU0_HBAR_E30 = 1.3252140307214143e-10;\n    const g1 = a1.isotopeData.gamma || 0;\n    const g2 = a2.isotopeData.gamma || 0;\n\n    const r1 = a1.xyz;\n    const r2 = a2.xyz;\n    const r = r2.map((x, i) => x-r1[i]);\n    const R = Math.sqrt(r.reduce((s, x) => s+x*x, 0));\n    const rnorm = r.map((x) => x/R);\n\n    return [-MU0_HBAR_E30*g1*g2/(8*Math.PI*Math.PI*Math.pow(R, 3)), rnorm];    \n}\n\nexport { dipolarCoupling };","// Events used to trigger listeners\nimport { Enum } from '../../../utils';\n\nconst Events = new Enum([\n    'VIEWS',\n    'SEL_LABELS',\n    'CSCALE',\n    'MS_ELLIPSOIDS',\n    'MS_LABELS',\n    'EFG_ELLIPSOIDS',\n    'EFG_LABELS',\n    'DIP_LINKS',                // Links require two events, one before a VIEWS update, the other after\n    'DIP_RENDER'\n]);\n\nexport default Events;","/**\n * Colors used in ellipsoids, labels, etc.\n *\n * This isn't the best place to insert them, but they will stay here until\n * I can find a working way to have interoperability between JS and CSS on this.\n */\n\nconst selColor = 0xffffff; // Used for crystallographic labels\nconst msColor = 0xff8000;\nconst efgColor = 0x0080ff;\nconst dipColor = 0x00ff80;\n\nexport {\n    selColor,\n    msColor,\n    efgColor,\n    dipColor\n};","/**\n * Listeners for the rendering of ellipsoids\n */\n\nimport _ from 'lodash';\nimport { addPrefix, getSel } from '../utils';\nimport { msColor, efgColor } from './colors';\n\nfunction makeEllipsoidListener(name, color) {\n    // Factory for a listener that will be used for both MS and EFG ellipsoids\n    // with minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_on = addPrefix(name, 'ellipsoids_on');\n    const pre_scale = addPrefix(name, 'ellipsoids_scale');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases for convenience\n        const on = state[pre_on];\n        let scale = state[pre_scale];\n\n\n        if (current_view && (current_view !== next_view || !on)) {\n            // Something's changing. Remove old ellipsoids!\n            current_view.removeEllipsoids(name);\n        }\n\n        // Now for the new view and data\n        if (on) {\n\n            const data = next_view.map((a) => a.getArrayValue(name));\n\n            if (scale === 0) {\n                // Auto scale needed\n                let avg = data.map((t) => _.sum(t.eigenvalues.map(Math.abs))/3.0);\n                avg = _.sum(avg)/data.length;\n                scale = 2.0/avg;\n            }\n\n            next_view.addEllipsoids(data, name, {scalingFactor: scale, color: color, opacity: 0.125});\n        }\n\n        return [\n            {\n                [pre_view]: next_view,\n                [pre_scale]: scale\n            }, []];\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst msEllipsoidListener = makeEllipsoidListener('ms', msColor);\nconst efgEllipsoidListener = makeEllipsoidListener('efg', efgColor);\n\nexport { msEllipsoidListener, efgEllipsoidListener };","/**\n * Listeners for the rendering of labels\n */\n\nimport { addPrefix, getSel, getNMRData } from '../utils';\nimport { selColor, msColor, efgColor } from './colors';\n\nfunction makeLabelListener(name, color, shiftfunc) {\n    // Factory for a function that will be used for both MS and EFG with\n    // minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_references = addPrefix(name, 'references');\n    const pre_type = addPrefix(name, 'labels_type');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n        let ref_table = state[pre_references];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases\n        const mode = state[pre_type];\n        let nmr_mode = mode;\n\n        if (current_view && (current_view !== next_view || mode === 'none')) {\n            // Remove old labels\n            current_view.removeLabels(name);\n        }\n\n        let label_texts;\n        if (mode !== 'none') {\n\n            // We add special instructions just for the case of referenced\n            // chemical shifts. These only matter for MS, not EFG.\n            if (mode === 'cs' && name === 'ms') {\n                nmr_mode = 'iso'; // We then need to reference these\n            }\n\n            if (name !== 'sel_sites') {\n                const data = next_view.map((a) => [a.getArrayValue(name), a.isotopeData]);\n                let [units, values] = getNMRData(data, nmr_mode, name);\n\n                // Second part, here we apply the formula:\n                //     cs = ref - iso\n                if (mode === 'cs' && name === 'ms') {\n                    // Referencing\n                    values = next_view.map((a, i) => {\n                        const ref = ref_table[a.element] || 0.0;\n                        return ref-values[i];\n                    });\n                }\n\n                label_texts = values.map((v) => v.toFixed(2) + ' ' + units);                \n            }\n            else {\n                // Non-NMR labels\n                label_texts = next_view.map((a) => a.crystLabel);\n            }\n\n            next_view.addLabels(label_texts, name, (a, i) => ({ \n                color: color,  \n                shift: shiftfunc(a.radius),\n                height: 0.02\n            }));\n        }\n\n        return [{\n            [pre_view]: next_view,\n        }, []];\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst selLabelListener = makeLabelListener('sel_sites', selColor, (r) => ([r, r, 0]));\nconst msLabelListener = makeLabelListener('ms', msColor, (r) => ([1.414*r, 0.0, 0.0]));\nconst efgLabelListener = makeLabelListener('efg', efgColor, (r) => ([r, -r, 0.0]));\n\nexport { selLabelListener, msLabelListener, efgLabelListener };","import { addPrefix } from '../utils';\n\nimport Events from './events';\nimport { dipColor } from './colors';\nimport { getLinkLabel } from '../utils';\n\n\nfunction makeCalculateLinksListener(name) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of calculating which atoms are the\n    // 'targets' to which we're drawing links to. Must precede a call to \n    // updateViews so that the ghosts get visualised or hidden as needed\n    \n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n\n    const pre_view = addPrefix(name, 'view');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let model = app.model;\n        let ghostreqs = {\n            ...state.sel_ghosts_requests\n        };\n\n        // Targets?\n        const on = state[pre_on];\n        const catom = state[pre_ca];\n        const r = state[pre_r];\n\n        let linkview;\n\n        if (on && catom) {\n            linkview = model.find({\n                sphere: [catom, r]\n            });\n            ghostreqs[name] = linkview;\n        }        \n        else {\n            linkview = model.view([]);\n            // Cancel previous ghosts, if present\n            delete(ghostreqs[name]);\n        }\n\n        return [{\n            [pre_view]: linkview,\n            sel_ghosts_requests: ghostreqs\n        }, [ Events.VIEWS ]];\n    }\n\n    return listener;\n\n}\n\nfunction makeDisplayLinksListener(name, color) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of actually drawing the links  \n\n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_sph = addPrefix(name, 'sphere_show');\n\n    const pre_view = addPrefix(name, 'view');\n    const pre_lnames = addPrefix(name, 'link_names');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let linkview = state[pre_view];\n        let lnames = state[pre_lnames];\n\n        const catom = state[pre_ca];\n        const radius = state[pre_r];\n        const on = state[pre_on];\n        const sphere = state[pre_sph];\n\n        const model = app.model;\n\n        if (!model) {\n            // Nothing to do\n            return [{}, []];\n        }\n\n        // First, cleaning up old visualisation\n        lnames.forEach((name) => { model.removeGraphics(name); });\n\n        // Now creating a new one\n        lnames = [];\n        if (on && catom && linkview) {\n            linkview.atoms.forEach((a2, i) => {\n\n                if (a2 === catom)\n                    return;\n\n                const lname = name + '_link_' + i;\n                const label = getLinkLabel(catom, a2, name);\n                model.addLink(catom, a2, lname, label, {\n                    color: color,\n                    dashed: true,\n                    onOverlay: true\n                });\n                lnames.push(lname);\n            });\n        }\n\n        // Now the sphere\n        if (on && catom && sphere) {\n            model.addSphere(catom.xyz, radius, name + '_sphere', {\n                opacity: 0.1,\n                showAxes: false,\n                showCircles: false\n            });\n        }\n        else {\n            model.removeGraphics(name + '_sphere');\n        }\n\n        return [{\n            [pre_lnames]: lnames\n        }, []];\n    }\n\n    return listener;\n\n}\n\nconst dipCalculateLinksListener = makeCalculateLinksListener('dip');\nconst dipDisplayLinksListener = makeDisplayLinksListener('dip', dipColor);\n\nexport { dipCalculateLinksListener, dipDisplayLinksListener };","/**\n * This file contains the master function for controlling the listener system.\n * Listeners are subscribed to the magresStore and fire whenever the state\n * changes. Since it could get too expensive to check which parts of the state\n * have changed at any time, listeners must be invoked EXPLICITLY by a method\n * making a dispatch by adding their names to the listen_update Array.\n *\n * A listener must have the following interface:\n *\n * function exampleListener(state) {\n *\n *      // ...do something...\n *\n *      return [new_data, new_listeners];\n * \n * }\n *\n * where new_data is a dictionary that will be directly used to update the\n * state while new_listeners is a list of any new listeners that should be\n * queued for update next. The process will stop only once that listen_update = []\n * at the end of a run through the current queue, (so be wary of creating infinite loops!).\n */\n\nimport { viewsListener } from './views';\nimport { msEllipsoidListener, efgEllipsoidListener } from './ellipsoids';\nimport { selLabelListener, msLabelListener, efgLabelListener } from './labels';\nimport { colorScaleListener } from './cscales';\nimport { dipCalculateLinksListener, dipDisplayLinksListener } from './links';\nimport Events from './events';\n\nconst initialListenerState = {\n    listen_update: []\n};\n\nconst listeners = {\n    [Events.VIEWS]:             viewsListener,\n    [Events.SEL_LABELS]:        selLabelListener,\n    [Events.CSCALE]:            colorScaleListener,\n    [Events.MS_ELLIPSOIDS]:     msEllipsoidListener,\n    [Events.MS_LABELS]:         msLabelListener,\n    [Events.EFG_ELLIPSOIDS]:    efgEllipsoidListener,\n    [Events.EFG_LABELS]:        efgLabelListener,\n    [Events.DIP_LINKS]:         dipCalculateLinksListener,\n    [Events.DIP_RENDER]:        dipDisplayLinksListener\n};\n\nfunction makeMasterListener(store) {\n\n    function listener() {\n\n        let state = store.getState();\n        let toUpdate = state.listen_update;\n\n        if (toUpdate && toUpdate.length > 0) {\n\n            let data = {};\n            let nextToUpdate = [];\n\n            toUpdate.forEach((lname) => {\n\n                if (!(lname in listeners))\n                    return;\n\n                let [d, n] = listeners[lname](state);\n                \n                data = {\n                    ...data,\n                    ...d\n                };\n\n                nextToUpdate = nextToUpdate.concat(n);\n            });\n\n            data.listen_update = nextToUpdate;\n\n            store.dispatch({\n                type: 'update',\n                data: data\n            });\n        }\n    }\n\n    return listener;\n}\n\nexport { initialListenerState, Events };\nexport default makeMasterListener;","import Events from './events';\n\nfunction viewsListener(state) {\n\n    let app = state.app_viewer;\n    let model = app.model;\n\n    // Aliases\n    let sel = state.sel_selected_view;\n    let displ = state.sel_displayed_view? state.sel_displayed_view : state.app_default_displayed;\n\n    // Assign new selection\n    if (sel && sel !== app.selected)\n        app.selected = sel;\n\n    if (model)\n        model.all.hide();\n\n    // Deal with ghosts\n    Object.values(state.sel_ghosts_requests).map((s, i) => {\n        // Make each of these visible but translucent\n        s.show();\n        s.setProperty('opacity', 0.5);\n    });\n    \n    // Doing this after the ghosts means any overlap will be fixed here\n    app.displayed = displ;\n    displ.setProperty('opacity', 1.0);\n\n    // We now update all visualizations that may be changed as a result of this\n    return  [{}, \n                [Events.SEL_LABELS, Events.CSCALE,\n                 Events.MS_ELLIPSOIDS, Events.MS_LABELS, \n                 Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, Events.DIP_RENDER]\n            ];\n}\n\nexport { viewsListener };","/**\n * Listeners for color scales\n */\n\nimport _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\nimport { getColorScale } from '../../../utils';\n\nfunction colorScaleListener(state) {\n\n    let app = state.app_viewer;\n    let current_view = state.cscale_view;\n    let current_greyed = state.cscale_displ;\n    let displayed = app.displayed;\n\n    let next_view = getSel(app);\n    let next_greyed = null;\n\n    const cstype = state.cscale_type;\n\n    // Restore color to the grayed out atoms\n    if (current_greyed) {\n        current_greyed.setProperty('color', null);\n    }\n\n    if (cstype !== 'none') {\n\n        // Split in prefix and mode\n        const [prefix, mode] = cstype.split('_', 2);\n\n        next_greyed = displayed.xor(next_view);\n\n        const data = next_view.map((a) => [a.getArrayValue(prefix), a.isotopeData]);\n        const nmrdata = getNMRData(data, mode);\n        const values = nmrdata[1];\n\n        let minv = _.min(values);\n        let maxv = _.max(values);\n        let cs = getColorScale(minv, maxv, 'portland');\n        let colors = values.map((v) => cs.getColor(v).toHexString());\n\n        next_view.setProperty('color', colors);\n        next_greyed.setProperty('color', 0x888888);\n    }\n    else {\n        if (current_view)\n            current_view.setProperty('color', null);\n    }\n\n    return [{\n        cscale_view: next_view,\n        cscale_displ: next_greyed\n    }, []];\n}\n\nexport { colorScaleListener };","import { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\n\nconst initialCScaleState = {\n    cscale_view: null,\n    cscale_displ: null,\n    cscale_type: 'none'\n};\n\n// A base class not meant to be used directly, but inherited by all interfaces\n// that make use of color scales. \n// \n// Must be used in conjuction with makeCScaleSelector!\nclass CScaleInterface extends BaseInterface {\n\n    get colorScaleType() {\n        return this.state.cscale_type;\n    }\n\n    set colorScaleType(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_type: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    get colorScalePrefix() {\n        return this.colorScaleType.split('_', 2)[0];\n    }\n\n}\n\nfunction makeCScaleSelector(prefix, extras=[]) {\n    extras = extras.concat(Object.keys(initialCScaleState));\n\n    return makeSelector(prefix, extras);\n}\n\nexport default CScaleInterface;\nexport { initialCScaleState, makeCScaleSelector };","import _ from 'lodash';\n\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { Events } from '../listeners';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialMSState = {\n    ms_view: null,\n    ms_ellipsoids_on: false,\n    ms_ellipsoids_scale: 0.05,\n    ms_labels_type: 'none',\n    ms_references: {}\n};\n\n// Update any new references for chemical shifts\nfunction msSetReferences(state, refs=null) {\n\n    let data = {\n        ms_references: {}\n    };\n\n    // Default behaviour if refs is null is to clear everything,\n    // otherwise we update the existing table.\n    if (refs) {\n        data.ms_references = {\n            ...state.ms_references,\n            ...refs\n        };\n    }\n\n    // We then update the state and refresh the ms labels, in case any changes\n    // are needed\n    state.ms_references = data.ms_references;\n    if (state.ms_labels_type === 'cs') {\n        data = {\n            ...data,\n            listen_update: [Events.MS_LABELS]\n        };\n    }\n\n    return data;\n}\n\n// Action creator\nconst msAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass MSInterface extends CScaleInterface {\n\n    get hasData() {\n        let m = this.state.app_viewer.model;\n        return (m && (m.hasArray('ms')));\n    }\n\n    get hasEllipsoids() {\n        return this.state.ms_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(msAction({ ms_ellipsoids_on: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.ms_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(msAction({ ms_ellipsoids_scale: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.ms_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(msAction({ 'ms_labels_type': v }, [Events.MS_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'ms');\n    }\n\n    get referenceTable() {\n\n        if (!this.state.app_viewer || !this.state.app_viewer.model)\n            return [];\n\n        // Find the elements, then return the respective references as pairs\n        const elements = _.uniq(this.state.app_viewer.model.symbols);\n        const refs = this.state.ms_references;\n        return _.fromPairs(elements.map((el) => [el, refs[el] || 0]));\n    }\n\n    updateReferenceTable(data) {\n        this.dispatch({\n            type: 'call',\n            function: msSetReferences,\n            arguments: [data]\n        });\n    }\n\n    getReference(el) {\n        return this.state.ms_references[el] || 0.0;\n    }\n\n}\n\nfunction useMSInterface() {\n    let state = useSelector(makeCScaleSelector('ms', ['app_viewer', 'efg_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new MSInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useMSInterface;\nexport { initialMSState, msSetReferences };","import _ from 'lodash';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { CallbackMerger } from '../../../utils';\nimport { msSetReferences } from './MSInterface';\nimport { Events } from '../listeners';\n\nimport CrystVis from 'crystvis-js';\n\n\nconst initialAppState = {\n    app_viewer: null,\n    app_theme: 'dark',\n    app_sidebar: 'load',\n    app_default_displayed: null\n};\n\n// Functions meant to operate on the app alone.\n// These exist outside of the AppInterface because they will be invoked\n// directly from inside the reducer as special actions\nfunction appDisplayModel(state, m) {\n    let app = state.app_viewer;\n    let cm = app.model;\n\n    let data = {};\n    if (cm) {\n        // We turn visualizations off\n        data = {\n            sel_sites_labels_type: 'none',\n            ms_ellipsoids_on: false,\n            ms_labels_type: 'none',\n            ms_cscale_type: 'none',\n            efg_ellipsoids_on: false,\n            efg_labels_type: 'none',\n            efg_cscale_type: 'none',\n            dip_links_on: false,\n            ...msSetReferences(state),\n            //...dipDisplayLinks(state, { dip_links_on: false, dip_central_atom: null })\n        };\n    }\n\n    app.displayModel(m);\n\n    // Return data for dispatch\n    return {\n        app_default_displayed: app.displayed,\n        ...data,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS]\n    };\n}\n\nfunction appDeleteModel(state, m) {\n    \n    let app = state.app_viewer;\n    let data = {};\n\n    // Delete a model\n    app.deleteModel(m);\n\n    let models = app.modelList;\n\n    if (!app.model && models.length > 0) {\n        // Let's display a different one\n        data = appDisplayModel(state, models[0]);\n    }\n\n    return data;\n}\n\nclass AppInterface extends BaseInterface {\n\n    get initialised() {\n        return this.viewer !== null;\n    }\n\n    get viewer() {\n        return this.state.app_viewer;\n    }\n\n    get models() {\n        let models = [];\n\n        if (this.initialised) {\n            models = this.viewer.modelList;\n        }\n\n        return models;\n    }\n\n    get currentModel() {\n        let model = null;\n\n        if (this.initialised) {\n            model = this.viewer.model;\n        }\n\n        return model;\n    }\n\n    get currentModelName() {\n        let model_name = null;\n\n        if (this.initialised) {\n            model_name = this.viewer.modelName;\n        }\n\n        return model_name;\n    }\n\n    get theme() {\n        return this.state.app_theme;\n    }\n\n    set theme(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_theme',\n            value: v\n        });\n    }\n\n    get sidebar() {\n        return this.state.app_sidebar;\n    }\n\n    set sidebar(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_sidebar',\n            value: v\n        });\n    }\n\n    initialise(elem) {\n        console.log('Initialising CrystVis app on element ' + elem);\n        // Initialise app but only if it's not already there\n        var vis = new CrystVis(elem);\n        vis.highlightSelected = true; // Our default\n                \n        if (!this.initialised) {\n            this.dispatch({type: 'set', key: 'app_viewer', value: vis});\n        }\n    }\n\n    load(files, params={}, cback=null) {\n\n        /* Load from a list of files, running a callback with the aggregate\n        dictionary that reports the success for each of them */\n\n        if (!this.initialised) {\n            return;\n        }\n\n        let cbm = new CallbackMerger(files.length, cback);\n        let app = this.viewer;\n        let intf = this;\n\n        // Callback for each file after the FileReader is done\n        function onLoad(contents, name, extension) {\n            var success = app.loadModels(contents, extension, name, params);\n\n            // Find a valid one to load\n            var to_display = null;\n            _.map(success, (v, n) => {\n                if (v === 0) {\n                    to_display = n;\n                }\n            });\n\n            if (to_display) {\n                intf.display(to_display);\n            }\n\n            if (cback) {\n                cbm.call(success);\n            }\n        }\n\n        // Function that loads each individual file\n        function parseOne(f) {\n            \n            let reader = new FileReader();\n            // Extension and file name\n            let name = f.name.split('.')[0];\n            let extension = f.name.split('.').pop();\n\n            reader.onload = ((e) => { onLoad(e.target.result, name, extension) });\n            reader.readAsText(f);            \n        }\n\n        _.forEach(files, parseOne);\n    }\n\n    display(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDisplayModel,\n            arguments: [m]\n        });\n    }\n\n    delete(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDeleteModel,\n            arguments: [m]\n        });\n    }\n\n}\n\n// Hook for interface\nfunction useAppInterface() {\n    let state = useSelector(makeSelector('app'), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new AppInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useAppInterface;\nexport { initialAppState, appDisplayModel, appDeleteModel };","import { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\nimport CrystVis from 'crystvis-js';\n\nimport { Events } from '../listeners';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst SLC = CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON;\nconst CLC = CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON;\n\nconst initialSelState = {\n    sel_selected_view: null,\n    sel_displayed_view: null,\n    sel_ghosts_requests: {},\n    sel_on: false,\n    sel_mode: 'atom',\n    sel_sphere_r: 2.0,\n    sel_bond_n: 1,\n    sel_hlight: true,\n    sel_sites_view: null,\n    sel_sites_labels_type: 'none'\n};\n\nclass SelInterface extends BaseInterface {\n\n    get app() {\n        return this.state.app_viewer;\n    }\n\n    get selected() {\n        return this.state.sel_selected_view;\n    }\n\n    set selected(v) {\n        if (!v) {\n            let model = this.state.app_viewer.model;\n            if (model) {\n                v = model.view([]);\n            }\n        }\n\n        this.dispatch({\n            type: 'update', \n            data: {\n                sel_selected_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get displayed() {\n        return this.state.sel_displayed_view || this.state.app_default_displayed;\n    }\n\n    set displayed(v) {\n        if (!v) {\n            v = this.state.app_default_displayed;\n            if (!v) {\n                // Then there's just no model at all\n                return;\n            }\n        }\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_displayed_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get defaultDisplayed() {\n        return this.state.app_default_displayed;\n    }\n\n    get highlightSelected() {\n        return this.state.sel_hlight;\n    }\n\n    set highlightSelected(v) {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        app.highlightSelected = v;\n        this.dispatch({\n            type: 'set',\n            key: 'sel_hlight',\n            value: v\n        });\n    }\n\n    get showCrystLabels() {\n        return this.state.sel_sites_labels_type === 'labels';\n    }\n\n    set showCrystLabels(v) {\n        v = v? 'labels' : 'none';\n\n        console.log(v);\n\n        this.dispatch({\n            type: 'update',\n            data: { sel_sites_labels_type: v, listen_update: [Events.SEL_LABELS]}\n        });\n    }\n\n    get selectionOn() {\n        return this.state.sel_on;\n    }\n\n    set selectionOn(v) {\n        this.setSelection(this.selectionMode, {on: v});\n    }\n\n    get selectionMode() {\n        return this.state.sel_mode;\n    }\n\n    set selectionMode(v) {\n        this.setSelection(v);\n    }\n\n    get selectionSphereR() {\n        return this.state.sel_sphere_r;\n    }\n\n    set selectionSphereR(v) {\n        this.setSelection(this.selectionMode, {r: v});\n    }\n\n    get selectionBondN() {\n        return this.state.sel_bond_n;\n    }\n\n    set selectionBondN(v) {\n        this.setSelection(this.selectionMode, {n: v});\n    }\n\n    get isotopeChoices() {\n        // Find which isotopes are available for the currently selected atoms\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        let elements = sel.map((a, i) => a.element);\n        // Are they all the same?\n        let el = elements[0];\n        if (!elements.reduce((s, x) => (s && x === el), true)) {\n            return null;\n        }\n\n        // Get the isotope information\n        let eData = sel.atoms[0].elementData;\n\n        let iKeys = Object.keys(eData.isotopes).sort();\n        let iData = iKeys.map((A, i) => {\n            let iso = eData.isotopes[A];\n            return {\n                A: A,\n                is_nmr_active: iso.spin !== 0,\n                is_Q_active: iso.Q !== 0,\n                is_max_nmr: A === eData.maxiso_NMR,\n                is_max_Q: A === eData.maxiso_Q,\n                abundance: iso.abundance\n            };\n        });\n\n        return iData;\n    }\n\n    setIsotope(A) {\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        sel.setProperty('isotope', A);\n\n        // Must update everything that depends on isotope properties\n        this.dispatch({\n            type: 'update',\n            data: {\n                listen_update: [Events.EFG_LABELS, Events.CSCALE]\n            }\n        });\n    }\n\n    setSelection(mode, options={}) {\n        // Set the selection for a certain mode and options\n\n        let app = this.state.app_viewer;\n        if (!app) \n            return;\n\n        let default_options = {\n            r: this.selectionSphereR,\n            n: this.selectionBondN,\n            on: this.selectionOn\n        };\n\n        options = {\n            ...default_options,\n            ...options\n        };\n\n        // Selector functions\n        let selFunc = null;\n\n        if (options.on) {\n            switch(mode) {\n                case 'atom':\n                    selFunc = ((a, e) => {\n                        return app.model.view([a.imgIndex]); // Just the one\n                    });\n                    break;\n                case 'element':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryElements(a.element);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'sphere':\n                    const r = options.r;\n                    selFunc = ((a, e) => {\n                        var found = app.model._querySphere(a, r); \n                        return app.model.view(found);\n                    });\n                    break;\n                case 'molecule': \n                    selFunc = ((a, e) => {\n                        var found = app.model._queryMolecule(a);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'bonds':\n                    const n = options.n;\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryBonded(a, n, false);\n                        found = found.concat([a.imgIndex]); // Crystvis excludes the original atom\n                        return app.model.view(found);\n                    });\n                    break;\n                default:\n                    // No selection at all\n                    break;\n            }\n        }\n\n        // We use this to guarantee that the selection still doesn't go out of\n        // the default display (e.g. the main cell). Everything else remains\n        // hidden or can be used as ghost for other purposes\n        var dd = this.state.app_default_displayed;\n        var intf = this;\n\n        if (selFunc) {\n            app.onAtomClick((a, e) => { intf.selected = dd.and(selFunc(a, e)); }, LC);\n            app.onAtomClick((a, e) => { intf.selected = dd.and(app.selected.or(selFunc(a, e))); }, SLC);\n            app.onAtomClick((a, e) => { intf.selected = dd.and(app.selected.xor(selFunc(a, e))); }, CLC);\n        }\n        else {\n            app.onAtomClick((a, e) => {}, LC);\n            app.onAtomClick((a, e) => {}, SLC);\n            app.onAtomClick((a, e) => {}, CLC);            \n        }\n\n        this.dispatch({type: 'update', data: {\n            sel_mode: mode,\n            sel_sphere_r: options.r,\n            sel_bond_n: options.n,\n            sel_on: options.on\n        }});\n    }\n\n}\n\n// Hook for interface\nfunction useSelInterface() {\n    let state = useSelector(makeSelector('sel', ['app_viewer', 'app_default_displayed']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new SelInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default useSelInterface;\nexport { initialSelState };","import { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialEFGState = {\n    efg_view: null,\n    efg_ellipsoids_on: false,\n    efg_ellipsoids_scale: 0.1,\n    efg_labels_type: 'none'\n};\n\n// Action creator\nconst efgAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass EFGInterface extends CScaleInterface {\n\n    get hasData() {\n        let m = this.state.app_viewer.model;\n        return (m && (m.hasArray('efg')));\n    }\n\n    get hasEllipsoids() {\n        return this.state.efg_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_on: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.efg_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_scale: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.efg_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(efgAction({ efg_labels_type: v }, [Events.EFG_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'efg');\n    }\n\n}\n\nfunction useEFGInterface() {\n    let state = useSelector(makeCScaleSelector('efg', ['app_viewer', 'ms_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EFGInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEFGInterface;\nexport { initialEFGState };","import { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialDipState = {\n    dip_view: null,\n    dip_link_names: [],\n    dip_links_on: false,\n    dip_central_atom: null,\n    dip_radius: 5.0,\n    dip_sphere_show: true\n};\n\n\nclass DipInterface extends BaseInterface {\n\n    get isOn() {\n        return this.state.dip_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            dip_links_on: v,\n            listen_update: [ Events.DIP_LINKS ]\n        };\n\n        if (!v) \n            data.dip_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.dip_central_atom;\n    }\n\n    get radius() {\n        return this.state.dip_radius;\n    }\n\n    get showSphere() {\n        return this.state.dip_sphere_show;\n    }\n\n    bind() {\n        let app = this.state.app_viewer;\n        let dispatch = this._dispatcher;\n\n        if (!app)\n            return;\n\n        app.onAtomClick((a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        dip_central_atom: a,\n                        listen_update: [ Events.DIP_LINKS ]\n                    }\n                });\n        }, LC);        \n    }\n\n    unbind() {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        // Remove the event\n        app.onAtomClick(() => {}, LC);\n    }\n\n}\n\nfunction useDipInterface() {\n    let state = useSelector(makeSelector('dip', ['app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new DipInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useDipInterface;\nexport { initialDipState };","import { createStore } from 'redux';\n\n// Initial state, merged from segments\nimport { initialAppState } from './interfaces/AppInterface';\nimport { initialSelState } from './interfaces/SelInterface';\nimport { initialCScaleState } from './interfaces/CScaleInterface';\nimport { initialMSState } from './interfaces/MSInterface';\nimport { initialEFGState } from './interfaces/EFGInterface';\nimport { initialDipState } from './interfaces/DipInterface';\nimport makeMasterListener, { initialListenerState } from './listeners';\n\n// Merging together\nconst initialState = {\n    ...initialAppState,\n    ...initialSelState,\n    ...initialCScaleState,\n    ...initialMSState,\n    ...initialEFGState,\n    ...initialDipState,\n    ...initialListenerState\n};\n\n// Reducer\nfunction storeReducer(state=initialState, action={type: 'none'}) {\n    switch(action.type) {\n        case 'set':\n            // Set a single value\n            state = {\n                ...state,\n                [action.key]: action.value,\n            };\n            break;\n        case 'update':\n            // Set multiple values\n            state = {\n                ...state,\n                ...action.data\n            };\n            break;\n        case 'call':\n            // Do complex stuff with state\n            let args = [state].concat(action.arguments);\n            let data = action.function(...args);\n            state = {\n                ...state,\n                ...data\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nconst magresStore = createStore(storeReducer);\nmagresStore.subscribe(makeMasterListener(magresStore));\n\nexport default magresStore;","import magresStore from './store';\nimport useAppInterface from './interfaces/AppInterface';\nimport useSelInterface from './interfaces/SelInterface';\nimport useMSInterface from './interfaces/MSInterface';\nimport useEFGInterface from './interfaces/EFGInterface';\n\nexport default magresStore;\n\nexport { \n    useAppInterface, \n    useSelInterface, \n    useMSInterface, \n    useEFGInterface \n};","import './MagresViewHeader.css';\nimport logo from '../icons/logo.svg';\nimport { FaSun, FaMoon, FaRegFolderOpen, FaMousePointer } from 'react-icons/fa';\n\nimport React from 'react';\nimport MVCustomSelect, { MVCustomSelectOption } from '../controls/MVCustomSelect';\nimport MVIcon from '../icons/MVIcon';\nimport { useAppInterface } from './store';\n\nfunction ThemeSwitcher() {\n\n    const appint = useAppInterface();\n\n    const other = {\n        dark: 'light',\n        light: 'dark'\n    };\n\n    return (<div id='mv-themeswitch' onClick={() => { appint.theme = other[appint.theme]; }}>\n        <div id='mv-themeicons' className={appint.theme}>\n            <FaMoon id='mv-themedark'/>\n            <FaSun id='mv-themelight'/>\n        </div>\n    </div>);\n}\n\nfunction MagresViewHeader() {\n\n    const appint = useAppInterface();\n\n    return (<header className='mv-header'>\n        <div className='mv-header-left'>\n            <img src={logo} alt='MagresView logo' id='mv-header-logo'></img>\n            <h3 id='mv-header-title'>\n                <span style={{color: 'var(--ms-color-2)'}}>M</span>agres<span style={{color: 'var(--efg-color-2)'}}>V</span>iew 2.0\n            </h3>\n        </div>\n        <div className='mv-header-right'>\n            <MVCustomSelect onSelect={(v) => { appint.sidebar = v; }} selected={appint.sidebar}>\n                <MVCustomSelectOption value='load' icon={<FaRegFolderOpen />}>Load file</MVCustomSelectOption>\n                <MVCustomSelectOption value='select' icon={<FaMousePointer />}>Select and display</MVCustomSelectOption>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>Magnetic Shielding</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>Electric Field Gradient</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='jcoup' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J Couplings</MVCustomSelectOption>\n            </MVCustomSelect>            \n            <span className='mv-hor-sep-3'></span>\n            <ThemeSwitcher />\n        </div>\n    </header>);\n}\n\nexport default MagresViewHeader;","import './MagresViewSidebar.css';\n\nimport React from 'react';\n\nimport { chainClasses } from '../../utils';\n\nfunction MagresViewSidebar(props) {\n    return (<div className={chainClasses('mv-sidebar', props.show? 'open' : '')}>\n        {props.title? <h2>{props.title}</h2> : null}\n        {props.children}\n    </div>);\n}\n\nexport default MagresViewSidebar;","import './MVFile.css';\nimport { chainClasses } from '../utils';\n\nimport React from 'react';\n\nfunction MVFile(props) {\n\n    function onChange(e) {\n        if (props.onSelect) {\n            var files = e.target.files;\n            if (files.length > 0) {\n                props.onSelect(files);\n            }\n        }\n        e.target.value = null;\n    }\n\n    return (\n        <input className={chainClasses('mv-control', 'mv-file', props.notext? 'hide-text' : null)} type='file' \n            accept={props.filetypes} \n            onChange={onChange} \n            multiple={props.multiple}\n        />\n    );\n}\n\nexport default MVFile;","import './MVBox.css';\nimport React from 'react';\nimport { GrFormClose } from 'react-icons/gr';\n\nimport { chainClasses } from '../utils';\n\nfunction MVBox(props) {\n\n    const status_class = (props.status)? 'mv-box-' + props.status : '';\n    const onClose = props.onClose || (() => {});\n\n    return (<div className={chainClasses('mv-control', 'mv-box', status_class)}>\n        <div className='mv-box-header'><GrFormClose onClick={onClose} size={22}/></div>\n        {props.children}\n    </div>);\n}\n\nexport default MVBox;","import './MVCheckBox.css';\n\nimport React from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVCheckBox(props) {\n\n    const id = useId('checkbox');\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    const onCheck = props.onCheck || (() => {});\n\n    return (\n        <span className='mv-control mv-checkbox' style={style} title={props.title}>\n            <input id={id} type='checkbox' checked={props.checked} onChange={(e) => onCheck(e.target.checked)}/>\n            <label htmlFor={id}/>{props.children}\n        </span>\n    );\n}\n\nexport default MVCheckBox;","import './controls.css';\nimport './MVListSelect.css';\n\nimport React, { cloneElement } from 'react';\n\nimport { chainClasses } from '../utils';\n\nfunction MVListSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className={chainClasses('mv-control', 'mv-lselect-opt', props.selected? 'mv-lselected': null)} \n             onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVListSelect(props) {\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVListSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    return (\n        <div className='mv-control mv-lselect' title={props.title}>\n            {options.map((o, i) => {\n                return cloneElement(o, {key: i, selected: (i === selected),\n                                        onClick: () => { onSelect(values[i]); }});\n            })}\n        </div>\n    );\n}\n\n\nexport { MVListSelectOption };\nexport default MVListSelect;","import MagresViewSidebar from './MagresViewSidebar';\n\nimport { AiFillEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { MdDeleteForever } from 'react-icons/md';\n\nimport MVFile from '../../controls/MVFile';\nimport MVBox from '../../controls/MVBox';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVListSelect, { MVListSelectOption } from '../../controls/MVListSelect';\nimport { useAppInterface } from '../store';\n\nimport React, { useState } from 'react';\n\nimport _ from 'lodash';\n\n// Accepted file formats\nconst file_formats = ['.cif', '.xyz', '.magres', '.cell'];\n\nfunction MVSidebarLoad(props) {\n\n    const [ state, setState ] = useState({\n        load_as_mol: false,\n        load_message: '',\n        load_message_status: null,\n        list_selected: ''\n    });\n\n    const appint = useAppInterface();\n    const models = appint.models;\n\n    console.log('[MVSidebarLoad rendered]');\n\n    // Methods\n    function loadModel(f) {\n\n        var params = {\n            molecularCrystal: state.load_as_mol,\n            supercell: [3,3,3]\n        };\n\n        appint.load(f, params, (success) => {\n            // Check success\n            var msg = '';\n            var err = false;\n            _.map(success, (v, n) => {\n                if (v !== 0) {\n                    msg += 'Error parsing file ' + n + ': ' + v + '\\n';\n                    err = true;\n                }\n            });\n            if (msg === '') {\n                msg = 'All files parsed successfully!'\n            }\n\n            setState({\n                ...state,\n                load_message: msg, \n                load_message_status: err? 'error' : 'success'\n            });\n        });\n    }\n\n    function makeModelOption(m, i) {\n\n        var model_icon;        \n        if (m === appint.currentModelName) {\n            model_icon = <AiFillEye size={22}/>;\n        }\n        else {\n            model_icon = <AiOutlineEyeInvisible size={22} onClick={() => { appint.display(m); }} />\n        }\n\n        return (<MVListSelectOption key={i} value={m} icon={model_icon}>\n            {m}\n            <MdDeleteForever style={{color: 'var(--err-color-2)'}} size={22} onClick={() => { appint.delete(m); }} />\n        </MVListSelectOption>);\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Load file'>\n        <div className='mv-sidebar-block'>\n            <MVFile filetypes={file_formats.join(',')} onSelect={loadModel} notext={true} multiple={true}/>\n            <MVCheckBox onCheck={(v) => {setState({...state, load_as_mol: v})}}>Load as molecular crystal</MVCheckBox>\n        </div>\n        <h4>Models:</h4>\n        <MVListSelect selected={state.list_selected} onSelect={(v) => { setState({...state, list_selected: v}); }}>\n            {models.map(makeModelOption)}\n        </MVListSelect>\n        <span className='sep-1' />\n        <MVBox status={state.load_message_status} onClose={() => {setState({...state, load_message_status: ''})}}>\n            {state.load_message}\n        </MVBox>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarLoad;","import './MVButton.css';\nimport React from 'react';\n\nfunction MVButton(props) {\n    return (\n    <div className='mv-control'>\n        <button {...props} className='mv-control mv-button'>\n            {props.children}\n        </button>\n    </div>);\n}\n\nexport default MVButton;","import './MVRadioButton.css';\nimport _ from 'lodash';\n\nimport React, { cloneElement } from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVRadioButton(props) {\n\n    const uid = useId('radiobutton');\n\n    return (<span className='mv-control mv-radio' title={props.title}>\n        <input id={uid} name={props.name} type=\"radio\" checked={props.checked} onChange={props.onChange}/>\n        <label htmlFor={uid}></label>{props.children}\n    </span>);\n}\n\nfunction MVRadioGroup(props) {\n\n    // Which children are buttons?\n    const buttons = _.filter(props.children, (c) => c.type === MVRadioButton);\n    const values = buttons.map((b) => b.props.value);\n\n    // Find the index of the one we want selected\n    const selected = values.findIndex((v) => v === props.selected);\n    const onChange = props.onSelect? props.onSelect : (() => {});\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    return(<span className='mv-control mv-radiogroup' style={style} title={props.title}>\n        {props.label? <span className=\"mv-radiogroup-label\" style={props.labelStyle}>{props.label}</span> : null}\n        {buttons.map((b, i) => {\n            return cloneElement(b, {key: i, \n                index: i, \n                checked: (i === selected), \n                name: props.name, \n                onChange: (e) => { onChange(b.props.value); }\n            });\n        })}\n    </span>);\n}\n\nexport { MVRadioGroup };\nexport default MVRadioButton;","import './MVText.css';\n\nimport React, { useState } from 'react';\n\nimport { chainClasses, useId } from '../utils';\n\nfunction MVText(props) {\n\n    const [submitted, setSubmitted] = useState(true);\n    const id = useId('text');\n\n    var filter = null;\n    if (props.filter)\n        filter = new RegExp(props.filter);\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n    }\n\n    const waitSubmit = (props.onSubmit && !submitted);\n\n    function onChange(e) {\n        var v = e.target.value;\n        if (filter) {\n            let m = filter.exec(v)\n            v = m? m[0] : props.value;\n        }\n        setSubmitted(false);\n        if(props.onChange)\n            props.onChange(v);\n    }\n\n    function onKeyDown(e) {\n        if (e.key === 'Enter') {\n            if (waitSubmit)\n                props.onSubmit(props.value);\n            setSubmitted(true);\n        }\n    }\n\n    return (\n    <span className='mv-text' style={style} title={props.title}>\n        {props.children? <label htmlFor={id} className='mv-textlabel'>{props.children}</label> : <></>}\n        <input type='text' id={id} className={chainClasses('mv-control mv-textfield', waitSubmit? 'mv-submit-wait' : '')} \n            size={props.size} value={props.value}\n            onChange={onChange} onKeyDown={onKeyDown}\n            disabled={props.disabled}\n        />\n    </span>);\n}\n\nexport default MVText;","import './MVSidebarSelect.css';\n\nimport _ from 'lodash';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useSelInterface } from '../store';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVText from '../../controls/MVText';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\n\nfunction sharedElement(sel) {\n    if (sel == null || sel.atoms.length === 0) {\n        return null;\n    }\n\n    let atoms = sel.atoms;\n    let el = atoms[0].element;\n\n    if (atoms.slice(1).reduce((s, a) => (s && a.element === el), true)) {\n        return el;\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction MVIsotopeSelection(props) {\n\n    // Actually unnecessary; we only use it to trigger a re-render\n    const [ state, setState ] = useState(1);\n\n    const selint = useSelInterface();\n    const selected = selint.selected;\n    const el = sharedElement(selected);\n\n    let elData = null;\n    let isoConf = null;\n    let selOptions = [];\n    let currentOption = 0;\n\n    if (el) {\n        // Information about that element?\n        elData = selected.atoms[0].elementData;\n        isoConf = selected.atoms.map((a) => a.isotope);\n\n        // Are they all the same?\n        currentOption = isoConf[0].toString();\n        if (!isoConf.reduce((s, x) => s && x === isoConf[0], true)) {\n            // If not, then we have to add a special option that reproduces this last\n            // configuration\n            selOptions = [<MVCustomSelectOption key={-1} value={isoConf}>\n                {_.join(_.uniq(isoConf))}\n            </MVCustomSelectOption>];\n            currentOption = isoConf;\n        }\n\n        // Generate options\n        let keys = Object.keys(elData.isotopes).sort();\n        selOptions = selOptions.concat(keys.map((A, i) => (<MVCustomSelectOption key={i} value={A}>\n                {A}\n            </MVCustomSelectOption>))\n        );\n    }\n    else {\n        selOptions = [<MVCustomSelectOption key={0} value={0}>N/A</MVCustomSelectOption>];\n    }\n\n    // This component handles specifically just the selection of isotopes\n    return (<>\n        <h3>Isotope selection</h3>\n        <MVCustomSelect disabled={!el} onSelect={(A) => { selint.setIsotope(A); setState(-state); }} selected={currentOption}>{selOptions}</MVCustomSelect>\n    </>);\n}\n\n\nfunction MVSidebarSelect(props) {\n\n    const selint = useSelInterface();\n\n    console.log('[MVSidebarSelect rendered]');\n\n    function selectMode(v) {\n        selint.selectionMode = v;\n    }\n\n    function setR(v) {\n        selint.selectionSphereR = v;\n    }\n\n    function setN(v) {\n        selint.selectionBondN = v;\n    }\n\n    const selRef = useRef();\n    selRef.current = selint;\n\n    useEffect(() => {\n        let selint = selRef.current;\n        selint.selectionOn = props.show;\n    }, [props.show, selint.app]); // The dependency on app guarantees this is executed AFTER the app itself is loaded\n\n    return (<MagresViewSidebar show={props.show} title='Select and display'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={selint.showCrystLabels} onCheck={(v) => { selint.showCrystLabels = v }}>Show crystallographic labels</MVCheckBox>        \n            <MVCheckBox checked={selint.highlightSelected} onCheck={(v) => { selint.highlightSelected = v }}>Highlight selected</MVCheckBox>        \n            <span className='sep-1' />\n            <MVRadioGroup label='Selection mode' onSelect={selectMode} selected={selint.selectionMode} name='selec_mode_radio'>\n                <MVRadioButton value='atom'>Atom</MVRadioButton>\n                <MVRadioButton value='element'>Element</MVRadioButton>\n                <MVRadioButton value='sphere'>Sphere, radius =&nbsp;\n                    <MVText size='5' value={selint.selectionSphereR} filter='[0-9]*(?:\\.[0-9]*)?' onChange={setR} onSubmit={setR} />&nbsp;  &#8491;\n                </MVRadioButton>\n                <MVRadioButton value='molecule'>Molecule</MVRadioButton>\n                <MVRadioButton value='bonds'>Bonds, max distance = &nbsp;\n                    <MVText size='3' value={ selint.selectionBondN } filter='[0-9]*' onChange={setN} onSubmit={setN} />\n                </MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <div className='mv-sidebar-grid'>\n                <MVButton onClick={() => { selint.selected = selint.displayed }}>Select visible</MVButton>\n                <MVButton onClick={() => { selint.selected = null }}>Select none</MVButton>                \n                <MVButton onClick={() => { selint.displayed = selint.selected }}>Display selected</MVButton>\n                <MVButton onClick={() => { selint.displayed = null }}>Reset displayed</MVButton>                \n            </div>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVIsotopeSelection />\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarSelect;","import './MVRange.css';\nimport './MVText.css'; \n\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { regularExpressions, useId } from '../utils';\nimport MVText from './MVText';\n\nfunction MVRange(props) {\n\n    // Range definition\n    const min = 'min' in props? props.min : 0;\n    const max = 'max' in props? props.max : 100;\n    const step = 'step' in props? props.step : 1;\n\n    function toNumber(v) {\n        v = parseFloat(v);\n        v = Math.min(v, max);\n        v = Math.max(v, min);\n        v = Math.round(v/step)*step;\n        return v;\n    }\n\n    const in_val = (props.value != null? toNumber(props.value) : min);\n    const id = useId('range');\n\n    const [text, setText] = useState(in_val.toString());\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n        style['--thumb-color'] = props.color;\n    }\n\n    function acceptValue(v) {\n        v = toNumber(v);\n\n        if (props.onChange)\n            props.onChange(v);\n    }\n\n    let stateRef = useRef();\n    stateRef.current = [text, setText];\n\n    // Update the text value if the props one changed and if necessary\n    useEffect(() => {\n        const [text, setText] = stateRef.current;\n\n        if (parseFloat(text) !== in_val)\n            setText(in_val.toString());\n    }, [in_val]);\n\n\n    return (\n        <div className='mv-control'>\n            {props.children? <label htmlFor={id} className='mv-rangelabel'>{props.children}</label> : <></>}            \n            <span className='mv-control mv-range' style={style}>\n                <input className='mv-range-slider' type='range' id={id} onInput={(e) => { acceptValue(e.target.value); }}\n                 min={min} max={max} step={step} value={in_val} disabled={props.disabled}/>\n                <MVText size={4} filter={regularExpressions.float} value={text} onChange={setText} onSubmit={acceptValue} disabled={props.disabled}/>\n            </span>\n        </div>);\n}\n\nexport default MVRange;","import './controls.css';\nimport './MVModal.css';\n\nimport React from 'react';\nimport { IconContext } from 'react-icons';\nimport { IoClose } from 'react-icons/io5';\n\nimport { chainClasses } from '../utils';\n\nimport MVButton from './MVButton';\n\nfunction MVModal(props) {\n\n    const onAccept = props.onAccept || (() => {});\n    const onClose = props.onClose || (() => {});\n\n    return(\n        <div className={chainClasses('mv-control mv-modal-overlay', props.display? '' : 'mv-modal-hidden')}>\n            <div className='mv-control mv-modal'>\n                <div className='mv-modal-title'>\n                    {props.title} \n                    <IconContext.Provider value={{color: 'var(--fwd-color-1)'}}>\n                        <IoClose size={22} onClick={onClose}/>\n                    </IconContext.Provider>\n                </div>\n                <div className='mv-modal-content'>\n                    {props.children}                \n                </div>\n                <div className='mv-modal-footer'>\n                    <MVButton onClick={onAccept}>OK</MVButton>\n                    <MVButton onClick={onClose}>Cancel</MVButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MVModal;","import './MVSidebarMS.css';\n\nimport _ from 'lodash';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useMSInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVModal from '../../controls/MVModal';\nimport MVText from '../../controls/MVText';\n\nfunction MVReferenceTable(props) {\n\n    const msint = useMSInterface();\n    const [ refTable, setRefTable ] = useState(msint.referenceTable);\n\n    // We store a copy of the reference list internally; it only gets set on\n    // the interface once we click OK. This is to avoid needless expensive \n    // operations when typing text in the fields, especially if the CS labels\n    // are on.\n    \n    const intRef = useRef();\n    intRef.current = msint;\n\n    useEffect(() => {\n        setRefTable(intRef.current.referenceTable);\n    }, [props.display]);\n\n    const elements = _.keys(refTable).sort();\n\n    function copyAll(v) {\n        setRefTable(_.fromPairs(elements.map((el) => [el, v])));\n    }\n\n    return (<MVModal title='References for chemical shifts, by element (ppm)' display={props.display} onClose={props.close} onAccept={() => { msint.updateReferenceTable(refTable); props.close(); }}>\n        <div className='mv-msref-table'>\n            {elements.map((el, i) => {\n                const ref = refTable[el];\n\n                return (<div key={i} className='mv-msref-table-row'>\n                            <div className='mv-msref-table-el'>{el}</div>\n                            <div className='mv-msref-table-ref'>\n                                <MVText value={ref} onChange={(v) => { setRefTable({...refTable, [el]: v}) }} size={5}/>\n                            </div>\n                            <div className='mv-msref-table-copy'>\n                                <MVButton onClick={() => { copyAll(ref); }}>Apply to all</MVButton>\n                            </div>\n                        </div>);\n            })}\n        </div>\n    </MVModal>);\n}\n\n\nfunction MVSidebarMS(props) {\n\n    const [ state, setState ] = useState({\n        showRefTable: false\n    });\n\n    const msint = useMSInterface();\n\n    console.log('[MVSidebarMS rendered]');\n\n    var has_ms = false;\n    if (props.show) {\n        has_ms = msint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Magnetic Shielding'>\n        <div className={chainClasses('mv-sidebar-block', has_ms? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { msint.hasEllipsoids = v; }} checked={msint.hasEllipsoids}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.01} max={0.5} step={0.005} value={msint.ellipsoidScale}\n                      onChange={(s) => { msint.ellipsoidScale = s; }} disabled={!msint.hasEllipsoids} noState>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { msint.ellipsoidScale = 0; }} disabled={!msint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { msint.labelsMode = v; }} selected={msint.labelsMode} name='ms_label_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='cs'>Chemical Shifts (ppm, uses references)</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { msint.colorScaleType = v; }} selected={msint.colorScaleType} disabled={!msint.colorScaleAvailable} name='ms_cscale_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='ms_iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='ms_aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='ms_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVButton onClick={() => { setState({...state, showRefTable: true}) }}>Set References</MVButton>\n             <MVReferenceTable display={state.showRefTable} close={() => { setState({...state, showRefTable: false}) }}/>\n          </div>\n         <div className={chainClasses('mv-warning-noms', has_ms? 'hidden': '')}>No MS data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarMS;","import './MVSidebarEFG.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEFGInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport React from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nfunction MVSidebarEFG(props) {\n\n    const efgint = useEFGInterface();\n\n    console.log('[MVSidebarEFG rendered]');\n\n    var has_efg = false;\n    if (props.show) {\n        has_efg = efgint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Electric Field Gradient'>\n        <div className={chainClasses('mv-sidebar-block', has_efg? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { efgint.hasEllipsoids = v; }} checked={ efgint.hasEllipsoids } color={'var(--efg-color-2)'}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.1} max={10.0} step={0.05} value={efgint.ellipsoidScale} color={'var(--efg-color-2)'}\n                      onChange={(s) => { efgint.ellipsoidScale = s; }} disabled={!efgint.hasEllipsoids} noState>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { efgint.ellipsoidScale = 0; }} disabled={!efgint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { efgint.labelsMode = v; }} selected={efgint.labelsMode} name='efg_label_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (au)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='Q'>Quadrupole Coupling (kHz)</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { efgint.colorScaleType = v; }} selected={ efgint.colorScaleType } disabled={!efgint.colorScaleAvailable}\n                           name='efg_cscale_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='efg_aniso'>Anisotropy (au)</MVRadioButton>\n                <MVRadioButton value='efg_asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='efg_Q'>Quadrupole Coupling</MVRadioButton>\n             </MVRadioGroup>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_efg? 'hidden' : '')}>No EFG data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEFG;","import './MVSidebarDip.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport useDipInterface from '../store/interfaces/DipInterface';\n\n\nfunction MVSidebarDip(props) {\n\n    const dipint = useDipInterface();\n\n    const intRef = useRef();\n    intRef.current = dipint;\n\n    useEffect(() => {\n        let dipint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && dipint.isOn) {\n            dipint.bind();\n        }\n        else {\n            dipint.unbind();\n        }\n\n    }, [props.show, dipint.isOn]);\n\n    return (<MagresViewSidebar show={props.show} title='Dipolar couplings'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.isOn = v; }} checked={ dipint.isOn } >Show dipolar couplings</MVCheckBox>            \n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarDip;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './themes.css';\nimport '../controls/controls.css';\nimport './MagresViewApp.css';\nimport React, { useEffect, useRef } from 'react';\n\nimport { chainClasses } from '../utils';\nimport MagresViewHeader from './MagresViewHeader';\nimport { useAppInterface } from './store';\n\nimport MVSidebarLoad from './sidebars/MVSidebarLoad';\nimport MVSidebarSelect from './sidebars/MVSidebarSelect';\nimport MVSidebarMS from './sidebars/MVSidebarMS';\nimport MVSidebarEFG from './sidebars/MVSidebarEFG';\nimport MVSidebarDip from './sidebars/MVSidebarDip';\n\nfunction MagresViewPage() {\n\n    let appint = useAppInterface();\n\n    const appRef = useRef(appint);\n\n    useEffect(() => {\n        appRef.current.initialise('#mv-appwindow');\n    }, []);\n\n    return (<div className={chainClasses('mv-main-page', 'theme-' + appint.theme )}>\n                <MagresViewHeader />\n                <MVSidebarLoad show={appint.sidebar === 'load'} />\n                <MVSidebarSelect show={appint.sidebar === 'select'} />\n                <MVSidebarMS show={appint.sidebar === 'ms'} />\n                <MVSidebarEFG show={appint.sidebar === 'efg'} />\n                <MVSidebarDip show={appint.sidebar === 'dip'} />\n                <div id='mv-appwindow' className='mv-background'/>\n            </div>);\n}\n\nfunction MagresViewApp() {\n\n    return (\n        <div className='mv-main-app'>\n            <MagresViewPage />\n        </div>\n    );\n}\n\nexport default MagresViewApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport MagresViewApp from './core/MagresViewApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport magresStore from './core/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={magresStore}>\n      <MagresViewApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}