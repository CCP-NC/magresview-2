{"version":3,"sources":["utils/utils-react.js","utils/utils-generic.js","utils/utils-regexp.js","utils/utils-nmr.js","utils/utils-rotation.js","core/store/utils.js","core/store/listeners/colors.js","core/store/listeners/ellipsoids.js","core/store/listeners/labels.js","core/store/listeners/links.js","core/store/listeners/euler.js","core/store/listeners/events.js","core/store/listeners/index.js","core/store/listeners/display.js","core/store/listeners/views.js","core/store/listeners/cell.js","core/store/listeners/cscales.js","core/store/interfaces/SelInterface.js","core/store/interfaces/CScaleInterface.js","core/store/interfaces/MSInterface.js","core/store/interfaces/EFGInterface.js","core/store/interfaces/DipInterface.js","core/store/interfaces/JCoupInterface.js","core/store/interfaces/EulerInterface.js","core/store/interfaces/AppInterface.js","core/store/interfaces/FilesInterface.js","core/store/store.js","core/store/index.js","icons/logo.svg","controls/MVCustomSelect.js","icons/ms.svg","icons/efg.svg","icons/dip.svg","icons/jcoup.svg","icons/euler.svg","icons/MVIcon.js","core/MagresViewHeader.js","core/MagresViewScreenshot.js","core/sidebars/MagresViewSidebar.js","controls/MVFile.js","controls/MVBox.js","controls/MVCheckBox.js","controls/MVListSelect.js","core/sidebars/MVSidebarLoad.js","controls/MVButton.js","controls/MVRadioButton.js","controls/MVText.js","core/sidebars/MVSidebarSelect.js","controls/MVRange.js","controls/MVModal.js","core/sidebars/MVSidebarMS.js","core/sidebars/MVSidebarEFG.js","core/sidebars/MVSidebarDip.js","core/sidebars/MVSidebarJCoup.js","controls/MVSwitch.js","core/sidebars/MVSidebarEuler.js","core/sidebars/MVSidebarFiles.js","core/MagresViewApp.js","reportWebVitals.js","index.js"],"names":["chainClasses","_","join","flatten","arguments","useId","prefix","useState","uniqueId","id","CallbackMerger","n","callback","this","_callback","_n","_arg","arg","Error","merge","ClickHandler","app","onAtomClick","leftClick","bind","CrystVis","LEFT_CLICK","leftClickCtrl","CTRL_BUTTON","leftClickShift","SHIFT_BUTTON","rightClick","RIGHT_CLICK","_callbacks","name","code","cback","atom","event","cbacks","tableRow","values","width","precision","reduce","s","v","Number","isFinite","isInteger","toFixed","toString","ns","length","repeat","saveContents","data","filename","download","document","createElement","setAttribute","click","regularExpressions","Map","float","RegExp","int","alpha","alphanumeric","dipolarCoupling","a1","a2","g1","isotopeData","gamma","g2","r1","xyz","r","map","x","i","R","Math","sqrt","rnorm","PI","pow","jCoupling","T","getArrayValue","index","e","iscAtomicToHz","isotropy","rotationBetween","axes1","axes2","mjs","eulerFromRotation","a","convention","cosb","min","max","c","b","acos","abs","atan2","eulerBetweenTensors","T1","T2","ax1","haeberlen_eigenvectors","ax2","makeSelector","extras","selector","state","ans","key","startsWith","indexOf","addPrefix","p","getSel","sel","selected","displayed","getNMRData","view","datatype","tenstype","reftable","units","tens_units","ms","efg","tensors","anisotropy","asymmetry","span","skew","el","atoms","element","haeberlen_eigenvalues","iD","efgAtomicToHz","Q","BaseInterface","dispatcher","_state","_dispatcher","action","msColor","efgColor","makeEllipsoidListener","color","pre_view","pre_on","pre_scale","app_viewer","current_view","next_view","on","scale","removeEllipsoids","avg","t","sum","eigenvalues","addEllipsoids","scalingFactor","opacity","msEllipsoidListener","efgEllipsoidListener","makeLabelListener","shiftfunc","pre_references","pre_type","label_texts","ref_table","mode","removeLabels","crystLabel","addLabels","shift","radius","height","selLabelListener","msLabelListener","efgLabelListener","makeCalculateLinksListener","pre_ca","pre_r","pre_homo","model","linkview","ghostreqs","sel_ghosts_requests","catom","hn","query","sphere","elements","find","makeDisplayLinksListener","pre_sph","current_link_names","forEach","removeGraphics","lname","label","linktype","J","getLinkLabel","addLink","dashed","onOverlay","push","addSphere","showAxes","showCircles","dipCalculateLinksListener","dipDisplayLinksListener","jcCalculateLinksListener","jcDisplayLinksListener","ctable","Events","Array","isArray","fromPairs","Object","defineProperty","get","eventPriority","Set","DISPLAY","SEL_LABELS","CELL","CSCALE","MS_ELLIPSOIDS","MS_LABELS","EFG_ELLIPSOIDS","EFG_LABELS","EUL_ANGLES","DIP_RENDER","JC_RENDER","VIEWS","DIP_LINKS","JC_LINKS","getPriorityOfEvent","has","listeners","toDisplay","app_model_queued","displayModel","app_default_displayed","sel_selected_view","displ","sel_displayed_view","all","hide","show","setProperty","console","log","box","visible","sel_show_cell","axes","cscale_view","current_greyed","cscale_displ","next_greyed","cstype","cscale_type","split","xor","cs","shades","colors","colormap","nshades","format","ColorScale","getColorScale","getColor","toHexString","a1A","eul_atom_A","a1B","eul_atom_B","a2A","eul_newatom_A","a2B","eul_newatom_B","tA","eul_tensor_A","tB","eul_tensor_B","conv","eul_convention","nmrA","nmrB","removeLabel","addLabel","hasArray","results","eul_results","makeMasterListener","store","getState","toUpdate","listen_update","maxPriority","P","filter","d","warn","nextToUpdate","dispatch","type","LC","SLC","CLC","initialSelState","sel_on","sel_mode","sel_sphere_r","sel_bond_n","sel_hlight","sel_sites_view","sel_sites_labels_type","SelInterface","highlightSelected","value","setSelection","selectionMode","eData","elementData","keys","isotopes","sort","A","iso","is_nmr_active","spin","is_Q_active","is_max_nmr","maxiso_NMR","is_max_Q","maxiso_Q","abundance","options","default_options","selectionSphereR","selectionBondN","selectionOn","selFunc","imgIndex","found","_queryElements","_querySphere","_queryMolecule","_queryBonded","concat","dd","intf","handler","app_click_handler","setCallback","and","or","useSelInterface","useSelector","shallowEqual","useDispatch","initialCScaleState","CScaleInterface","colorScaleType","makeCScaleSelector","initialMSState","ms_view","ms_ellipsoids_on","ms_ellipsoids_scale","ms_labels_type","ms_references","msSetReferences","refs","new_refs","msAction","update","MSInterface","pre","colorScalePrefix","uniq","symbols","function","useMSInterface","initialEFGState","efg_view","efg_ellipsoids_on","efg_ellipsoids_scale","efg_labels_type","efgAction","EFGInterface","useEFGInterface","initialDipState","dip_view","dip_link_names","dip_links_on","dip_central_atom","dip_radius","dip_sphere_show","dip_homonuclear","DipInterface","useDipInterface","initialJCoupState","jc_view","jc_link_names","jc_links_on","jc_central_atom","jc_radius","jc_sphere_show","jc_homonuclear","JCoupInterface","useJCoupInterface","RC","initialEulerState","tensorValues","conventionValues","makeCallback","ending","makeEulerAction","EulerInterface","_getAtomLabel","_setTensorType","rad","f","_getResult","report","tensorA","atomLabelA","tensorB","atomLabelB","toUpperCase","beta","alphaRad","betaRad","gammaRad","hasMSData","hasEFGData","targ","table","useEulerInterface","appDisplayModel","m","appDeleteModel","deleteModel","models","modelList","AppInterface","viewer","initialised","model_name","modelName","app_theme","app_sidebar","app_load_as_mol","app_use_nmr_isos","elem","vis","files","cbm","params","supercell","molecularCrystal","loadAsMol","useNMRActiveIsotopes","useNMRIsotopes","parseOne","onLoad","contents","extension","success","loadModels","to_display","display","call","reader","FileReader","pop","onload","target","result","readAsText","useAppInterface","FilesInterface","files_seltype","mname","hasISCData","_msMakeTable","_efgMakeTable","_dipMakeTable","_iscMakeTable","aniso","asymm","euler","isotope","Vzz","slice","j","D","useFilesInterface","initialState","magresStore","createStore","args","subscribe","MVCustomSelectOption","props","onClick","className","icon","children","MVCustomSelect","setShow","o","findIndex","onSelect","useEffect","disabled","style","onMouseLeave","title","cloneElement","_excluded","_extends","assign","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMs","_ref","svgRef","titleId","viewBox","xmlns","ref","transform","fill","strokeWidth","strokeLinecap","strokeLinejoin","paintOrder","_defs","ForwardRef","SvgEfg","fillOpacity","InkscapeStroke","SvgDip","SvgJcoup","SvgEuler","stroke","icons","MSIcon","EFGIcon","dip","DipIcon","jcoup","JcoupIcon","EulerIcon","MVIcon","Icon","ThemeSwitcher","appint","other","dark","light","theme","MagresViewHeader","src","logo","alt","sidebar","MagresViewScreenshot","replace","saveImage","getScreenshotData","MagresViewSidebar","MVFile","notext","accept","filetypes","onChange","multiple","MVBox","status_class","status","onClose","size","MVCheckBox","onCheck","checked","htmlFor","MVListSelectOption","MVListSelect","file_formats","MVSidebarLoad","load_message","load_message_status","list_selected","setState","load","msg","err","model_icon","currentModelName","delete","MVButton","MVRadioButton","uid","MVRadioGroup","buttons","labelStyle","MVText","submitted","setSubmitted","waitSubmit","onSubmit","exec","onKeyDown","MVIsotopeSelection","selint","sharedElement","elData","isoConf","selOptions","currentOption","setIsotope","MVSidebarSelect","setR","setN","selRef","useRef","current","showCrystLabels","showCell","MVRange","step","toNumber","parseFloat","round","in_val","text","setText","acceptValue","stateRef","onInput","modalReducer","is_drag","x0","y0","dx","dy","MVModal","useReducer","onAccept","onmousemove","clientX","clientY","onmouseup","modalStyle","hasOverlay","modal","draggable","resizable","onMouseDown","button","Provider","MVReferenceTable","msint","referenceTable","refTable","setRefTable","intRef","close","updateReferenceTable","MVSidebarMS","showRefTable","has_ms","hasData","hasEllipsoids","ellipsoidScale","labelsMode","colorScaleAvailable","MVSidebarEFG","efgint","has_efg","MVSidebarDip","dipint","isOn","unbind","showSphere","homonuclearOnly","MVSidebarJCoup","jcint","has_jc","MVSwitch","colorTrue","colorFalse","MVSidebarEuler","eulint","otherTensor","hasSel","atomA","atomB","txtReport","navigator","clipboard","writeText","txtSelfAngleTable","MVSidebarFiles","fileint","fileType","fn","generateFile","fileName","fileValid","MagresViewPage","hovered","setHovered","appRef","initialise","onDragEnter","preventDefault","stopPropagation","onDragLeave","onDragOver","onDrop","dataTransfer","clearData","MagresViewApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"srBAWA,SAASA,IACL,OAAOC,IAAEC,KAAKD,IAAEE,QAAQC,WAAY,KAUxC,SAASC,IAAqB,IAAfC,EAAc,uDAAP,MAClB,EAAaC,oBAAS,kBAAON,IAAEO,SAASF,MAAxC,mBAAOG,EAAP,KACA,OAAOA,E,oECdLC,E,WAEF,WAAYC,EAAGC,GAAW,oBACtBC,KAAKC,UAAYF,EACjBC,KAAKE,GAAKJ,EAEVE,KAAKG,KAAO,G,wCAGhB,SAAKC,GAED,GAAIJ,KAAKE,IAAM,EACX,MAAMG,MAAM,+CAGhBjB,IAAEkB,MAAMN,KAAKG,KAAMC,GACnBJ,KAAKE,IAAM,EACK,IAAZF,KAAKE,IACLF,KAAKC,UAAUD,KAAKG,U,KAgC1BI,E,WAEF,WAAYC,GAAM,IAAD,sBAEbA,EAAIC,YAAYT,KAAKU,UAAUC,KAAKX,MACpBY,IAASC,YACzBL,EAAIC,YAAYT,KAAKc,cAAcH,KAAKX,MACxBY,IAASC,WAAaD,IAASG,aAC/CP,EAAIC,YAAYT,KAAKgB,eAAeL,KAAKX,MACzBY,IAASC,WAAaD,IAASK,cAC/CT,EAAIC,YAAYT,KAAKkB,WAAWP,KAAKX,MACrBY,IAASO,aAEzBnB,KAAKoB,YAAL,mBACKR,IAASC,WAAa,IAD3B,cAEKD,IAASC,WAAaD,IAASG,YAAc,IAFlD,cAGKH,IAASC,WAAaD,IAASK,aAAe,IAHnD,cAIKL,IAASO,YAAc,IAJ5B,G,+CAQJ,SAAYE,EAAMC,GAAmB,IAAbC,EAAY,uDAAN,KAE1B,KAAMD,KAAQtB,KAAKoB,YACf,MAAMf,MAAM,iDAGXkB,EAIDvB,KAAKoB,WAAWE,GAAMD,GAAQE,SAHvBvB,KAAKoB,WAAWE,GAAMD,K,uBAQrC,SAAUG,EAAMC,GAEZ,IAAMC,EAAS1B,KAAKoB,WAAWR,IAASC,YAExC,IAAK,IAAIf,KAAK4B,EACVA,EAAO5B,GAAG0B,EAAMC,K,2BAKxB,SAAcD,EAAMC,GAEhB,IAAMC,EAAS1B,KAAKoB,WAAWR,IAASC,WAAWD,IAASG,aAE5D,IAAK,IAAIjB,KAAK4B,EACVA,EAAO5B,GAAG0B,EAAMC,K,4BAKxB,SAAeD,EAAMC,GAEjB,IAAMC,EAAS1B,KAAKoB,WAAWR,IAASC,WAAWD,IAASK,cAE5D,IAAK,IAAInB,KAAK4B,EACVA,EAAO5B,GAAG0B,EAAMC,K,wBAKxB,SAAWD,EAAMC,GAEb,IAAMC,EAAS1B,KAAKoB,WAAWR,IAASO,aAExC,IAAK,IAAIrB,KAAK4B,EACVA,EAAO5B,GAAG0B,EAAMC,O,KAsD5B,SAASE,EAASC,GAAgC,IAAxBC,EAAuB,uDAAjB,GAAIC,EAAa,uDAAH,EAC1C,OAAOF,EAAOG,QAAO,SAACC,EAAGC,GAEjBA,EADAC,OAAOC,SAASF,KAAOC,OAAOE,UAAUH,GACpCA,EAAEI,QAAQP,GAGVG,EAAEK,WAEV,IAAMC,EAAKV,EAAMI,EAAEO,OACnB,OAAOR,EAAI,IAAIS,OAAOF,EAAK,EAAGA,EAAK,GAAKN,IACzC,IAAM,KASb,SAASS,EAAaC,EAAMC,GAExB,IAAMC,EAAWC,SAASC,cAAc,KACxCF,EAASG,aAAa,WAAYJ,GAClCC,EAASG,aAAa,OAAQL,GAC9BE,EAASI,Q,YCvMEC,EAPYC,YAAI,CAC3BC,MAAO,IAAIC,OAAO,wBAClBC,IAAK,IAAID,OAAO,UAChBE,MAAO,IAAIF,OAAO,aAClBG,aAAc,IAAIH,OAAO,kBCO7B,SAASI,EAAgBC,EAAIC,GAEzB,IACMC,EAAKF,EAAGG,YAAYC,OAAS,EAC7BC,EAAKJ,EAAGE,YAAYC,OAAS,EAE7BE,EAAKN,EAAGO,IAERC,EADKP,EAAGM,IACDE,KAAI,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,EAAGK,MAC1BC,EAAIC,KAAKC,KAAKN,EAAEnC,QAAO,SAACC,EAAGoC,GAAJ,OAAUpC,EAAEoC,EAAEA,IAAG,IACxCK,EAAQP,EAAEC,KAAI,SAACC,GAAD,OAAOA,EAAEE,KAE7B,MAAO,EAVc,uBAUCV,EAAGG,GAAI,EAAEQ,KAAKG,GAAGH,KAAKG,GAAGH,KAAKI,IAAIL,EAAG,IAAKG,GAYpE,SAASG,EAAUlB,EAAIC,GAEnB,IAAIkB,EAEJ,IACIA,EAAInB,EAAGoB,cAAc,OAAOnB,EAAGoB,OAEnC,MAAOC,GAEH,OAAO,KAGX,IAAKH,EACD,OAAO,KAGX,IAAIjB,EAAKF,EAAGG,YAAYC,MACpBC,EAAKJ,EAAGE,YAAYC,MAGxB,OAFAe,EAAIA,EAAEI,cAAcrB,EAAIG,IAEfmB,S,aC/Cb,SAASC,EAAgBC,EAAOC,GAC5B,OAAOC,IAAaD,EAAOC,IAAcF,IAW7C,SAASG,EAAkBjB,GAAsB,IAgCzCkB,EAhCsBC,EAAkB,uDAAP,MA4BjCC,EAAOpB,EAAE,GAAG,GAEhBoB,EAAOnB,KAAKoB,IAAIpB,KAAKqB,IAAIF,GAAO,GAAI,GAGpC,IACIG,EADAC,EAAIvB,KAAKwB,KAAKL,GAGlB,GAAuB,IAAnBnB,KAAKyB,IAAIN,GAETG,EAAI,EACJL,EAAIjB,KAAK0B,MAAM3B,EAAE,GAAG,GAAIA,EAAE,GAAG,SAI7B,OAAQmB,GACJ,IAAK,MACDD,EAAIjB,KAAK0B,MAAM3B,EAAE,GAAG,GAAKA,EAAE,GAAG,IAC9BuB,EAAItB,KAAK0B,MAAM3B,EAAE,GAAG,IAAKA,EAAE,GAAG,IAC9B,MACJ,IAAK,MACDkB,EAAIjB,KAAK0B,MAAM3B,EAAE,GAAG,IAAKA,EAAE,GAAG,IAC9BuB,EAAItB,KAAK0B,MAAM3B,EAAE,GAAG,GAAKA,EAAE,GAAG,IAC9B,MACJ,QACI,MAAMjE,MAAM,wCAIxB,MAAO,CAACmF,EAAGM,EAAGD,GAsClB,SAASK,EAAoBC,EAAIC,GAAuB,IAAnBX,EAAkB,uDAAP,MACtCY,EAAMF,EAAGG,uBACTC,EAAMH,EAAGE,uBACf,OAAOf,EAAkBJ,EAAgBkB,EAAKE,GAAMd,G,kDCtHxD,SAASe,EAAa/G,GAAoB,IAAZgH,EAAW,uDAAJ,GAEjC,SAASC,EAASC,GACd,IAAIC,EAAM,GAEV,IAAK,IAAIC,KAAOF,GACPvH,IAAE0H,WAAWD,EAAKpH,KAAoC,IAAzBgH,EAAOM,QAAQF,MAEjDD,EAAIC,GAAOF,EAAME,IAGrB,OAAOD,EAGX,OAAOF,EAGX,IAAMM,EAAY,SAACC,EAAGnH,GAAJ,OAAUmH,EAAI,IAAMnH,GAEtC,SAASoH,EAAO1G,GACZ,IAAI2G,EAAM3G,EAAI4G,SACd,OAAID,EACOA,EAAI3E,OAAS,EAAG2E,EAAM3G,EAAI6G,UAG1B,KAIf,SAASC,EAAWC,EAAMC,GAAyC,IAA/BC,EAA8B,uDAArB,KAAMC,EAAe,uDAAN,KAEpDC,EAAQ,GACRC,EAAa,CACbC,GAAI,MACJC,IAAK,MACPL,GACE7F,EAAS,KACTmG,EAAUR,EAAKpD,KAAI,SAACqB,GAAD,OAAQA,EAAEV,cAAc2C,MAE/C,OAAOD,GACH,IAAK,MACD5F,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAEK,YAC9ByC,EAAQC,EACR,MACJ,IAAK,QACDhG,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAEmD,cAC9BL,EAAQC,EACR,MACJ,IAAK,QACDhG,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAEoD,aAC9B,MACJ,IAAK,OACDrG,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAEqD,QAC9B,MACJ,IAAK,OACDtG,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAEsD,QAC9B,MACJ,IAAK,KACD,IAAKT,EACD,MAAMrH,MAAM,6DAEhBuB,EAASmG,EAAQ5D,KAAI,SAACU,EAAGR,GACrB,IAAI+D,EAAKb,EAAKc,MAAMhE,GAAGiE,QAEvB,OADUZ,EAASU,IAAO,GACfvD,EAAEK,YAEjByC,EAAQC,EACR,MACJ,IAAK,MACDhG,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAE0D,sBAAsB,MACpD,MACJ,IAAK,MACD3G,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAE0D,sBAAsB,MACpD,MACJ,IAAK,MACD3G,EAASmG,EAAQ5D,KAAI,SAACU,GAAD,OAAOA,EAAE0D,sBAAsB,MACpD,MACJ,IAAK,IACD3G,EAASmG,EAAQ5D,KAAI,SAACU,EAAGR,GACrB,IAAImE,EAAKjB,EAAKc,MAAMhE,GAAGR,YACvB,OAAOgB,EAAE4D,cAAcD,EAAGE,GAAGH,sBAAsB,GAAG,OAE1DZ,EAAQ,MAMhB,MAAO,CAACA,EAAO/F,G,IAqBb+G,E,WAEF,WAAYhC,EAAOiC,GAAa,oBAC5B5I,KAAK6I,OAASlC,EACd3G,KAAK8I,YAAcF,E,uCAGvB,WACI,OAAO5I,KAAK6I,S,sBAGhB,SAASE,GACL/I,KAAK8I,YAAYC,O,KCrHzB,IACMC,EAAU,SACVC,EAAW,MCDjB,SAASC,EAAsB7H,EAAM8H,GAIjC,IAAMC,EAAWpC,EAAU3F,EAAM,QAC3BgI,EAASrC,EAAU3F,EAAM,iBACzBiI,EAAYtC,EAAU3F,EAAM,oBA0ClC,OAxCA,SAAkBsF,GAAQ,IAAD,EAEjBnG,EAAMmG,EAAM4C,WACZC,EAAe7C,EAAMyC,GAIrBK,EAAYvC,EAAO1G,GAGjBkJ,EAAK/C,EAAM0C,GACbM,EAAQhD,EAAM2C,GASlB,IANIE,GAAiBA,IAAiBC,GAAcC,GAEhDF,EAAaI,iBAAiBvI,GAI9BqI,EAAI,CAEJ,IAAM/G,EAAO8G,EAAUtF,KAAI,SAACqB,GAAD,OAAOA,EAAEV,cAAczD,MAElD,GAAc,IAAVsI,EAAa,CAEb,IAAIE,EAAMlH,EAAKwB,KAAI,SAAC2F,GAAD,OAAO1K,IAAE2K,IAAID,EAAEE,YAAY7F,IAAII,KAAKyB,MAAM,KAE7D2D,EAAQ,GADRE,EAAMzK,IAAE2K,IAAIF,GAAKlH,EAAKH,QAI1BiH,EAAUQ,cAActH,EAAMtB,EAAM,CAAC6I,cAAeP,EAAOR,MAAOA,EAAOgB,QAAS,OAGtF,OAAO,EAAP,iBACKf,EAAWK,GADhB,cAEKH,EAAYK,GAFjB,GAUR,IAAMS,EAAsBlB,EAAsB,KAAMF,GAClDqB,EAAuBnB,EAAsB,MAAOD,GCtD1D,SAASqB,EAAkBjJ,EAAM8H,EAAOoB,GAIpC,IAAMnB,EAAWpC,EAAU3F,EAAM,QAC3BmJ,EAAiBxD,EAAU3F,EAAM,cACjCoJ,EAAWzD,EAAU3F,EAAM,eA4CjC,OA1CA,SAAkBsF,GAEd,IAgBI+D,EAhBAlK,EAAMmG,EAAM4C,WACZC,EAAe7C,EAAMyC,GACrBuB,EAAYhE,EAAM6D,GAIlBf,EAAYvC,EAAO1G,GAGjBoK,EAAOjE,EAAM8D,GAQnB,IANIjB,GAAiBA,IAAiBC,GAAsB,SAATmB,GAE/CpB,EAAaqB,aAAaxJ,GAIjB,SAATuJ,EAAiB,CAEjB,GAAa,cAATvJ,EAAsB,CACtB,MAAsBiG,EAAWmC,EAAWmB,EAAMvJ,EAAMsJ,GAAxD,mBAAKhD,EAAL,KACA+C,EADA,KACqBvG,KAAI,SAAClC,GAAD,OAAOA,EAAEI,QAAQ,GAAK,IAAMsF,UAIrD+C,EAAcjB,EAAUtF,KAAI,SAACqB,GAAD,OAAOA,EAAEsF,cAGzCrB,EAAUsB,UAAUL,EAAarJ,GAAM,SAACmE,EAAGnB,GAAJ,MAAW,CAC9C8E,MAAOA,EACP6B,MAAOT,EAAU/E,EAAEyF,QACnBC,OAAQ,QAIhB,OAAO,eACF9B,EAAWK,IAQxB,IAAM0B,EAAmBb,EAAkB,YFtD1B,UEsDiD,SAACpG,GAAD,MAAQ,CAACA,EAAGA,EAAG,MAC3EkH,EAAkBd,EAAkB,KAAMtB,GAAS,SAAC9E,GAAD,MAAQ,CAAC,MAAMA,EAAG,EAAK,MAC1EmH,EAAmBf,EAAkB,MAAOrB,GAAU,SAAC/E,GAAD,MAAQ,CAACA,GAAIA,EAAG,MCzD5E,SAASoH,EAA2BjK,GAOhC,IAAMgI,EAASrC,EAAU3F,EAAM,YACzBkK,EAASvE,EAAU3F,EAAM,gBACzBmK,EAAQxE,EAAU3F,EAAM,UACxBoK,EAAWzE,EAAU3F,EAAM,eAE3B+H,EAAWpC,EAAU3F,EAAM,QAoDjC,OAlDA,SAAkBsF,GAAQ,IAAD,EAGjB+E,EADM/E,EAAM4C,WACAmC,MAEhB,IAAKA,EAED,MAAO,GAGX,IAUIC,EAVAC,EAAS,eACNjF,EAAMkF,qBAIPnC,EAAK/C,EAAM0C,GACXyC,EAAQnF,EAAM4E,GACdrH,EAAIyC,EAAM6E,GACVO,EAAKpF,EAAM8E,GAIjB,GAAI/B,GAAMoC,EAAO,CAEb,IAAIE,EAAQ,CAAEC,OAAQ,CAACH,EAAO5H,IAC1B6H,IACAC,EAAQ,CACJ,KAAQ,CACJA,EACA,CAAEE,SAAU,CAACJ,EAAMxD,aAM/BqD,EAAWD,EAAMS,KAAKH,GACtBJ,EAAUvK,GAAQsK,OAGlBA,EAAWD,EAAMnE,KAAK,WAEfqE,EAAUvK,GAGrB,OAAO,EAAP,iBACK+H,EAAWuC,GADhB,oCAEyBC,GAFzB,GAUR,SAASQ,EAAyB/K,EAAM8H,GAKpC,IAAME,EAASrC,EAAU3F,EAAM,YACzBkK,EAASvE,EAAU3F,EAAM,gBACzBmK,EAAQxE,EAAU3F,EAAM,UACxBgL,EAAUrF,EAAU3F,EAAM,eAE1B+H,EAAWpC,EAAU3F,EAAM,QAI7BiL,EAAqB,GA+DzB,OA7DA,SAAkB3F,GAEd,IAAInG,EAAMmG,EAAM4C,WACZoC,EAAWhF,EAAMyC,GAEf0C,EAAQnF,EAAM4E,GACdN,EAAStE,EAAM6E,GACf9B,EAAK/C,EAAM0C,GACX4C,EAAStF,EAAM0F,GAEfX,EAAQlL,EAAIkL,MAGlB,OAAKA,GAMLY,EAAmBC,SAAQ,SAAClL,GAAWqK,EAAMc,eAAenL,MAG5DiL,EAAqB,GACjB5C,GAAMoC,GAASH,GACfA,EAAStD,MAAMkE,SAAQ,SAAC5I,EAAIU,GAExB,GAAIV,IAAOmI,EAAX,CAGA,IAAMW,EAAQpL,EAAO,SAAWgD,EAC1BqI,EJ1BtB,SAAsBhJ,EAAIC,EAAIgJ,GAE1B,OAAQA,GACJ,IAAK,MAED,OADUlJ,EAAgBC,EAAIC,GAAI,GACxB,KAAKtB,QAAQ,GAAK,OAChC,IAAK,KACD,IAAMuK,EAAIhI,EAAUlB,EAAIC,GACxB,OAAU,OAANiJ,EACO,GAEJA,EAAEvK,QAAQ,GAAK,MAC1B,QACI,MAAO,IIaWwK,CAAaf,EAAOnI,EAAItC,GAExB,KAAVqL,IAKJhB,EAAMoB,QAAQhB,EAAOnI,EAAI8I,EAAOC,EAAO,CACnCvD,MAAOA,EACP4D,QAAQ,EACRC,WAAW,IAEfV,EAAmBW,KAAKR,QAK5B/C,GAAMoC,GAASG,EACfP,EAAMwB,UAAUpB,EAAM7H,IAAKgH,EAAQ5J,EAAO,UAAW,CACjD8I,QAAS,IACTgD,UAAU,EACVC,aAAa,IAIjB1B,EAAMc,eAAenL,EAAO,WAGzB,IA3CI,IAkDnB,IAAMgM,GAA4B/B,EAA2B,OACvDgC,GAA0BlB,EAAyB,MHlJxC,OGoJXmB,GAA2BjC,EAA2B,MACtDkC,GAAyBpB,EAAyB,KHpJxC,UIJVqB,GAAS,CACX,GAAMzE,EACN,IAAOC,GCNX,IAAMyE,GAAS,IVmCX,aAAwB,IAAD,OAAX9L,EAAW,uDAAJ,GAAI,oBAEf+L,MAAMC,QAAQhM,KACdA,EAASxC,IAAEyO,UAAUjM,EAAOuC,KAAI,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAGC,QAH/B,eAMVwC,GACL,IAAI5E,EAAIL,EAAOiF,GAEfiH,OAAOC,eAAe,EAAMlH,EAAK,CAC7BmH,IAAK,kBAAM/L,MAJnB,IAAK,IAAI4E,KAAOjF,EAAS,EAAhBiF,GUzCF,CAAS,CACpB,UACA,QACA,aACA,OACA,SACA,gBACA,YACA,iBACA,aACA,aACA,YACA,aACA,WACA,cAMEoH,GAAgB,CAClB,EAAG,IAAIC,IAAI,CAACR,GAAOS,UACnB,EAAG,IAAID,IAAI,CAACR,GAAOU,WAAYV,GAAOW,KAC1BX,GAAOY,OACPZ,GAAOa,cAAeb,GAAOc,UAC7Bd,GAAOe,eAAgBf,GAAOgB,WAC9BhB,GAAOiB,WACPjB,GAAOkB,WAAYlB,GAAOmB,YACtC,EAAG,IAAIX,IAAI,CAACR,GAAOoB,QACnB,EAAG,IAAIZ,IAAI,CAACR,GAAOqB,UAAWrB,GAAOsB,YAGzC,SAASC,GAAmBxN,GAExB,IAAK,IAAIwF,KAAKgH,GAAe,CAEzB,GADWA,GAAchH,GAChBiI,IAAIzN,GACT,OAAOwF,EAIf,OAAO,EAQIyG,I,GAAAA,MCdTyB,IAAS,qBACVzB,GAAOS,SCvCZ,SAAyBxH,GAErB,IAAMnG,EAAMmG,EAAM4C,WACZ6F,EAAYzI,EAAM0I,iBAEpB1M,EAAO,GAUX,OARInC,GAAO4O,IACP5O,EAAI8O,aAAaF,GACjBzM,EAAO,CACH4M,sBAAuB/O,EAAI6G,UAC3BgI,iBAAkB,OAInB1M,KDuBI,eAEV+K,GAAOoB,OExCZ,SAAuBnI,GAEnB,IAAInG,EAAMmG,EAAM4C,WACZmC,EAAQlL,EAAIkL,MAEhB,IAAKA,EACD,MAAO,GAIX,IAAIvE,EAAMR,EAAM6I,kBACZC,EAAQ9I,EAAM+I,mBAAoB/I,EAAM+I,mBAAqB/I,EAAM4I,sBAqBvE,OAlBIpI,GAAOA,IAAQ3G,EAAI4G,WACnB5G,EAAI4G,SAAWD,GAEfuE,GACAA,EAAMiE,IAAIC,OAGd9B,OAAOlM,OAAO+E,EAAMkF,qBAAqBU,SAAQ,SAACvK,EAAGqC,GAEjDrC,EAAE6N,OACF7N,EAAE8N,YAAY,UAAW,OAI7BtP,EAAI6G,UAAYoI,EAChBA,EAAMK,YAAY,UAAW,GAGrB,MFMG,eAGVpC,GAAOU,WAAoBjD,GAHjB,eAIVuC,GAAOW,MGtCZ,SAAsB1H,GAClB,IAAMnG,EAAMmG,EAAM4C,WAElB,GAAI/I,EAAK,CACL,IAAMkL,EAAQlL,EAAIkL,MACdA,IACAqE,QAAQC,IAAItE,GACZA,EAAMuE,IAAIC,QAAUvJ,EAAMwJ,cAC1BzE,EAAM0E,KAAKF,QAAUvJ,EAAMwJ,eAInC,MAAO,MHsBI,eAKVzC,GAAOY,QInCZ,SAA4B3H,GAExB,IAAInG,EAAMmG,EAAM4C,WACZC,EAAe7C,EAAM0J,YACrBC,EAAiB3J,EAAM4J,aACvBlJ,EAAY7G,EAAI6G,UAEhBoC,EAAYvC,EAAO1G,GACnBgQ,EAAc,KAEZC,EAAS9J,EAAM+J,YAOrB,GAJIJ,GACAA,EAAeR,YAAY,QAAS,MAGzB,SAAXW,EAAmB,CAGnB,MAAuBA,EAAOE,MAAM,IAAK,GAAzC,mBAAOlR,EAAP,KAAemL,EAAf,KACMD,EAAYhE,EAAMlH,EAAS,eAEjC+Q,EAAcnJ,EAAUuJ,IAAInH,GAE5B,IACM7H,EADU0F,EAAWmC,EAAWmB,EAAMnL,EAAQkL,GAC7B,GAInBkG,EfqGZ,WAA8D,IAAvClL,EAAsC,uDAAlC,EAAGC,EAA+B,uDAA3B,EAAG+D,EAAwB,uDAAlB,MAAOmH,EAAW,uDAAJ,GAEjDC,EAASC,IAAS,CAClBA,SAAUrH,EACVsH,QAASH,EACTI,OAAQ,MACR3N,MAAO,IAQX,OAJAqC,EAAOA,IAAQD,EAAMC,EAAI,KAAOA,EAEnB,IAAIuL,IAAWxL,EAAKC,EAAKmL,EAAQ,GejHjCK,CAFEhS,IAAEuG,IAAI/D,GACNxC,IAAEwG,IAAIhE,GACkB,YAC/BmP,EAASnP,EAAOuC,KAAI,SAAClC,GAAD,OAAO4O,EAAGQ,SAASpP,GAAGqP,iBAE9C7H,EAAUqG,YAAY,QAASiB,GAC/BP,EAAYV,YAAY,QAAS,cAG7BtG,GACAA,EAAasG,YAAY,QAAS,MAG1C,MAAO,CACHO,YAAa5G,EACb8G,aAAcC,MJbP,eAMV9C,GAAOa,cAAoBnE,GANjB,eAOVsD,GAAOc,UAAoBpD,GAPjB,eAQVsC,GAAOe,eAAoBpE,GARjB,eASVqD,GAAOgB,WAAoBrD,GATjB,eAUVqC,GAAOiB,YFpCZ,SAA4BhI,GAExB,IAAM4K,EAAM5K,EAAM6K,WACZC,EAAM9K,EAAM+K,WAEZC,EAAMhL,EAAMiL,cACZC,EAAMlL,EAAMmL,cAEZC,EAAKpL,EAAMqL,aACXC,EAAKtL,EAAMuL,aAEXC,EAAOxL,EAAMyL,eAEfC,EAAO,KACPC,EAAO,KAMX,GAJIf,GACAA,EAAIgB,YAAY,QAGhBZ,EAAK,CACL,IAAIzN,EAAIyN,EAAI1G,OACZ0G,EAAIa,SAAS,IAAK,OAAQ,CACtBxH,MAAO,CAAC,EAAG,IAAK9G,EAAG,GACnBiF,MAAOsE,GAAOsE,GACd/E,WAAW,EACX9B,OAAQ,MAIRyG,EAAIjG,MAAM+G,SAASV,KACnBM,EAAOV,EAAI7M,cAAciN,IAQjC,GAJIN,GACAA,EAAIc,YAAY,QAGhBV,EAAK,CACL,IAAI3N,EAAI2N,EAAI5G,OACZ4G,EAAIW,SAAS,IAAK,OAAQ,CACtBxH,MAAO,CAAC,GAAI,GAAI9G,EAAG,GACnBiF,MAAOsE,GAAOwE,GACdjF,WAAW,IAIX6E,EAAInG,MAAM+G,SAASR,KACnBK,EAAOT,EAAI/M,cAAcmN,IAIjC,IAAIS,EAAU,KAOd,OALIL,GAAQC,IAERI,EAAUxM,EAAoBmM,EAAMC,EAAMH,IAGvC,CACHX,WAAYG,EACZD,WAAYG,EACZc,YAAaD,MErCN,eAWVhF,GAAOqB,UAAoB1B,IAXjB,eAYVK,GAAOkB,WAAoBtB,IAZjB,eAaVI,GAAOsB,SAAoBzB,IAbjB,eAcVG,GAAOmB,UAAoBrB,IAdjB,IAgFAoF,OA/Df,SAA4BC,GA2DxB,OAzDA,WAEI,IAAIlM,EAAQkM,EAAMC,WACdC,EAAWpM,EAAMqM,cAErB,GAAID,GAAYA,EAASvQ,OAAS,EAAG,CAEjC,IAAIG,EAAO,GAGPsQ,EAAcF,EAAShR,QAAO,SAACmR,EAAGlO,GAClC,IAAIiC,EAAIgI,GAAmBjK,GAC3B,OAAOiC,EAAIiM,EAAGjM,EAAIiM,KAClB,GAEJH,EAAWA,EAASI,QAAO,SAACnO,GACxB,OAAOiK,GAAmBjK,KAAOiO,MAGrCF,EAAW,IAAI7E,IAAI6E,IAEVxG,SAAQ,SAACE,GAEd,GAAMA,KAAS0C,GAGf,IACI,IAAIiE,EAAIjE,GAAU1C,GAAO9F,GAEzBhE,EAAI,2BACGA,GACAyQ,GAGX,MAAOpO,GAIH+K,QAAQsD,KAAKrO,OAMrB,IAAIsO,EAAe,GACfL,EAAc,IACdK,EAAY,YDvDjBrF,GCuD8CgF,EAAY,KAEzDtQ,EAAKqQ,cAAgBM,EAErBT,EAAMU,SAAS,CACXC,KAAM,SACN7Q,KAAMA,OKxFhB8Q,GAAK7S,IAASC,WACd6S,GAAM9S,IAASC,WAAaD,IAASK,aACrC0S,GAAM/S,IAASC,WAAaD,IAASG,YAErC6S,GAAkB,CACpBpE,kBAAmB,KACnBE,mBAAoB,KACpB7D,oBAAqB,GACrBgI,QAAQ,EACRC,SAAU,OACVC,aAAc,EACdC,WAAY,EACZC,YAAY,EACZC,eAAgB,KAChBC,sBAAuB,OACvBhE,eAAe,GAGbiE,G,uJAEF,WACI,OAAOpU,KAAK2G,MAAM4C,a,oBAGtB,WACI,OAAOvJ,KAAK2G,MAAM6I,mB,IAGtB,SAAavN,GACT,IAAKA,EAAG,CACJ,IAAIyJ,EAAQ1L,KAAK2G,MAAM4C,WAAWmC,MAC9BA,IACAzJ,EAAIyJ,EAAMnE,KAAK,KAIvBvH,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACF6M,kBAAmBvN,EACnB+Q,cAAe,CAACtF,GAAOoB,Y,qBAKnC,WACI,OAAO9O,KAAK2G,MAAM+I,oBAAsB1P,KAAK2G,MAAM4I,uB,IAGvD,SAActN,IACLA,IACDA,EAAIjC,KAAK2G,MAAM4I,yBAMnBvP,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACF+M,mBAAoBzN,EACpB+Q,cAAe,CAACtF,GAAOoB,Y,4BAKnC,WACI,OAAO9O,KAAK2G,MAAM4I,wB,6BAGtB,WACI,OAAOvP,KAAK2G,MAAMsN,Y,IAGtB,SAAsBhS,GAClB,IAAIzB,EAAMR,KAAK2G,MAAM4C,WAEhB/I,IAGLA,EAAI6T,kBAAoBpS,EACxBjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,aACLyN,MAAOrS,O,2BAIf,WACI,MAA4C,WAArCjC,KAAK2G,MAAMwN,uB,IAGtB,SAAoBlS,GAChBA,EAAIA,EAAG,SAAW,OAElBjC,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CAAEwR,sBAAuBlS,EAAG+Q,cAAe,CAACtF,GAAOU,iB,oBAIjE,WACI,OAAOpO,KAAK2G,MAAMwJ,e,IAGtB,SAAalO,GACTjC,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACFwN,cAAelO,EACf+Q,cAAe,CAACtF,GAAOW,W,uBAKnC,WACI,OAAOrO,KAAK2G,MAAMkN,Q,IAGtB,SAAgB5R,GACZjC,KAAKuU,aAAavU,KAAKwU,cAAe,CAAC9K,GAAIzH,M,yBAG/C,WACI,OAAOjC,KAAK2G,MAAMmN,U,IAGtB,SAAkB7R,GACdjC,KAAKuU,aAAatS,K,4BAGtB,WACI,OAAOjC,KAAK2G,MAAMoN,c,IAGtB,SAAqB9R,GACjBjC,KAAKuU,aAAavU,KAAKwU,cAAe,CAACtQ,EAAGjC,M,0BAG9C,WACI,OAAOjC,KAAK2G,MAAMqN,Y,IAGtB,SAAmB/R,GACfjC,KAAKuU,aAAavU,KAAKwU,cAAe,CAAC1U,EAAGmC,M,0BAG9C,WAEI,IAAIkF,EAAMnH,KAAKoH,SACf,GAAY,OAARD,EACA,OAAO,KAGX,IAAI+E,EAAW/E,EAAIhD,KAAI,SAACqB,EAAGnB,GAAJ,OAAUmB,EAAE8C,WAE/BF,EAAK8D,EAAS,GAClB,IAAKA,EAASnK,QAAO,SAACC,EAAGoC,GAAJ,OAAWpC,GAAKoC,IAAMgE,KAAK,GAC5C,OAAO,KAIX,IAAIqM,EAAQtN,EAAIkB,MAAM,GAAGqM,YAezB,OAbY5G,OAAO6G,KAAKF,EAAMG,UAAUC,OACtB1Q,KAAI,SAAC2Q,EAAGzQ,GACtB,IAAI0Q,EAAMN,EAAMG,SAASE,GACzB,MAAO,CACHA,EAAGA,EACHE,cAA4B,IAAbD,EAAIE,KACnBC,YAAuB,IAAVH,EAAIrM,EACjByM,WAAYL,IAAML,EAAMW,WACxBC,SAAUP,IAAML,EAAMa,SACtBC,UAAWR,EAAIQ,gB,wBAO3B,SAAWT,GACP,IAAI3N,EAAMnH,KAAKoH,SACf,GAAY,OAARD,EACA,OAAO,KAGXA,EAAI2I,YAAY,UAAWgF,GAG3B9U,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACFqQ,cAAe,CAACtF,GAAOgB,WAAYhB,GAAOY,OAC1BZ,GAAOkB,WAAYlB,GAAOmB,gB,0BAKtD,SAAajE,GAAmB,IAAb4K,EAAY,uDAAJ,GAGnBhV,EAAMR,KAAK2G,MAAM4C,WACrB,GAAK/I,EAAL,CAGA,IAAIiV,EAAkB,CAClBvR,EAAGlE,KAAK0V,iBACR5V,EAAGE,KAAK2V,eACRjM,GAAI1J,KAAK4V,aAGbJ,EAAO,2BACAC,GACAD,GAIP,IAAIK,EAAU,KAEd,GAAIL,EAAQ9L,GACR,OAAOkB,GACH,IAAK,OACDiL,EAAW,SAACrQ,EAAGR,GACX,OAAOxE,EAAIkL,MAAMnE,KAAK,CAAC/B,EAAEsQ,YAE7B,MACJ,IAAK,UAEDD,EAAW,SAACrQ,EAAGR,GACX,IAAI+Q,EAAQvV,EAAIkL,MAAMsK,eAAexQ,EAAE8C,SACvC,OAAO9H,EAAIkL,MAAMnE,KAAKwO,IAE1B,MACJ,IAAK,SACD,IAAM7R,EAAIsR,EAAQtR,EAClB2R,EAAW,SAACrQ,EAAGR,GACX,IAAI+Q,EAAQvV,EAAIkL,MAAMuK,aAAazQ,EAAGtB,GACtC,OAAO1D,EAAIkL,MAAMnE,KAAKwO,IAE1B,MACJ,IAAK,WACDF,EAAW,SAACrQ,EAAGR,GACX,IAAI+Q,EAAQvV,EAAIkL,MAAMwK,eAAe1Q,GACrC,OAAOhF,EAAIkL,MAAMnE,KAAKwO,IAE1B,MACJ,IAAK,QACD,IAAMjW,EAAI0V,EAAQ1V,EAClB+V,EAAW,SAACrQ,EAAGR,GACX,IAAI+Q,EAAQvV,EAAIkL,MAAMyK,aAAa3Q,EAAG1F,GAAG,GAEzC,OADAiW,EAAQA,EAAMK,OAAO,CAAC5Q,EAAEsQ,WACjBtV,EAAIkL,MAAMnE,KAAKwO,IAYtC,IAAMM,EAAKrW,KAAK2G,MAAM4I,sBAChB+G,EAAOtW,KACPuW,EAAUvW,KAAK2G,MAAM6P,kBAEvBX,GACAU,EAAQE,YAAY,MAAOhD,IAAI,SAACjO,EAAGR,GAAQsR,EAAKlP,SAAWiP,EAAGK,IAAIb,EAAQrQ,EAAGR,OAC7EuR,EAAQE,YAAY,MAAO/C,IAAK,SAAClO,EAAGR,GAAQsR,EAAKlP,SAAWiP,EAAGK,IAAIlW,EAAI4G,SAASuP,GAAGd,EAAQrQ,EAAGR,QAC9FuR,EAAQE,YAAY,MAAO9C,IAAK,SAACnO,EAAGR,GAAQsR,EAAKlP,SAAWiP,EAAGK,IAAIlW,EAAI4G,SAASwJ,IAAIiF,EAAQrQ,EAAGR,UAI/FuR,EAAQE,YAAY,MAAOhD,IAC3B8C,EAAQE,YAAY,MAAO/C,IAC3B6C,EAAQE,YAAY,MAAO9C,KAG/B3T,KAAKuT,SAAS,CAACC,KAAM,SAAU7Q,KAAM,CACjCmR,SAAUlJ,EACVmJ,aAAcyB,EAAQtR,EACtB8P,WAAYwB,EAAQ1V,EACpB+T,OAAQ2B,EAAQ9L,W,GAzQDf,GA0RZiO,OAVf,WACI,IAAIjQ,EAAQkQ,YAAYrQ,EAAa,MAAO,CAAC,aAAc,oBAAqB,0BAA2BsQ,KACvGlO,EAAamO,cAIjB,OAFW,IAAI3C,GAAazN,EAAOiC,IC1SjCoO,GAAqB,CACvB3G,YAAa,KACbE,aAAc,KACdG,YAAa,QAOXuG,G,kKAEF,WACI,OAAOjX,KAAK2G,MAAM+J,a,IAGtB,SAAmBzO,GACfjC,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACF+N,YAAazO,EACb+Q,cAAe,CAACtF,GAAOY,a,4BAKnC,WACI,OAAOtO,KAAKkX,eAAevG,MAAM,IAAK,GAAG,O,GAjBnBhI,GAsB9B,SAASwO,GAAmB1X,GAAoB,IAAZgH,EAAW,uDAAJ,GAGvC,OAAOD,EAAa/G,EAFpBgH,EAASA,EAAO2P,OAAOtI,OAAO6G,KAAKqC,MAKxBC,UCnCTG,GAAiB,CACnBC,QAAS,KACTC,kBAAkB,EAClBC,oBAAqB,IACrBC,eAAgB,OAChBC,cAAe,IAInB,SAASC,GAAgB/Q,GAAmB,IAAZgR,EAAW,uDAAN,KAE7BC,EAAW,GAaf,OATID,IACAC,EAAQ,2BACDjR,EAAM8Q,eACNE,IAMJ,CACHF,cAAeG,EACf5E,cAAe,CAACtF,GAAOc,UAAWd,GAAOY,SAKjD,IAAMuJ,GAAW,SAASlV,GAAkB,IAAZmV,EAAW,uDAAJ,GACnC,MAAO,CACHtE,KAAM,SACN7Q,KAAK,2BACEA,GADH,IAEAqQ,cAAe8E,MAKrBC,G,2JAEF,WACI,IAAIvX,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,Q,yBAGpD,WACI,OAAOzS,KAAK2G,MAAM2Q,kB,IAGtB,SAAkBrV,GACdjC,KAAKuT,SAASsE,GAAS,CAAEP,iBAAkBrV,GAAK,CAACyL,GAAOa,mB,0BAG5D,WACI,OAAOvO,KAAK2G,MAAM4Q,qB,IAGtB,SAAmBtV,GACfjC,KAAKuT,SAASsE,GAAS,CAAEN,oBAAqBtV,GAAK,CAACyL,GAAOa,mB,sBAG/D,WACI,OAAOvO,KAAK2G,MAAM6Q,gB,IAGtB,SAAevV,GACXjC,KAAKuT,SAASsE,GAAS,CAAE,eAAkB5V,GAAK,CAACyL,GAAOc,e,+BAG5D,WACI,IAAIwJ,EAAMhY,KAAKiY,iBACf,MAAgB,SAARD,GAA0B,OAARA,I,0BAG9B,WAEI,IAAKhY,KAAK2G,MAAM4C,aAAevJ,KAAK2G,MAAM4C,WAAWmC,MACjD,MAAO,GAGX,IAAMQ,EAAW9M,IAAE8Y,KAAKlY,KAAK2G,MAAM4C,WAAWmC,MAAMyM,SAC9CR,EAAO3X,KAAK2G,MAAM8Q,cACxB,OAAOrY,IAAEyO,UAAU3B,EAAS/H,KAAI,SAACiE,GAAD,MAAQ,CAACA,EAAIuP,EAAKvP,IAAO,S,kCAG7D,SAAqBzF,GACjB3C,KAAKuT,SAAS,CACVC,KAAM,OACN4E,SAAUV,GACVnY,UAAW,CAACoD,O,0BAIpB,SAAayF,GACT,OAAOpI,KAAK2G,MAAM8Q,cAAcrP,IAAO,M,GAxDrB6O,IAsEXoB,OATf,WACI,IAAI1R,EAAQkQ,YAAYM,GAAmB,KAAM,CAAC,aAAc,oBAAqBL,KACjFlO,EAAamO,cAIjB,OAFW,IAAIgB,GAAYpR,EAAOiC,IC5GhC0P,GAAkB,CACpBC,SAAU,KACVC,mBAAmB,EACnBC,qBAAsB,GACtBC,gBAAiB,QAIfC,GAAY,SAAShW,GAAkB,IAAZmV,EAAW,uDAAJ,GACpC,MAAO,CACHtE,KAAM,SACN7Q,KAAK,2BACEA,GADH,IAEAqQ,cAAe8E,MAKrBc,G,2JAEF,WACI,IAAIpY,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,S,yBAGpD,WACI,OAAOzS,KAAK2G,MAAM6R,mB,IAGtB,SAAkBvW,GACdjC,KAAKuT,SAASoF,GAAU,CAAEH,kBAAmBvW,GAAK,CAACyL,GAAOe,oB,0BAG9D,WACI,OAAOzO,KAAK2G,MAAM8R,sB,IAGtB,SAAmBxW,GACfjC,KAAKuT,SAASoF,GAAU,CAAEF,qBAAsBxW,GAAK,CAACyL,GAAOe,oB,sBAGjE,WACI,OAAOzO,KAAK2G,MAAM+R,iB,IAGtB,SAAezW,GACXjC,KAAKuT,SAASoF,GAAU,CAAED,gBAAiBzW,GAAK,CAACyL,GAAOgB,gB,+BAG5D,WACI,IAAIsJ,EAAMhY,KAAKiY,iBACf,MAAgB,SAARD,GAA0B,QAARA,M,GAjCPf,IA+CZ4B,OATf,WACI,IAAIlS,EAAQkQ,YAAYM,GAAmB,MAAO,CAAC,aAAc,mBAAoBL,KACjFlO,EAAamO,cAIjB,OAFW,IAAI6B,GAAajS,EAAOiC,IC1DjC6K,GAAK7S,IAASC,WAEdiY,GAAkB,CACpBC,SAAU,KACVC,eAAgB,GAChBC,cAAc,EACdC,iBAAkB,KAClBC,WAAY,EACZC,iBAAiB,EACjBC,iBAAiB,GAIfC,G,wJAEF,WACI,OAAOtZ,KAAK2G,MAAMsS,c,IAGtB,SAAShX,GAEL,IAAIU,EAAO,CACPsW,aAAchX,EACd+Q,cAAe,CAAEtF,GAAOqB,YAGvB9M,IACDU,EAAKuW,iBAAmB,MAE5BlZ,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAMA,M,uBAId,WACI,OAAO3C,KAAK2G,MAAMuS,mB,kBAGtB,WACI,OAAOlZ,KAAK2G,MAAMwS,Y,IAGtB,SAAWlX,GACPjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACFwW,WAAYlX,O,2BAKxB,WACI,OAAOjC,KAAK2G,MAAM0S,iB,IAGtB,SAAoBpX,GAChBjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACF0W,gBAAiBpX,EACjB+Q,cAAe,CAAEtF,GAAOqB,gB,sBAKpC,WACI,OAAO/O,KAAK2G,MAAMyS,iB,IAGtB,SAAenX,GACXjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACFyW,gBAAiBnX,EACjB+Q,cAAe,CAAEtF,GAAOkB,iB,kBAKpC,WACI,IAAM2E,EAAWvT,KAAK8I,YAChByN,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,GAGLA,EAAQE,YAAY,MAAOhD,IAAI,SAACjO,EAAGR,GAEvBQ,EAAE2E,QAAU,GAIhBoJ,EAAS,CACLC,KAAM,SACN7Q,KAAM,CACFuW,iBAAkB1T,EAClBwN,cAAe,CAAEtF,GAAOqB,mB,oBAM5C,WACI,IAAMwH,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,GAILA,EAAQE,YAAY,MAAOhD,Q,GAjGR9K,GA+GZ4Q,OATf,WACI,IAAI5S,EAAQkQ,YAAYrQ,EAAa,MAAO,CAAC,sBAAuBsQ,KAChElO,EAAamO,cAIjB,OAFW,IAAIuC,GAAa3S,EAAOiC,ICvHjC6K,GAAK7S,IAASC,WAEd2Y,GAAoB,CACtBC,QAAS,KACTC,cAAe,GACfC,aAAa,EACbC,gBAAiB,KACjBC,UAAW,EACXC,gBAAgB,EAChBC,gBAAgB,GAIdC,G,2JAEF,WACI,IAAIxZ,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,S,gBAGpD,WACI,OAAOzS,KAAK2G,MAAMgT,a,IAGtB,SAAS1X,GAEL,IAAIU,EAAO,CACPgX,YAAa1X,EACb+Q,cAAe,CAAEtF,GAAOsB,WAGvB/M,IACDU,EAAKiX,gBAAkB,MAE3B5Z,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAMA,M,uBAId,WACI,OAAO3C,KAAK2G,MAAMiT,kB,kBAGtB,WACI,OAAO5Z,KAAK2G,MAAMkT,W,IAGtB,SAAW5X,GACPjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACFkX,UAAW5X,O,2BAKvB,WACI,OAAOjC,KAAK2G,MAAMoT,gB,IAGtB,SAAoB9X,GAChBjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACFoX,eAAgB9X,EAChB+Q,cAAe,CAAEtF,GAAOsB,e,sBAKpC,WACI,OAAOhP,KAAK2G,MAAMmT,gB,IAGtB,SAAe7X,GACXjC,KAAKuT,SAAS,CACVC,KAAK,SACL7Q,KAAM,CACFmX,eAAgB7X,EAChB+Q,cAAe,CAAEtF,GAAOmB,gB,kBAKpC,WACI,IAAM0E,EAAWvT,KAAK8I,YAChByN,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,GAGLA,EAAQE,YAAY,KAAMhD,IAAI,SAACjO,EAAGR,GAEtBQ,EAAE2E,QAAU,GAIhBoJ,EAAS,CACLC,KAAM,SACN7Q,KAAM,CACFiX,gBAAiBpU,EACjBwN,cAAe,CAAEtF,GAAOsB,kB,oBAM5C,WACI,IAAMuH,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,GAILA,EAAQE,YAAY,KAAMhD,Q,GAtGL9K,GAoHdsR,OATf,WACI,IAAItT,EAAQkQ,YAAYrQ,EAAa,KAAM,CAAC,oBAAqB,eAAgBsQ,KAC7ElO,EAAamO,cAIjB,OAFW,IAAIiD,GAAerT,EAAOiC,IC1HnC6K,GAAK7S,IAASC,WACdqZ,GAAKtZ,IAASO,YAEdgZ,GAAoB,CACtB3I,WAAY,KACZI,cAAe,KACfI,aAAc,KACdN,WAAY,KACZI,cAAe,KACfI,aAAc,KACdE,eAAgB,MAChBO,YAAa,MAGXyH,GAAe,IAAIlM,IAAI,CAAC,KAAM,QAC9BmM,GAAmB,IAAInM,IAAI,CAAC,MAAO,QAEzC,SAASoM,GAAa/G,GAAuB,IAAbgH,EAAY,uDAAL,IAEnC,SAAShZ,EAAMiE,EAAGR,GAAI,IAAD,EACjBuO,EAAS,CACLC,KAAM,SACN7Q,MAAI,mBACC,eAAiB4X,EAAS/U,GAD3B,8BAEe,CAACkI,GAAOiB,aAFvB,KAOZ,OAAOpN,EAGX,SAASiZ,GAAgB7X,GACrB,MAAO,CACH6Q,KAAM,SACN7Q,KAAK,2BACEA,GADH,IAEAqQ,cAAe,CAACtF,GAAOiB,e,IAK7B8L,G,4JAEF,WAEI,OADUza,KAAK2G,MAAM4C,YACNvJ,KAAK2G,MAAM4C,WAAWmC,Q,qBAGzC,WACI,IAAIlL,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,Q,sBAGpD,WACI,IAAIjS,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,S,sBAGpD,WACI,OAAOzS,KAAK2G,MAAMyL,gB,IAGtB,SAAenQ,GACX,IAAKoY,GAAiBnL,IAAIjN,GACtB,MAAM5B,MAAM,mCAChBL,KAAKuT,SAASiH,GAAgB,CAACpI,eAAgBnQ,O,2BAGnD,WAA2B,IAAbsY,EAAY,uDAAL,IACb/U,EAAIxF,KAAK2G,MAAM,YAAc4T,GACjC,OAAI/U,EACOA,EAAEsF,WAEF,iB,4BAGf,SAAe7I,GAAgB,IAAbsY,EAAY,uDAAL,IACrB,IAAKH,GAAalL,IAAIjN,GAClB,MAAM5B,MAAM,uCAChBL,KAAKuT,SAASiH,GAAgB,eAAE,cAAgBD,EAAStY,O,iBAG7D,WACI,OAAOjC,KAAK2G,MAAM6K,a,sBAGtB,WACI,OAAOxR,KAAK0a,cAAc,O,iBAG9B,WACI,OAAO1a,KAAK2G,MAAM+K,a,sBAGtB,WACI,OAAO1R,KAAK0a,cAAc,O,mBAG9B,WACI,OAAO1a,KAAK2G,MAAMqL,c,IAGtB,SAAY/P,GACRjC,KAAK2a,eAAe1Y,EAAG,O,mBAG3B,WACI,OAAOjC,KAAK2G,MAAMuL,c,IAGtB,SAAYjQ,GACRjC,KAAK2a,eAAe1Y,EAAG,O,wBAG3B,SAAWoC,GAAe,IAAZuW,EAAW,wDACjBC,EAAID,EAAK,EAAM,IAAIrW,KAAKG,GACxBR,EAAIlE,KAAK2G,MAAMgM,YACnB,OAAOzO,EAAIA,EAAEG,GAAGwW,EAAK,Q,iBAGzB,WACI,OAAO7a,KAAK8a,WAAW,K,gBAG3B,WACI,OAAO9a,KAAK8a,WAAW,K,iBAG3B,WACI,OAAO9a,KAAK8a,WAAW,K,oBAG3B,WACI,OAAO9a,KAAK8a,WAAW,GAAG,K,mBAG9B,WACI,OAAO9a,KAAK8a,WAAW,GAAG,K,oBAG9B,WACI,OAAO9a,KAAK8a,WAAW,GAAG,K,kBAG9B,WACI,IAAMvH,EAAWvT,KAAK8I,YAChByN,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,IAGLA,EAAQE,YAAY,MAAOhD,GAAI6G,GAAa/G,EAAU,MACtDgD,EAAQE,YAAY,MAAOyD,GAAII,GAAa/G,EAAU,S,oBAG1D,WACI,IAAMgD,EAAUvW,KAAK2G,MAAM6P,kBAEtBD,IAGLA,EAAQE,YAAY,MAAOhD,IAC3B8C,EAAQE,YAAY,MAAOyD,IAE3Bla,KAAKuT,SAASiH,GAAgB,CAC1B5I,cAAe,KACfE,cAAe,W,uBAIvB,WACI,IAAIiJ,EAAS,kCAUb,OARAA,GAAM,UAAO/a,KAAKgb,QAAZ,eAA0Bhb,KAAKib,WAA/B,WACNF,GAAM,UAAO/a,KAAKkb,QAAZ,eAA0Blb,KAAKmb,WAA/B,QAENJ,GAAM,sBAAmB/a,KAAKyF,WAAW2V,cAAnC,QAENL,GAAM,oBAAiB/a,KAAKuD,MAAtB,eAAkCvD,KAAKqb,KAAvC,eAAkDrb,KAAK8D,MAAvD,QACNiX,GAAM,qBAAkB/a,KAAKsb,SAAvB,gBAAuCtb,KAAKub,QAA5C,gBAA2Dvb,KAAKwb,Y,+BAK1E,WAEI,IAAMxb,KAAKyb,YAAazb,KAAK0b,WAEzB,MAAMrb,MAAM,2DAIhB,IAAIsb,EAAO3b,KAAK2G,MAAM4C,WAAWnC,SAG3BzE,GAFNgZ,EAAQA,EAAKnZ,OAAS,EAAImZ,EAAO3b,KAAK2G,MAAM4C,WAAWlC,WAErClD,KAAI,SAACqB,EAAGnB,GACtB,MAAO,CAACmB,EAAEsF,WAAYtF,EAAEV,cAAc,MAAOU,EAAEV,cAAc,WAG7D8W,EAAK,2EAAuE5b,KAAKyF,WAAW2V,cAAvF,MACLjJ,EAAOnS,KAAKyF,WAYhB,OAVA9C,EAAK4J,SAAQ,SAAC6G,EAAG/O,GAEb,kBAAuB+O,EAAvB,GAAK1G,EAAL,KAGA,EAA2BxG,EAH3B,UAGwDiM,GAAxD,mBAAK5O,EAAL,KAAY8X,EAAZ,KAAkBvX,EAAlB,KAEA8X,GAAK,UAAOlP,EAAP,eAAmBnJ,EAAnB,eAA+B8X,EAA/B,eAA0CvX,EAA1C,SAGF8X,M,GA3KcjT,GAwLdkT,OATf,WACI,IAAIlV,EAAQkQ,YAAYrQ,EAAa,MAAO,CAAC,aAAc,sBAAuBsQ,KAC9ElO,EAAamO,cAIjB,OAFW,IAAI0D,GAAe9T,EAAOiC,ICpMzC,SAASkT,GAAgBnV,EAAOoV,GAC5B,IAGIpZ,EAAO,GAeX,OAlBUgE,EAAM4C,WACHmC,QAKT/I,EAAI,uFACGiR,IACAoD,IACAI,IACAkB,IACAQ,IACAU,IACAW,KAKJ,2BACAxX,GADP,IAEI0M,iBAAkB0M,EAClB/I,cAAe,CAACtF,GAAOU,WAAYV,GAAOY,OAC1BZ,GAAOa,cAAeb,GAAOc,UAC7Bd,GAAOe,eAAgBf,GAAOgB,WAC9BhB,GAAOqB,UAAWrB,GAAOsB,YAIjD,SAASgN,GAAerV,EAAOoV,GAE3B,IAAIvb,EAAMmG,EAAM4C,WACZ5G,EAAO,GAGXnC,EAAIyb,YAAYF,GAEhB,IAAIG,EAAS1b,EAAI2b,UAOjB,OALK3b,EAAIkL,OAASwQ,EAAO1Z,OAAS,IAE9BG,EAAOmZ,GAAgBnV,EAAOuV,EAAO,KAGlCvZ,E,IAGLyZ,G,+JAEF,WACI,OAAuB,OAAhBpc,KAAKqc,S,kBAGhB,WACI,OAAOrc,KAAK2G,MAAM4C,a,kBAGtB,WACI,IAAI2S,EAAS,GAMb,OAJIlc,KAAKsc,cACLJ,EAASlc,KAAKqc,OAAOF,WAGlBD,I,wBAGX,WACI,IAAIxQ,EAAQ,KAMZ,OAJI1L,KAAKsc,cACL5Q,EAAQ1L,KAAKqc,OAAO3Q,OAGjBA,I,4BAGX,WACI,IAAI6Q,EAAa,KAMjB,OAJIvc,KAAKsc,cACLC,EAAavc,KAAKqc,OAAOG,WAGtBD,I,iBAGX,WACI,OAAOvc,KAAK2G,MAAM8V,W,IAGtB,SAAUxa,GACNjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,YACLyN,MAAOrS,M,mBAIf,WACI,OAAOjC,KAAK2G,MAAM+V,a,IAGtB,SAAYza,GACRjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,cACLyN,MAAOrS,M,qBAIf,WACI,OAAOjC,KAAK2G,MAAMgW,iB,IAGtB,SAAc1a,GACVjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,kBACLyN,MAAOrS,M,0BAIf,WACI,OAAOjC,KAAK2G,MAAMiW,kB,IAGtB,SAAmB3a,GACfjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,mBACLyN,MAAOrS,M,wBAIf,SAAW4a,GACP9M,QAAQC,IAAI,wCAA0C6M,GAEtD,IAAMC,EAAM,IAAIlc,IAASic,GACzBC,EAAIzI,mBAAoB,EAExB,IAAMkC,EAAU,IAAIhW,EAAauc,GAE5B9c,KAAKsc,aACNtc,KAAKuT,SAAS,CACVC,KAAM,SACN7Q,KAAM,CACF4G,WAAYuT,EACZtG,kBAAmBD,O,kBAMnC,SAAKwG,GAAoB,IAAbxb,EAAY,uDAAN,KAKd,GAAKvB,KAAKsc,YAAV,CAIA,IAAIU,EAAM,IAAInd,EAAekd,EAAMva,OAAQjB,GACvCf,EAAMR,KAAKqc,OACX/F,EAAOtW,KACPid,EAAS,CACTC,UAAW,CAAC,EAAG,EAAG,GAClBC,iBAAkBnd,KAAKod,UACvBC,qBAAsBrd,KAAKsd,gBAoC/Ble,IAAEmN,QAAQwQ,EAAOQ,GAhCjB,SAASC,EAAOC,EAAUpc,EAAMqc,GAC5B,IAAIC,EAAUnd,EAAIod,WAAWH,EAAUC,EAAWrc,EAAM4b,GAGpDY,EAAa,KACjBze,IAAE+E,IAAIwZ,GAAS,SAAC1b,EAAGnC,GACL,IAANmC,IACA4b,EAAa/d,MAIjB+d,GACAvH,EAAKwH,QAAQD,GAGbtc,GACAyb,EAAIe,KAAKJ,GAKjB,SAASJ,EAAS1C,GAEd,IAAImD,EAAS,IAAIC,WAEb5c,EAAOwZ,EAAExZ,KAAKsP,MAAM,KAAK,GACzB+M,EAAY7C,EAAExZ,KAAKsP,MAAM,KAAKuN,MAElCF,EAAOG,OAAU,SAACnZ,GAAQwY,EAAOxY,EAAEoZ,OAAOC,OAAQhd,EAAMqc,IACxDM,EAAOM,WAAWzD,M,qBAM1B,SAAQkB,GACJ/b,KAAKuT,SAAS,CACVC,KAAM,OACN4E,SAAU0D,GACVvc,UAAW,CAACwc,O,oBAIpB,SAAOA,GACH/b,KAAKuT,SAAS,CACVC,KAAM,OACN4E,SAAU4D,GACVzc,UAAW,CAACwc,S,GA7KGpT,GA6LZ4V,OATf,WACI,IAAI5X,EAAQkQ,YAAYrQ,EAAa,OAAQsQ,KACzClO,EAAamO,cAIjB,OAFW,IAAIqF,GAAazV,EAAOiC,IC/PjC4V,G,4JAEF,WACI,OAAOxe,KAAK2G,MAAM8X,e,IAGtB,SAAaxc,GACTjC,KAAKuT,SAAS,CACVC,KAAM,MACN3M,IAAK,gBACLyN,MAAOrS,M,oBAIf,WACI,IACIyc,EADM1e,KAAK2G,MAAM4C,WACLiT,UACZhJ,EAAOxT,KAAK2G,MAAM8X,cAEtB,OAAIC,EACM,WAAN,OAAkBA,EAAlB,YAA2BlL,EAA3B,QAGO,Q,qBAIf,WAEI,IAAIhT,EAAMR,KAAK2G,MAAM4C,WACrB,IAAK/I,IAAQA,EAAIkL,MACb,OAAO,EAEX,OAAO1L,KAAK2G,MAAM8X,eACd,IAAK,KACD,OAAOze,KAAKyb,UAChB,IAAK,MACD,OAAOzb,KAAK0b,WAChB,IAAK,MACD,OAAO1b,KAAK2e,WAKpB,OAAO,I,qBAGX,WACI,IAAIne,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,Q,sBAGpD,WACI,IAAIjS,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,S,sBAGpD,WACI,IAAIjS,EAAMR,KAAK2G,MAAM4C,WACrB,OAAQ/I,GAAOA,EAAIkL,OAAUlL,EAAIkL,MAAM+G,SAAS,S,0BAGpD,WAEI,IAAIgL,EAAW,GAGTjd,EAAMR,KAAK2G,MAAM4C,WACnBhC,EAAO,KAMX,GAJI/G,GAAOA,EAAIkL,QACXnE,EAAOL,EAAO1G,KAGb+G,EACD,OAAO,KAGX,OAAOvH,KAAK2G,MAAM8X,eACd,IAAK,KACDhB,EAAWzd,KAAK4e,aAAarX,GAC7B,MACJ,IAAK,MACDkW,EAAWzd,KAAK6e,cAActX,GAC9B,MACJ,IAAK,MACDkW,EAAWzd,KAAK8e,cAAcvX,GAC9B,MACJ,IAAK,MACDkW,EAAWzd,KAAK+e,cAAcxX,GAC9B,MACJ,QACI,OAAO,KAGf,OAAOkW,I,0BAIX,SAAalW,GAET,IAEM4K,EAAOnS,KAAK2G,MAAMyL,eAEpBwJ,EAAQ,uCACZA,GAAK,mCAAgCzJ,EAAhC,QAGLyJ,GAASja,EAAS,CAAC,QAAS,UAAW,QAAS,iBAC7B,mBAAoB,YACpB,QAAS,OAAQ,SAVvB,IAab,IAAMoT,EAAMzN,EAAWC,EAAM,MAAO,MAAM,GACpCyX,EAAQ1X,EAAWC,EAAM,QAAS,MAAM,GACxC0X,EAAQ3X,EAAWC,EAAM,QAAS,MAAM,GAGxC2X,EAAQ3X,EAAKc,MAAMlE,KAAI,SAACqB,GAE1B,OAAOD,EADGC,EAAEV,cAAc,MACCwB,uBAAwB6L,GAAMhO,KAAI,SAACC,GAAD,OAAU,IAAFA,EAAQG,KAAKG,SAiBtF,OAdA6C,EAAKc,MAAMkE,SAAQ,SAAC/G,EAAGnB,GACnBuX,GAASja,EAAS,CACd6D,EAAEsF,WACFtF,EAAE2Z,QAAU3Z,EAAE8C,QACd9C,EAAET,MACFgQ,EAAI1Q,GACJ2a,EAAM3a,GACN4a,EAAM5a,GACN6a,EAAM7a,GAAG,GACT6a,EAAM7a,GAAG,GACT6a,EAAM7a,GAAG,IAjCJ,GACA,MAoCNuX,I,2BAGX,SAAcrU,GAEV,IAEM4K,EAAOnS,KAAK2G,MAAMyL,eAEpBwJ,EAAQ,wCACZA,GAAK,mCAAgCzJ,EAAhC,QAGLyJ,GAASja,EAAS,CAAC,QAAS,UAAW,QAAS,WAAY,kBACzC,YAAa,UACb,QAAS,OAAQ,SAVvB,IAab,IAAMyd,EAAM9X,EAAWC,EAAM,MAAO,OAAO,GACrCyX,EAAQ1X,EAAWC,EAAM,QAAS,OAAO,GACzC0X,EAAQ3X,EAAWC,EAAM,QAAS,OAAO,GACzCmB,EAAIpB,EAAWC,EAAM,IAAK,OAAO,GAGjC2X,EAAQ3X,EAAKc,MAAMlE,KAAI,SAACqB,GAE1B,OAAOD,EADGC,EAAEV,cAAc,OACCwB,uBAAwB6L,GAAMhO,KAAI,SAACC,GAAD,OAAU,IAAFA,EAAQG,KAAKG,SAkBtF,OAfA6C,EAAKc,MAAMkE,SAAQ,SAAC/G,EAAGnB,GACnBuX,GAASja,EAAS,CACd6D,EAAEsF,WACFtF,EAAE2Z,QAAU3Z,EAAE8C,QACd9C,EAAET,MACFqa,EAAI/a,GACJ2a,EAAM3a,GACN4a,EAAM5a,GACNqE,EAAErE,GACF6a,EAAM7a,GAAG,GACT6a,EAAM7a,GAAG,GACT6a,EAAM7a,GAAG,IAnCJ,GACA,MAsCNuX,I,2BAGX,SAAcrU,GAEV,IAGIqU,EAAQ,uDAGZA,GAASja,EAAS,CAAC,UAAW,YAAa,UACxB,UAAW,YAAa,UACxB,UAAW,YAAa,YAAa,aAR3C,IAUb,IAAM0G,EAAQd,EAAKc,MAoBnB,OAlBAA,EAAMkE,SAAQ,SAAC7I,EAAIW,GACfgE,EAAMgX,MAAMhb,EAAE,GAAGkI,SAAQ,SAAC5I,EAAI2b,GAE1B,MAAe7b,EAAgBC,EAAIC,GAAnC,mBAAO4b,EAAP,KAAUrb,EAAV,KAEA0X,GAASja,EAAS,CACd+B,EAAGoH,WACHpH,EAAGyb,QAAUzb,EAAG4E,QAChB5E,EAAGqB,MACHpB,EAAGmH,WACHnH,EAAGwb,QAAUxb,EAAG2E,QAChB3E,EAAGoB,MACHwa,EACArb,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAzBb,GACA,SA6BN0X,I,2BAGX,SAAcrU,GAEV,IAGIqU,EAAQ,iDAGZA,GAASja,EAAS,CAAC,UAAW,YAAa,UACxB,UAAW,YAAa,UACxB,UARN,IAUb,IAAM0G,EAAQd,EAAKc,MAsBnB,OApBAA,EAAMkE,SAAQ,SAAC7I,EAAIW,GACfgE,EAAMgX,MAAMhb,EAAE,GAAGkI,SAAQ,SAAC5I,EAAI2b,GAE1B,IAAM1S,EAAIhI,EAAUlB,EAAIC,GAEpBiJ,IAGJgP,GAASja,EAAS,CACd+B,EAAGoH,WACHpH,EAAGyb,QAAUzb,EAAG4E,QAChB5E,EAAGqB,MACHpB,EAAGmH,WACHnH,EAAGwb,QAAUxb,EAAG2E,QAChB3E,EAAGoB,MACH6H,GA3BC,GACA,UA+BNgP,M,GA9PcjT,GA+Qd6W,OAZf,WACI,IAAI7Y,EAAQkQ,YAAYrQ,EAAa,QAAS,CAAC,aACA,wBACA,mBACvBsQ,KACpBlO,EAAamO,cAIjB,OAFW,IAAIyH,GAAe7X,EAAOiC,IClRnC6W,GAAY,2HFkBM,CACpBlW,WAAY,KACZiN,kBAAmB,KACnBiG,UAAW,OACXC,YAAa,OACbnN,sBAAuB,KACvBF,iBAAkB,KAClBsN,iBAAiB,EACjBC,kBAAkB,IExBfhJ,IACAoD,IACAI,IACAkB,IACAQ,IACAU,IACAW,IDJmB,CACtBsE,cAAe,ObcU,CACzBzL,cAAe,Kc0BnB,IAAM0M,GAAcC,aAhCpB,WAAkE,IAA5ChZ,EAA2C,uDAArC8Y,GAAc1W,EAAuB,uDAAhB,CAACyK,KAAM,QACpD,OAAOzK,EAAOyK,MACV,IAAK,MAED7M,EAAK,2BACEA,GADF,kBAEAoC,EAAOlC,IAAMkC,EAAOuL,QAEzB,MACJ,IAAK,SAED3N,EAAK,2BACEA,GACAoC,EAAOpG,MAEd,MACJ,IAAK,OAED,IAAIid,EAAO,CAACjZ,GAAOyP,OAAOrN,EAAOxJ,WAC7BoD,EAAOoG,EAAOqP,SAAP,MAAArP,EAAM,YAAa6W,IAC9BjZ,EAAK,2BACEA,GACAhE,GAOf,OAAOgE,KAIX+Y,GAAYG,UAAUjN,GAAmB8M,KAE1BA,ICtDAA,GDsDAA,GEhEA,I,OAAA,IAA0B,kC,0BCQzC,SAASI,GAAqBC,GAE1B,IAAMC,EAAUD,EAAMC,SAAY,aAElC,OACI,uBAAKC,UAAU,4BAA4BD,QAASA,EAApD,UACKD,EAAMG,KAAMH,EAAMG,KAAO,0BACzBH,EAAMI,YA2CJC,OAtCf,SAAwBL,GAEpB,MAA0BrgB,oBAAS,GAAnC,mBAAQmQ,EAAR,KAAcwQ,EAAd,KAGM7K,EAAUuK,EAAMI,SAAShN,QAAO,SAACtN,GAAD,OAAOA,EAAE2N,OAASsM,MAClDle,EAAS4T,EAAQrR,KAAI,SAACmc,GAAD,OAAQA,EAAEP,MAAMzL,SAKrClN,EAAWxF,EAAO2e,WAAU,SAACte,GAAD,OAAQA,IAAM8d,EAAM3Y,YAChDoZ,EAAWT,EAAMS,UAAa,aAQpC,OALAC,qBAAU,WACFV,EAAMW,UACNL,GAAQ,KACb,CAACN,EAAMW,WAGN,uBAAKC,MAZI,GAYWV,UAAW9gB,EAAa,aAAc,aAAc0Q,EAAM,KAAO,oBACzCkQ,EAAMW,SAAU,sBAAwB,MAChFE,aAAc,SAAC5b,GAAQqb,GAAQ,IAAWQ,MAAOd,EAAMc,MAF3D,UAGI,uBAAKZ,UAAU,6BAA6BD,QAAS,WAAQK,GAAkBN,EAAMW,WAArF,UACKlL,EAAQpO,GACT,uBAAM6Y,UAAU,wBAAhB,SAAwC,eAAC,KAAD,SAE5C,sBAAKA,UAAU,8BAAf,SACKzK,EAAQrR,KAAI,SAACmc,EAAGjc,GACb,OAAOyc,uBAAaR,EAAG,CAACzZ,IAAKxC,EAAG2b,QAAS,WAAQK,GAAQ,GAAQG,EAAS5e,EAAOyC,gBClDjG0c,I,OAAY,CAAC,QAAS,YAE1B,SAASC,KAA2Q,OAA9PA,GAAWlT,OAAOmT,QAAU,SAAU7C,GAAU,IAAK,IAAI/Z,EAAI,EAAGA,EAAI9E,UAAUiD,OAAQ6B,IAAK,CAAE,IAAI6c,EAAS3hB,UAAU8E,GAAI,IAAK,IAAIwC,KAAOqa,EAAcpT,OAAOqT,UAAUC,eAAerD,KAAKmD,EAAQra,KAAQuX,EAAOvX,GAAOqa,EAAOra,IAAY,OAAOuX,GAAkB4C,GAASK,MAAMrhB,KAAMT,WAEhT,SAAS+hB,GAAyBJ,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEra,EAAKxC,EAAnE+Z,EAEzF,SAAuC8C,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dra,EAAKxC,EAA5D+Z,EAAS,GAAQoD,EAAa1T,OAAO6G,KAAKuM,GAAqB,IAAK7c,EAAI,EAAGA,EAAImd,EAAWhf,OAAQ6B,IAAOwC,EAAM2a,EAAWnd,GAAQkd,EAASxa,QAAQF,IAAQ,IAAauX,EAAOvX,GAAOqa,EAAOra,IAAQ,OAAOuX,EAFxMqD,CAA8BP,EAAQK,GAAuB,GAAIzT,OAAO4T,sBAAuB,CAAE,IAAIC,EAAmB7T,OAAO4T,sBAAsBR,GAAS,IAAK7c,EAAI,EAAGA,EAAIsd,EAAiBnf,OAAQ6B,IAAOwC,EAAM8a,EAAiBtd,GAAQkd,EAASxa,QAAQF,IAAQ,GAAkBiH,OAAOqT,UAAUS,qBAAqB7D,KAAKmD,EAAQra,KAAgBuX,EAAOvX,GAAOqa,EAAOra,IAAU,OAAOuX,EAMne,SAASyD,GAAMC,EAAMC,GACnB,IAAIlB,EAAQiB,EAAKjB,MACbmB,EAAUF,EAAKE,QACfjC,EAAQuB,GAAyBQ,EAAMf,IAE3C,OAAoB,gBAAoB,MAAOC,GAAS,CACtDnf,MAAO,cACPqJ,OAAQ,cACR+W,QAAS,0BACTriB,GAAI,QACJsiB,MAAO,6BACPC,IAAKJ,EACL,kBAAmBC,GAClBjC,GAAQc,EAAqB,gBAAoB,QAAS,CAC3DjhB,GAAIoiB,GACHnB,GAAS,KAAmB,gBAAoB,IAAK,CACtDuB,UAAW,oCACG,gBAAoB,OAAQ,CAC1CxiB,GAAI,WACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,smBAIP,ICxCIsP,GDwCAC,GAA0B,aAAiBd,ICtC3C,IDuCW,ICvCC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW/T,OAAOmT,QAAU,SAAU7C,GAAU,IAAK,IAAI/Z,EAAI,EAAGA,EAAI9E,UAAUiD,OAAQ6B,IAAK,CAAE,IAAI6c,EAAS3hB,UAAU8E,GAAI,IAAK,IAAIwC,KAAOqa,EAAcpT,OAAOqT,UAAUC,eAAerD,KAAKmD,EAAQra,KAAQuX,EAAOvX,GAAOqa,EAAOra,IAAY,OAAOuX,GAAkB,GAASiD,MAAMrhB,KAAMT,WAEhT,SAAS,GAAyB2hB,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEra,EAAKxC,EAAnE+Z,EAEzF,SAAuC8C,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dra,EAAKxC,EAA5D+Z,EAAS,GAAQoD,EAAa1T,OAAO6G,KAAKuM,GAAqB,IAAK7c,EAAI,EAAGA,EAAImd,EAAWhf,OAAQ6B,IAAOwC,EAAM2a,EAAWnd,GAAQkd,EAASxa,QAAQF,IAAQ,IAAauX,EAAOvX,GAAOqa,EAAOra,IAAQ,OAAOuX,EAFxM,CAA8B8C,EAAQK,GAAuB,GAAIzT,OAAO4T,sBAAuB,CAAE,IAAIC,EAAmB7T,OAAO4T,sBAAsBR,GAAS,IAAK7c,EAAI,EAAGA,EAAIsd,EAAiBnf,OAAQ6B,IAAOwC,EAAM8a,EAAiBtd,GAAQkd,EAASxa,QAAQF,IAAQ,GAAkBiH,OAAOqT,UAAUS,qBAAqB7D,KAAKmD,EAAQra,KAAgBuX,EAAOvX,GAAOqa,EAAOra,IAAU,OAAOuX,EAMne,SAASwE,GAAOd,EAAMC,GACpB,IAAIlB,EAAQiB,EAAKjB,MACbmB,EAAUF,EAAKE,QACfjC,EAAQ,GAAyB+B,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDjgB,MAAO,cACPqJ,OAAQ,cACR+W,QAAS,0BACTriB,GAAI,SACJsiB,MAAO,6BACPC,IAAKJ,EACL,kBAAmBC,GAClBjC,GAAQc,EAAqB,gBAAoB,QAAS,CAC3DjhB,GAAIoiB,GACHnB,GAAS,KAAM6B,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3E9iB,GAAI,YACY,gBAAoB,IAAK,CACzCA,GAAI,WACJ+gB,MAAO,CACL0B,KAAM,UACNQ,YAAa,IAED,gBAAoB,OAAQ,CAC1ClC,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNC,YAAa,QACbQ,eAAgB,OAChBD,YAAa,GAEfzP,EAAG,qQACHxT,GAAI,YACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNS,eAAgB,OAChBD,YAAa,GAEfzP,EAAG,qhCACHxT,GAAI,aACY,gBAAoB,IAAK,CACzCA,GAAI,cACU,gBAAoB,OAAQ,CAC1C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNC,YAAa,QACbQ,eAAgB,QAElB1P,EAAG,iQACHxT,GAAI,YACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNS,eAAgB,QAElB1P,EAAG,8/BACHxT,GAAI,aACY,gBAAoB,OAAQ,CAC5C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNS,eAAgB,QAElB1P,EAAG,w+BACHxT,GAAI,iBACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNS,eAAgB,QAElB1P,EAAG,ijCACHxT,GAAI,oBAIR,IC5FI,GD4FA,GAA0B,aAAiBgjB,IC1F3C,ID2FW,IC3FC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAW9U,OAAOmT,QAAU,SAAU7C,GAAU,IAAK,IAAI/Z,EAAI,EAAGA,EAAI9E,UAAUiD,OAAQ6B,IAAK,CAAE,IAAI6c,EAAS3hB,UAAU8E,GAAI,IAAK,IAAIwC,KAAOqa,EAAcpT,OAAOqT,UAAUC,eAAerD,KAAKmD,EAAQra,KAAQuX,EAAOvX,GAAOqa,EAAOra,IAAY,OAAOuX,GAAkB,GAASiD,MAAMrhB,KAAMT,WAEhT,SAAS,GAAyB2hB,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEra,EAAKxC,EAAnE+Z,EAEzF,SAAuC8C,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dra,EAAKxC,EAA5D+Z,EAAS,GAAQoD,EAAa1T,OAAO6G,KAAKuM,GAAqB,IAAK7c,EAAI,EAAGA,EAAImd,EAAWhf,OAAQ6B,IAAOwC,EAAM2a,EAAWnd,GAAQkd,EAASxa,QAAQF,IAAQ,IAAauX,EAAOvX,GAAOqa,EAAOra,IAAQ,OAAOuX,EAFxM,CAA8B8C,EAAQK,GAAuB,GAAIzT,OAAO4T,sBAAuB,CAAE,IAAIC,EAAmB7T,OAAO4T,sBAAsBR,GAAS,IAAK7c,EAAI,EAAGA,EAAIsd,EAAiBnf,OAAQ6B,IAAOwC,EAAM8a,EAAiBtd,GAAQkd,EAASxa,QAAQF,IAAQ,GAAkBiH,OAAOqT,UAAUS,qBAAqB7D,KAAKmD,EAAQra,KAAgBuX,EAAOvX,GAAOqa,EAAOra,IAAU,OAAOuX,EAMne,SAAS2E,GAAOjB,EAAMC,GACpB,IAAIlB,EAAQiB,EAAKjB,MACbmB,EAAUF,EAAKE,QACfjC,EAAQ,GAAyB+B,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDjgB,MAAO,cACPqJ,OAAQ,cACR+W,QAAS,0BACTriB,GAAI,SACJsiB,MAAO,6BACPC,IAAKJ,EACL,kBAAmBC,GAClBjC,GAAQc,EAAqB,gBAAoB,QAAS,CAC3DjhB,GAAIoiB,GACHnB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EjhB,GAAI,YACY,gBAAoB,IAAK,CACzCA,GAAI,YACU,gBAAoB,OAAQ,CAC1C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNC,YAAa,KACbC,cAAe,QACfC,eAAgB,QAChBM,eAAgB,OAChBL,WAAY,uBAEdrP,EAAG,6PACHxT,GAAI,aACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNE,cAAe,QACfC,eAAgB,QAChBM,eAAgB,OAChBL,WAAY,uBAEdrP,EAAG,irCACHxT,GAAI,cACY,gBAAoB,OAAQ,CAC5C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNE,cAAe,QACfC,eAAgB,QAChBM,eAAgB,OAChBL,WAAY,uBAEdrP,EAAG,ssCACHxT,GAAI,gBAIR,ICpEI,GDoEA,GAA0B,aAAiBmjB,IClE3C,IDmEW,ICnEC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAWjV,OAAOmT,QAAU,SAAU7C,GAAU,IAAK,IAAI/Z,EAAI,EAAGA,EAAI9E,UAAUiD,OAAQ6B,IAAK,CAAE,IAAI6c,EAAS3hB,UAAU8E,GAAI,IAAK,IAAIwC,KAAOqa,EAAcpT,OAAOqT,UAAUC,eAAerD,KAAKmD,EAAQra,KAAQuX,EAAOvX,GAAOqa,EAAOra,IAAY,OAAOuX,GAAkB,GAASiD,MAAMrhB,KAAMT,WAEhT,SAAS,GAAyB2hB,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEra,EAAKxC,EAAnE+Z,EAEzF,SAAuC8C,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dra,EAAKxC,EAA5D+Z,EAAS,GAAQoD,EAAa1T,OAAO6G,KAAKuM,GAAqB,IAAK7c,EAAI,EAAGA,EAAImd,EAAWhf,OAAQ6B,IAAOwC,EAAM2a,EAAWnd,GAAQkd,EAASxa,QAAQF,IAAQ,IAAauX,EAAOvX,GAAOqa,EAAOra,IAAQ,OAAOuX,EAFxM,CAA8B8C,EAAQK,GAAuB,GAAIzT,OAAO4T,sBAAuB,CAAE,IAAIC,EAAmB7T,OAAO4T,sBAAsBR,GAAS,IAAK7c,EAAI,EAAGA,EAAIsd,EAAiBnf,OAAQ6B,IAAOwC,EAAM8a,EAAiBtd,GAAQkd,EAASxa,QAAQF,IAAQ,GAAkBiH,OAAOqT,UAAUS,qBAAqB7D,KAAKmD,EAAQra,KAAgBuX,EAAOvX,GAAOqa,EAAOra,IAAU,OAAOuX,EAMne,SAAS4E,GAASlB,EAAMC,GACtB,IAAIlB,EAAQiB,EAAKjB,MACbmB,EAAUF,EAAKE,QACfjC,EAAQ,GAAyB+B,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDjgB,MAAO,cACPqJ,OAAQ,cACR+W,QAAS,0BACTriB,GAAI,SACJsiB,MAAO,6BACPC,IAAKJ,EACL,kBAAmBC,GAClBjC,GAAQc,EAAqB,gBAAoB,QAAS,CAC3DjhB,GAAIoiB,GACHnB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EjhB,GAAI,YACY,gBAAoB,IAAK,CACzCA,GAAI,QACJwiB,UAAW,sCACG,gBAAoB,OAAQ,CAC1CzB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNE,cAAe,QACfC,eAAgB,QAChBM,eAAgB,OAChBL,WAAY,uBAEdrP,EAAG,oeACHxT,GAAI,aACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNE,cAAe,QACfO,eAAgB,QAElB1P,EAAG,iKACHxT,GAAI,aACW,gBAAoB,OAAQ,CAC3C+gB,MAAO,CACLxX,MAAO,UACPkZ,KAAM,UACNE,cAAe,QACfO,eAAgB,QAElB1P,EAAG,mKACHxT,GAAI,iBAIR,IChEI,GDgEA,GAA0B,aAAiBojB,IC9D3C,ID+DW,IC/DC,CAAC,QAAS,YAE1B,SAAS,KAA2Q,OAA9P,GAAWlV,OAAOmT,QAAU,SAAU7C,GAAU,IAAK,IAAI/Z,EAAI,EAAGA,EAAI9E,UAAUiD,OAAQ6B,IAAK,CAAE,IAAI6c,EAAS3hB,UAAU8E,GAAI,IAAK,IAAIwC,KAAOqa,EAAcpT,OAAOqT,UAAUC,eAAerD,KAAKmD,EAAQra,KAAQuX,EAAOvX,GAAOqa,EAAOra,IAAY,OAAOuX,GAAkB,GAASiD,MAAMrhB,KAAMT,WAEhT,SAAS,GAAyB2hB,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEra,EAAKxC,EAAnE+Z,EAEzF,SAAuC8C,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dra,EAAKxC,EAA5D+Z,EAAS,GAAQoD,EAAa1T,OAAO6G,KAAKuM,GAAqB,IAAK7c,EAAI,EAAGA,EAAImd,EAAWhf,OAAQ6B,IAAOwC,EAAM2a,EAAWnd,GAAQkd,EAASxa,QAAQF,IAAQ,IAAauX,EAAOvX,GAAOqa,EAAOra,IAAQ,OAAOuX,EAFxM,CAA8B8C,EAAQK,GAAuB,GAAIzT,OAAO4T,sBAAuB,CAAE,IAAIC,EAAmB7T,OAAO4T,sBAAsBR,GAAS,IAAK7c,EAAI,EAAGA,EAAIsd,EAAiBnf,OAAQ6B,IAAOwC,EAAM8a,EAAiBtd,GAAQkd,EAASxa,QAAQF,IAAQ,GAAkBiH,OAAOqT,UAAUS,qBAAqB7D,KAAKmD,EAAQra,KAAgBuX,EAAOvX,GAAOqa,EAAOra,IAAU,OAAOuX,EAMne,SAAS6E,GAASnB,EAAMC,GACtB,IAAIlB,EAAQiB,EAAKjB,MACbmB,EAAUF,EAAKE,QACfjC,EAAQ,GAAyB+B,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDjgB,MAAO,cACPqJ,OAAQ,cACR+W,QAAS,0BACTriB,GAAI,SACJsiB,MAAO,6BACPC,IAAKJ,EACL,kBAAmBC,GAClBjC,GAAQc,EAAqB,gBAAoB,QAAS,CAC3DjhB,GAAIoiB,GACHnB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EjhB,GAAI,YACY,gBAAoB,IAAK,CACzCA,GAAI,SACJwiB,UAAW,qCACG,gBAAoB,OAAQ,CAC1CxiB,GAAI,WACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,iEACY,gBAAoB,OAAQ,CAC3CxT,GAAI,aACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdL,UAAW,cACXhP,EAAG,kEACY,gBAAoB,OAAQ,CAC3CxT,GAAI,WACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,mOACY,gBAAoB,OAAQ,CAC3CxT,GAAI,aACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,gOACY,gBAAoB,OAAQ,CAC3CxT,GAAI,eACJ+gB,MAAO,CACL0B,KAAM,UACNC,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,8NACY,gBAAoB,OAAQ,CAC3CxT,GAAI,aACJ+gB,MAAO,CACL0B,KAAM,UACNQ,YAAa,EACbK,OAAQ,OACRZ,YAAa,QACbC,cAAe,QACfC,eAAgB,QAChBC,WAAY,uBAEdrP,EAAG,oKAIP,IAAI,GAA0B,aAAiB6P,ICxFzCE,IDyFS,ICzFD,CACVtb,GAAIub,GACJtb,IAAKub,GACLC,IAAKC,GACLC,MAAOC,GACPvE,MAAOwE,KAiBIC,OAdf,SAAgB5D,GAEZ,KAAMA,EAAMG,QAAQiD,IAChB,MAAM,IAAI9iB,MAAM,0BAGpB,IAAMujB,EAAOT,GAAMpD,EAAMG,MACnB/W,EAAS4W,EAAM5W,OAAS,UAE9B,OACI,eAACya,EAAD,aAAM3D,UAAU,UAAUU,MAAO,CAAC,cAAexX,IAAY4W,KCLrE,SAAS8D,KAEL,IAAMC,EAASvF,KAETwF,EAAQ,CACVC,KAAM,QACNC,MAAO,QAGX,OAAQ,sBAAKrkB,GAAG,iBAAiBogB,QAAS,WAAQ8D,EAAOI,MAAQH,EAAMD,EAAOI,QAAtE,SACJ,uBAAKtkB,GAAG,gBAAgBqgB,UAAW6D,EAAOI,MAA1C,UACI,eAAC,KAAD,CAAQtkB,GAAG,iBACX,eAAC,KAAD,CAAOA,GAAG,uBAiCPukB,OA5Bf,WAEI,IAAML,EAASvF,KAEf,OAAQ,0BAAQ0B,UAAU,YAAlB,UACJ,uBAAKA,UAAU,iBAAf,UACI,sBAAKmE,IAAKC,GAAMC,IAAI,kBAAkB1kB,GAAG,mBACzC,sBAAIA,GAAG,kBAAP,UACI,uBAAM+gB,MAAO,CAACxX,MAAO,qBAArB,eADJ,QAC4D,uBAAMwX,MAAO,CAACxX,MAAO,sBAArB,eAD5D,gBAIJ,uBAAK8W,UAAU,kBAAf,UACI,gBAAC,GAAD,CAAgBO,SAAU,SAACve,GAAQ6hB,EAAOS,QAAUtiB,GAAMmF,SAAU0c,EAAOS,QAA3E,UACI,eAACzE,GAAD,CAAsBxL,MAAM,OAAO4L,KAAM,eAAC,KAAD,IAAzC,uBACA,eAACJ,GAAD,CAAsBxL,MAAM,SAAS4L,KAAM,eAAC,KAAD,IAA3C,gCACA,eAACJ,GAAD,CAAsBxL,MAAM,KAAK4L,KAAM,eAAC,GAAD,CAAQA,KAAK,KAAK/W,MAAM,sBAA/D,gCACA,eAAC2W,GAAD,CAAsBxL,MAAM,MAAM4L,KAAM,eAAC,GAAD,CAAQA,KAAK,MAAM/W,MAAM,uBAAjE,qCACA,eAAC2W,GAAD,CAAsBxL,MAAM,MAAM4L,KAAM,eAAC,GAAD,CAAQA,KAAK,MAAM/W,MAAM,uBAAjE,+BACA,eAAC2W,GAAD,CAAsBxL,MAAM,QAAQ4L,KAAM,eAAC,GAAD,CAAQA,KAAK,QAAQ/W,MAAM,yBAArE,yBACA,eAAC2W,GAAD,CAAsBxL,MAAM,QAAQ4L,KAAM,eAAC,GAAD,CAAQA,KAAK,QAAQ/W,MAAM,uBAArE,0BACA,eAAC2W,GAAD,CAAsBxL,MAAM,QAAQ4L,KAAM,eAAC,KAAD,IAA1C,6BAEJ,uBAAMD,UAAU,iBAChB,eAAC4D,GAAD,W,OCzBGW,OAjBf,SAA8BzE,GAE1B,IAAM+D,EAASvF,KAOf,OAAQ,uBAAK0B,UAAU,WAAWD,QALlC,YpCiMJ,SAAmBrd,GAA6B,IAAvBC,EAAsB,uDAAb,YAE9BF,EADAC,EAAOA,EAAK8hB,QAAQ,YAAa,sBACd7hB,GoCjMf8hB,CADWZ,EAAOzH,OAAOsI,oBACT,6BAGZ,UACJ,eAAC,KAAD,IACA,sBAAK1E,UAAU,gBAAf,mC,OCLO2E,OAPf,SAA2B7E,GACvB,OAAQ,uBAAKE,UAAW9gB,EAAa,aAAc4gB,EAAMlQ,KAAM,OAAS,IAAhE,UACHkQ,EAAMc,MAAO,8BAAKd,EAAMc,QAAc,KACtCd,EAAMI,a,yBCGA0E,OArBf,SAAgB9E,GAYZ,OACI,wBAAOE,UAAW9gB,EAAa,aAAc,UAAW4gB,EAAM+E,OAAQ,YAAc,MAAOtR,KAAK,OAC5FuR,OAAQhF,EAAMiF,UACdC,SAbR,SAAkBjgB,GACd,GAAI+a,EAAMS,SAAU,CAChB,IAAIzD,EAAQ/X,EAAEoZ,OAAOrB,MACjBA,EAAMva,OAAS,GACfud,EAAMS,SAASzD,GAGvB/X,EAAEoZ,OAAO9J,MAAQ,MAOb4Q,SAAUnF,EAAMmF,Y,kBCJbC,OAXf,SAAepF,GAEX,IAAMqF,EAAgBrF,EAAMsF,OAAS,UAAYtF,EAAMsF,OAAS,GAC1DC,EAAUvF,EAAMuF,SAAY,aAElC,OAAQ,uBAAKrF,UAAW9gB,EAAa,aAAc,SAAUimB,GAArD,UACJ,sBAAKnF,UAAU,gBAAf,SAA+B,eAAC,KAAD,CAAaD,QAASsF,EAASC,KAAM,OACnExF,EAAMI,a,OCYAqF,OAnBf,SAAoBzF,GAEhB,IAAMngB,EAAKJ,EAAM,YAEbmhB,EAAQ,GACRZ,EAAM5W,QACNwX,EAAM,iBAAmBZ,EAAM5W,OAGnC,IAAMsc,EAAU1F,EAAM0F,SAAY,aAElC,OACI,wBAAMxF,UAAU,yBAAyBU,MAAOA,EAAOE,MAAOd,EAAMc,MAApE,UACI,wBAAOjhB,GAAIA,EAAI4T,KAAK,WAAWkS,QAAS3F,EAAM2F,QAAST,SAAU,SAACjgB,GAAD,OAAOygB,EAAQzgB,EAAEoZ,OAAOsH,YACzF,wBAAOC,QAAS/lB,IAAMmgB,EAAMI,a,OCbxC,SAASyF,GAAmB7F,GAExB,IAAMC,EAAUD,EAAMC,SAAY,aAElC,OACI,uBAAKC,UAAW9gB,EAAa,aAAc,iBAAkB4gB,EAAM3Y,SAAU,eAAgB,MACxF4Y,QAASA,EADd,UAEKD,EAAMG,KAAMH,EAAMG,KAAO,0BACzBH,EAAMI,YA0BJ0F,OArBf,SAAsB9F,GAGlB,IAAMvK,EAAUuK,EAAMI,SAAShN,QAAO,SAACtN,GAAD,OAAOA,EAAE2N,OAASoS,MAClDhkB,EAAS4T,EAAQrR,KAAI,SAACmc,GAAD,OAAQA,EAAEP,MAAMzL,SAErClN,EAAWxF,EAAO2e,WAAU,SAACte,GAAD,OAAQA,IAAM8d,EAAM3Y,YAChDoZ,EAAWT,EAAMS,UAAa,aAEpC,OACI,sBAAKP,UAAU,wBAAwBY,MAAOd,EAAMc,MAApD,SACKrL,EAAQrR,KAAI,SAACmc,EAAGjc,GACb,OAAOyc,uBAAaR,EAAG,CAACzZ,IAAKxC,EAAG+C,SAAW/C,IAAM+C,EACzB4Y,QAAS,WAAQQ,EAAS5e,EAAOyC,aCJnEyhB,GAAe,CAAC,OAAQ,OAAQ,UAAW,SAyElCC,OAvEf,SAAuBhG,GAEnB,MAA4BrgB,mBAAS,CACjCsmB,aAAc,GACdC,oBAAqB,KACrBC,cAAe,KAHnB,mBAAQvf,EAAR,KAAewf,EAAf,KAMMrC,EAASvF,KACTrC,EAAS4H,EAAO5H,OA6CtB,OA3CAnM,QAAQC,IAAI,4BA2CJ,gBAAC,GAAD,CAAmBH,KAAMkQ,EAAMlQ,KAAMgR,MAAM,YAA3C,UACJ,uBAAKZ,UAAU,mBAAf,UACI,eAAC,GAAD,CAAQ+E,UAAWc,GAAazmB,KAAK,KAAMmhB,SA1CnD,SAAmB3F,GAEfiJ,EAAOsC,KAAKvL,GAAG,SAAC8C,GAEZ,IAAI0I,EAAM,GACNC,GAAM,EACVlnB,IAAE+E,IAAIwZ,GAAS,SAAC1b,EAAGnC,GACL,IAANmC,IACAokB,GAAO,sBAAwBvmB,EAAI,KAAOmC,EAAI,KAC9CqkB,GAAM,MAGF,KAARD,IACAA,EAAM,kCAGVF,EAAS,2BACFxf,GADC,IAEJqf,aAAcK,EACdJ,oBAAqBK,EAAK,QAAU,iBAuBwBxB,QAAQ,EAAMI,UAAU,IACxF,eAAC,GAAD,CAAYO,QAAS,SAACxjB,GAAQ6hB,EAAO1G,UAAYnb,GAAKyjB,QAAS5B,EAAO1G,UAAtE,uCACA,eAAC,GAAD,CAAYqI,QAAS,SAACxjB,GAAQ6hB,EAAOxG,eAAiBrb,GAAKyjB,QAAS5B,EAAOxG,eAA3E,6CAEJ,0CACA,eAAC,GAAD,CAAclW,SAAUT,EAAMuf,cAAe1F,SAAU,SAACve,GAAQkkB,EAAS,2BAAIxf,GAAL,IAAYuf,cAAejkB,MAAnG,SACKia,EAAO/X,KAxBhB,SAAyB4X,EAAG1X,GAExB,IAAIkiB,EAQJ,OANIA,EADAxK,IAAM+H,EAAO0C,iBACA,eAAC,KAAD,CAAWjB,KAAM,KAGjB,eAAC,KAAD,CAAuBA,KAAM,GAAIvF,QAAS,WAAQ8D,EAAOhG,QAAQ/B,MAG1E,gBAAC6J,GAAD,CAA4BtR,MAAOyH,EAAGmE,KAAMqG,EAA5C,UACHxK,EACD,eAAC,KAAD,CAAiB4E,MAAO,CAACxX,MAAO,sBAAuBoc,KAAM,GAAIvF,QAAS,WAAQ8D,EAAO2C,OAAO1K,QAFnE1X,QAgBjC,uBAAM4b,UAAU,UAChB,eAAC,GAAD,CAAOoF,OAAQ1e,EAAMsf,oBAAqBX,QAAS,WAAOa,EAAS,2BAAIxf,GAAL,IAAYsf,oBAAqB,OAAnG,SACKtf,EAAMqf,mB,cCrFJU,OATf,SAAkB3G,GACd,OACA,sBAAKE,UAAU,aAAf,SACI,mDAAYF,GAAZ,IAAmBE,UAAU,uBAA7B,SACKF,EAAMI,e,OCAnB,SAASwG,GAAc5G,GAEnB,IAAM6G,EAAMpnB,EAAM,eAElB,OAAQ,wBAAMygB,UAAU,sBAAsBY,MAAOd,EAAMc,MAAnD,UACJ,wBAAOjhB,GAAIgnB,EAAKvlB,KAAM0e,EAAM1e,KAAMmS,KAAK,QAAQkS,QAAS3F,EAAM2F,QAAST,SAAUlF,EAAMkF,WACvF,wBAAOU,QAASiB,IAAc7G,EAAMI,YAI5C,SAAS0G,GAAa9G,GAGlB,IAAM+G,EAAU1nB,IAAE+T,OAAO4M,EAAMI,UAAU,SAACta,GAAD,OAAOA,EAAE2N,OAASmT,MAIrDvf,EAHS0f,EAAQ3iB,KAAI,SAAC2B,GAAD,OAAOA,EAAEia,MAAMzL,SAGlBiM,WAAU,SAACte,GAAD,OAAOA,IAAM8d,EAAM3Y,YAC/C6d,EAAWlF,EAAMS,SAAUT,EAAMS,SAAY,aAE/CG,EAAQ,GAKZ,OAJIZ,EAAM5W,QACNwX,EAAM,iBAAmBZ,EAAM5W,OAG5B,wBAAM8W,UAAU,2BAA2BU,MAAOA,EAAOE,MAAOd,EAAMc,MAAtE,UACFd,EAAMrT,MAAO,uBAAMuT,UAAU,sBAAsBU,MAAOZ,EAAMgH,WAAnD,SAAgEhH,EAAMrT,QAAgB,KACnGoa,EAAQ3iB,KAAI,SAAC2B,EAAGzB,GACb,OAAOyc,uBAAahb,EAAG,CAACe,IAAKxC,EACzBU,MAAOV,EACPqhB,QAAUrhB,IAAM+C,EAChB/F,KAAM0e,EAAM1e,KACZ4jB,SAAU,SAACjgB,GAAQigB,EAASnf,EAAEia,MAAMzL,gBAOrCqS,U,MCOAK,OA/Cf,SAAgBjH,GAEZ,MAAkCrgB,oBAAS,GAA3C,mBAAOunB,EAAP,KAAkBC,EAAlB,KACMtnB,EAAKJ,EAAM,QAEb2T,EAAS,KACT4M,EAAM5M,SACNA,EAAS,IAAI9P,OAAO0c,EAAM5M,SAG9B,IAAIwN,EAAQ,GACRZ,EAAM5W,QACNwX,EAAM,mBAAqBZ,EAAM5W,OAGrC,IAAMge,EAAcpH,EAAMqH,WAAaH,EAqBvC,OACA,wBAAMhH,UAAU,UAAUU,MAAOA,EAAOE,MAAOd,EAAMc,MAArD,UACKd,EAAMI,SAAU,wBAAOwF,QAAS/lB,EAAIqgB,UAAU,eAA9B,SAA8CF,EAAMI,WAAoB,+BACzF,wBAAO3M,KAAK,OAAO5T,GAAIA,EAAIqgB,UAAW9gB,EAAa,0BAA2BgoB,EAAY,iBAAmB,IACzG5B,KAAMxF,EAAMwF,KAAMjR,MAAOyL,EAAMzL,MAC/B2Q,SAxBR,SAAkBjgB,GACd,IAAI/C,EAAI+C,EAAEoZ,OAAO9J,MACjB,GAAInB,EAAQ,CACR,IAAI4I,EAAI5I,EAAOkU,KAAKplB,GACpBA,EAAI8Z,EAAGA,EAAE,GAAKgE,EAAMzL,MAExB4S,GAAa,GACVnH,EAAMkF,UACLlF,EAAMkF,SAAShjB,IAgBKqlB,UAb5B,SAAmBtiB,GACD,UAAVA,EAAE6B,MACEsgB,GACApH,EAAMqH,SAASrH,EAAMzL,OACzB4S,GAAa,KAUbxG,SAAUX,EAAMW,eCA5B,SAAS6G,GAAmBxH,GAGxB,MAA4BrgB,mBAAS,GAArC,mBAAQiH,EAAR,KAAewf,EAAf,KAEMqB,EAAS5Q,KACTxP,EAAWogB,EAAOpgB,SAClBgB,EAxBV,SAAuBjB,GACnB,GAAW,MAAPA,GAAoC,IAArBA,EAAIkB,MAAM7F,OACzB,OAAO,KAGX,IAAI6F,EAAQlB,EAAIkB,MACZD,EAAKC,EAAM,GAAGC,QAElB,OAAID,EAAMgX,MAAM,GAAGtd,QAAO,SAACC,EAAGwD,GAAJ,OAAWxD,GAAKwD,EAAE8C,UAAYF,KAAK,GAClDA,EAGA,KAYAqf,CAAcrgB,GAErBsgB,EAAS,KACTC,EAAU,KACVC,EAAa,GACbC,EAAgB,EAEpB,GAAIzf,EAAI,CAEJsf,EAAStgB,EAASiB,MAAM,GAAGqM,YAI3BmT,GAHAF,EAAUvgB,EAASiB,MAAMlE,KAAI,SAACqB,GAAD,OAAOA,EAAE2Z,YAGd,GAAG7c,WACtBqlB,EAAQ5lB,QAAO,SAACC,EAAGoC,GAAJ,OAAUpC,GAAKoC,IAAMujB,EAAQ,MAAI,KAGjDC,EAAa,CAAC,eAAC9H,GAAD,CAA+BxL,MAAOqT,EAAtC,SACTvoB,IAAEC,KAAKD,IAAE8Y,KAAKyP,MADuB,IAG1CE,EAAgBF,GAIpB,IAAIhT,EAAO7G,OAAO6G,KAAK+S,EAAO9S,UAAUC,OACxC+S,EAAaA,EAAWxR,OAAOzB,EAAKxQ,KAAI,SAAC2Q,EAAGzQ,GAAJ,OAAW,eAACyb,GAAD,CAA8BxL,MAAOQ,EAArC,SAC1CA,GADqEzQ,YAM9EujB,EAAa,CAAC,eAAC9H,GAAD,CAA8BxL,MAAO,EAArC,gBAA2B,IAI7C,OAAQ,uCACJ,oDACA,eAAC,GAAD,CAAgBoM,UAAWtY,EAAIoY,SAAU,SAAC1L,GAAQ0S,EAAOM,WAAWhT,GAAIqR,GAAUxf,IAAWS,SAAUygB,EAAvG,SAAuHD,OA0EhHG,OArEf,SAAyBhI,GAErB,IAAMyH,EAAS5Q,KAQf,SAASoR,EAAK/lB,GACVulB,EAAO9R,iBAAmBzT,EAG9B,SAASgmB,EAAKhmB,GACVulB,EAAO7R,eAAiB1T,EAX5B8N,QAAQC,IAAI,8BAcZ,IAAMkY,EAASC,mBASf,OARAD,EAAOE,QAAUZ,EAEjB/G,qBAAU,WACN1Q,QAAQC,IAAI,yBACCkY,EAAOE,QACbxS,YAAcmK,EAAMlQ,OAC5B,CAACkQ,EAAMlQ,KAAM2X,EAAOhnB,MAEf,gBAAC,GAAD,CAAmBqP,KAAMkQ,EAAMlQ,KAAMgR,MAAM,qBAA3C,UACJ,uBAAKZ,UAAU,mBAAf,UACI,eAAC,GAAD,CAAYyF,QAAS8B,EAAOa,gBAAiB5C,QAAS,SAACxjB,GAAQulB,EAAOa,gBAAkBpmB,GAAxF,0CACA,eAAC,GAAD,CAAYyjB,QAAS8B,EAAOnT,kBAAmBoR,QAAS,SAACxjB,GAAQulB,EAAOnT,kBAAoBpS,GAA5F,gCACA,eAAC,GAAD,CAAYyjB,QAAS8B,EAAOc,SAAU7C,QAAS,SAACxjB,GAAQulB,EAAOc,SAAWrmB,GAA1E,4BACA,uBAAMge,UAAU,UAChB,gBAAC4G,GAAD,CAAcna,MAAM,iBAAiB8T,SA3B7C,SAAoBve,GAChBulB,EAAOhT,cAAgBvS,GA0BwCmF,SAAUogB,EAAOhT,cAAenT,KAAK,mBAAhG,UACI,eAAC,GAAD,CAAeiT,MAAM,OAArB,kBACA,eAAC,GAAD,CAAeA,MAAM,UAArB,qBACA,gBAAC,GAAD,CAAeA,MAAM,SAArB,iCACI,eAAC,GAAD,CAAQiR,KAAK,IAAIjR,MAAOkT,EAAO9R,iBAAkBvC,OAAO,uBAAsB8R,SAAU+C,EAAMZ,SAAUY,IAD5G,kBAGA,eAAC,GAAD,CAAe1T,MAAM,WAArB,sBACA,gBAAC,GAAD,CAAeA,MAAM,QAArB,uCACI,eAAC,GAAD,CAAQiR,KAAK,IAAIjR,MAAQkT,EAAO7R,eAAiBxC,OAAO,SAAS8R,SAAUgD,EAAMb,SAAUa,aAIvG,uBAAMhI,UAAU,UAChB,sBAAKA,UAAU,mBAAf,SACI,uBAAKA,UAAU,kBAAf,UACI,eAAC,GAAD,CAAUD,QAAS,WAAQwH,EAAOpgB,SAAWogB,EAAOngB,WAApD,4BACA,eAAC,GAAD,CAAU2Y,QAAS,WAAQwH,EAAOpgB,SAAW,MAA7C,yBACA,eAAC,GAAD,CAAU4Y,QAAS,WAAQwH,EAAOngB,UAAYmgB,EAAOpgB,UAArD,8BACA,eAAC,GAAD,CAAU4Y,QAAS,WAAQwH,EAAOngB,UAAY,MAA9C,kCAGR,uBAAM4Y,UAAU,UAChB,sBAAKA,UAAU,mBAAf,SACI,eAACsH,GAAD,MAEJ,uBAAKtH,UAAU,mBAAf,UACI,sDACA,gCACI,gCAAI,wCAAJ,qCACA,gCAAI,8CAAJ,sCACA,gCAAI,6CAAJ,kE,cC/FDsI,OAzDf,SAAiBxI,GAGb,IAAMpa,EAAM,QAASoa,EAAOA,EAAMpa,IAAM,EAClCC,EAAM,QAASma,EAAOA,EAAMna,IAAM,IAClC4iB,EAAO,SAAUzI,EAAOA,EAAMyI,KAAO,EAE3C,SAASC,EAASxmB,GAKd,OAJAA,EAAIymB,WAAWzmB,GACfA,EAAIsC,KAAKoB,IAAI1D,EAAG2D,GAChB3D,EAAIsC,KAAKqB,IAAI3D,EAAG0D,GAChB1D,EAAIsC,KAAKokB,MAAM1mB,EAAEumB,GAAMA,EAI3B,IAAMI,EAAyB,MAAf7I,EAAMzL,MAAemU,EAAS1I,EAAMzL,OAAS3O,EACvD/F,EAAKJ,EAAM,SAEjB,EAAwBE,mBAASkpB,EAAOtmB,YAAxC,mBAAOumB,EAAP,KAAaC,EAAb,KAGInI,EAAQ,GAMZ,SAASoI,EAAY9mB,GACjBA,EAAIwmB,EAASxmB,GAET8d,EAAMkF,UACNlF,EAAMkF,SAAShjB,GATnB8d,EAAM5W,QACNwX,EAAM,mBAAqBZ,EAAM5W,MACjCwX,EAAM,iBAAmBZ,EAAM5W,OAUnC,IAAI6f,EAAWb,mBAYf,OAXAa,EAASZ,QAAU,CAACS,EAAMC,GAG1BrI,qBAAU,WACN,kBAAwBuI,EAASZ,QAAjC,GAAOS,EAAP,KAAaC,EAAb,KAEIJ,WAAWG,KAAUD,GACrBE,EAAQF,EAAOtmB,cACpB,CAACsmB,IAIA,uBAAK3I,UAAU,aAAf,UACKF,EAAMI,SAAU,wBAAOwF,QAAS/lB,EAAIqgB,UAAU,gBAA9B,SAA+CF,EAAMI,WAAoB,+BAC1F,wBAAMF,UAAU,sBAAsBU,MAAOA,EAA7C,UACI,wBAAOV,UAAU,kBAAkBzM,KAAK,QAAQ5T,GAAIA,EAAIqpB,QAAS,SAACjkB,GAAQ+jB,EAAY/jB,EAAEoZ,OAAO9J,QAC9F3O,IAAKA,EAAKC,IAAKA,EAAK4iB,KAAMA,EAAMlU,MAAOsU,EAAQlI,SAAUX,EAAMW,WAChE,eAAC,GAAD,CAAQ6E,KAAM,EAAGpS,OAAQjQ,EAAmBE,MAAOkR,MAAOuU,EAAM5D,SAAU6D,EAAS1B,SAAU2B,EAAarI,SAAUX,EAAMW,kB,0BCjD1I,SAASwI,GAAaviB,GAAmB,IAAZoC,EAAW,uDAAJ,GAChC,OAAOA,EAAOyK,MACV,IAAK,YACD7M,EAAK,2BACEA,GADF,IAEDwiB,SAAS,EACTC,GAAIrgB,EAAOqgB,GACXC,GAAItgB,EAAOsgB,KAEf,MACJ,IAAK,OACD1iB,EAAK,2BACEA,GADF,IAED2iB,GAAIvgB,EAAOugB,GAAG3iB,EAAMyiB,GACpBG,GAAIxgB,EAAOwgB,GAAG5iB,EAAM0iB,KAExB,MACJ,IAAK,UACD1iB,EAAK,2BACEA,GADF,IAEDwiB,SAAS,EACTC,GAAI,KACJC,GAAI,OAOhB,OAAO1iB,EAmFI6iB,OAhFf,SAAiBzJ,GAEb,MAA0B0J,qBAAWP,GAAc,CAC/CI,GAAI,EACJC,GAAI,EACJH,GAAI,KACJC,GAAI,KACJF,SAAS,IALb,mBAAOxiB,EAAP,KAAc4M,EAAd,KAQMmW,EAAW3J,EAAM2J,UAAa,aAC9BpE,EAAUvF,EAAMuF,SAAY,aAalC7E,qBAAU,WAEF9Z,EAAMwiB,SACNrmB,SAAS6mB,YAAc,SAAC3kB,GACpBuO,EAAS,CACLC,KAAM,OACN8V,GAAItkB,EAAE4kB,QACNL,GAAIvkB,EAAE6kB,WAId/mB,SAASgnB,UAAY,SAAC9kB,GAClBuO,EAAS,CACLC,KAAM,eAKd1Q,SAAS6mB,YAAc,KACvB7mB,SAASgnB,UAAY,QAG1B,CAACnjB,EAAMwiB,UAEV,IAAMY,EAAa,CACf3H,UAAW,aAAezb,EAAM2iB,GAAK,OAAS3iB,EAAM4iB,GAAK,OAGvDS,EAAajK,EAAMiK,WAErBC,EAAS,uBAAKhK,UAAW9gB,EAAa,sBAAuB4gB,EAAMmK,UAAW,qBAAuB,GAC/DnK,EAAMoK,UAAW,qBAAuB,IAAKxJ,MAAOoJ,EADjF,UAET,uBAAK9J,UAAU,iBAAiBmK,YA3CpC,SAA0BplB,GAElB+a,EAAMmK,WAA0B,IAAbllB,EAAEqlB,QACrB9W,EAAS,CACLC,KAAM,YACN4V,GAAIpkB,EAAE4kB,QAAQjjB,EAAM2iB,GACpBD,GAAIrkB,EAAE6kB,QAAQljB,EAAM4iB,MAqC5B,UACKxJ,EAAMc,MACP,eAAC,KAAYyJ,SAAb,CAAsBhW,MAAO,CAACnL,MAAO,sBAArC,SACI,eAAC,KAAD,CAASoc,KAAM,GAAIvF,QAASsF,SAGpC,sBAAKrF,UAAU,mBAAf,SACKF,EAAMI,WAEX,uBAAKF,UAAU,kBAAf,UACI,eAAC,GAAD,CAAUD,QAAS0J,EAAnB,gBACA,eAAC,GAAD,CAAU1J,QAASsF,EAAnB,0BAUR,OANI0E,IACAC,EAAS,sBAAKhK,UAAW9gB,EAAa,8BAA+B4gB,EAAMjC,QAAS,GAAK,mBAAhF,SACJmM,KAIFA,GC1FX,SAASM,GAAiBxK,GAEtB,IAAMyK,EAAQnS,KACd,EAAkC3Y,mBAAS8qB,EAAMC,gBAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KAOMC,EAASzC,mBACfyC,EAAOxC,QAAUoC,EAEjB/J,qBAAU,WACNkK,EAAYC,EAAOxC,QAAQqC,kBAC5B,CAAC1K,EAAMjC,UAEV,IAAM5R,EAAW9M,IAAEuV,KAAK+V,GAAU7V,OAMlC,OACA,eAAC,GAAD,CAASgM,MAAM,mDAAmD/C,QAASiC,EAAMjC,QAASkM,YAAY,EAC7F1E,QAASvF,EAAM8K,MAAOnB,SAAU,WAAQc,EAAMM,qBAAqBJ,GAAW3K,EAAM8K,SAD7F,SAEI,sBAAK5K,UAAU,iBAAf,SACK/T,EAAS/H,KAAI,SAACiE,EAAI/D,GACf,IAAM8d,EAAMuI,EAAStiB,GAErB,OAAQ,uBAAa6X,UAAU,qBAAvB,UACI,sBAAKA,UAAU,oBAAf,SAAoC7X,IACpC,sBAAK6X,UAAU,qBAAf,SACI,eAAC,GAAD,CAAQ3L,MAAO6N,EAAK8C,SAAU,SAAChjB,GAAQ0oB,EAAY,2BAAID,GAAL,kBAAgBtiB,EAAKnG,MAAOsjB,KAAM,MAExF,sBAAKtF,UAAU,sBAAf,SACI,eAAC,GAAD,CAAUD,QAAS,WAjB/C,IAAiB/d,IAiB8CkgB,EAhB3DwI,EAAYvrB,IAAEyO,UAAU3B,EAAS/H,KAAI,SAACiE,GAAD,MAAQ,CAACA,EAAInG,SAgB1B,8BANEoC,UAyDnB0mB,OA1Cf,SAAqBhL,GAEjB,MAA4BrgB,mBAAS,CACjCsrB,cAAc,IADlB,mBAAQrkB,EAAR,KAAewf,EAAf,KAIMqE,EAAQnS,KAEdtI,QAAQC,IAAI,0BAEZ,IAAIib,GAAS,EAKb,OAJIlL,EAAMlQ,OACNob,EAAST,EAAMU,SAGX,gBAAC,GAAD,CAAmBrb,KAAMkQ,EAAMlQ,KAAMgR,MAAM,qBAA3C,UACJ,uBAAKZ,UAAW9gB,EAAa,mBAAoB8rB,EAAQ,GAAK,UAA9D,UACK,eAAC,GAAD,CAAYxF,QAAS,SAACxjB,GAAQuoB,EAAMW,cAAgBlpB,GAAMyjB,QAAS8E,EAAMW,cAAzE,wBACA,eAAC,GAAD,CAASxlB,IAAK,IAAMC,IAAK,GAAK4iB,KAAM,KAAOlU,MAAOkW,EAAMY,eAC/CnG,SAAU,SAACjjB,GAAQwoB,EAAMY,eAAiBppB,GAAM0e,UAAW8J,EAAMW,cAD1E,6BAEA,eAAC,GAAD,CAAUnL,QAAS,WAAQwK,EAAMY,eAAiB,GAAM1K,UAAW8J,EAAMW,cAAzE,4BACA,gBAACtE,GAAD,CAAcna,MAAM,cAAc8T,SAAU,SAACve,GAAQuoB,EAAMa,WAAappB,GAAMmF,SAAUojB,EAAMa,WAAYhqB,KAAK,iBAA/G,UACG,eAAC,GAAD,CAAeiT,MAAM,OAArB,kBACA,eAAC,GAAD,CAAeA,MAAM,MAArB,4BACA,eAAC,GAAD,CAAeA,MAAM,KAArB,oDACA,eAAC,GAAD,CAAeA,MAAM,QAArB,8BACA,eAAC,GAAD,CAAeA,MAAM,QAArB,0BAEH,gBAACuS,GAAD,CAAcna,MAAM,kBAAkB8T,SAAU,SAACve,GAAQuoB,EAAMtT,eAAiBjV,GAAMmF,SAAUojB,EAAMtT,eAAgBwJ,UAAW8J,EAAMc,oBAAqBjqB,KAAK,kBAAjK,UACG,eAAC,GAAD,CAAeiT,MAAM,OAArB,kBACA,eAAC,GAAD,CAAeA,MAAM,SAArB,sBACA,eAAC,GAAD,CAAeA,MAAM,QAArB,+CACA,eAAC,GAAD,CAAeA,MAAM,WAArB,wBACA,eAAC,GAAD,CAAeA,MAAM,WAArB,0BAEH,eAAC,GAAD,CAAU0L,QAAS,WAAQmG,EAAS,2BAAIxf,GAAL,IAAYqkB,cAAc,MAA7D,4BACA,eAACT,GAAD,CAAkBzM,QAASnX,EAAMqkB,aAAcH,MAAO,WAAQ1E,EAAS,2BAAIxf,GAAL,IAAYqkB,cAAc,WAErG,sBAAK/K,UAAW9gB,EAAa,kBAAmB8rB,EAAQ,SAAU,IAAlE,kC,OCnDOM,OAnCf,SAAsBxL,GAElB,IAAMyL,EAAS3S,KAEf9I,QAAQC,IAAI,2BAEZ,IAAIyb,GAAU,EAKd,OAJI1L,EAAMlQ,OACN4b,EAAUD,EAAON,SAGb,gBAAC,GAAD,CAAmBrb,KAAMkQ,EAAMlQ,KAAMgR,MAAM,0BAA3C,UACJ,uBAAKZ,UAAW9gB,EAAa,mBAAoBssB,EAAS,GAAK,UAA/D,UACK,eAAC,GAAD,CAAYhG,QAAS,SAACxjB,GAAQupB,EAAOL,cAAgBlpB,GAAMyjB,QAAU8F,EAAOL,cAAgBhiB,MAAO,qBAAnG,wBACA,eAAC,GAAD,CAASxD,IAAK,GAAKC,IAAK,GAAM4iB,KAAM,IAAMlU,MAAOkX,EAAOJ,eAAgBjiB,MAAO,qBACtE8b,SAAU,SAACjjB,GAAQwpB,EAAOJ,eAAiBppB,GAAM0e,UAAW8K,EAAOL,cAD5E,6BAEA,eAAC,GAAD,CAAUnL,QAAS,WAAQwL,EAAOJ,eAAiB,GAAM1K,UAAW8K,EAAOL,cAA3E,4BACA,gBAACtE,GAAD,CAAcna,MAAM,cAAc8T,SAAU,SAACve,GAAQupB,EAAOH,WAAappB,GAAMmF,SAAUokB,EAAOH,WAAYhqB,KAAK,kBAAkB8H,MAAO,qBAA1I,UACG,eAAC,GAAD,CAAemL,MAAM,OAArB,kBACA,eAAC,GAAD,CAAeA,MAAM,QAArB,6BACA,eAAC,GAAD,CAAeA,MAAM,QAArB,uBACA,eAAC,GAAD,CAAeA,MAAM,IAArB,0CAEH,gBAACuS,GAAD,CAAcna,MAAM,kBAAkB8T,SAAU,SAACve,GAAQupB,EAAOtU,eAAiBjV,GAAMmF,SAAWokB,EAAOtU,eAAiBwJ,UAAW8K,EAAOF,oBAC9HjqB,KAAK,mBAAmB8H,MAAO,qBAD7C,UAEG,eAAC,GAAD,CAAemL,MAAM,OAArB,kBACA,eAAC,GAAD,CAAeA,MAAM,YAArB,wBACA,eAAC,GAAD,CAAeA,MAAM,YAArB,uBACA,eAAC,GAAD,CAAeA,MAAM,QAArB,uCAGR,sBAAK2L,UAAW9gB,EAAa,kBAAmBssB,EAAS,SAAW,IAApE,mC,OCMOC,OAvCf,SAAsB3L,GAElB,IAAM4L,EAASpS,KAEfxJ,QAAQC,IAAI,2BAEZ,IAAM4a,EAASzC,mBAgBf,OAfAyC,EAAOxC,QAAUuD,EAEjBlL,qBAAU,WACN,IAAIkL,EAASf,EAAOxC,QAGhBrI,EAAMlQ,MAAQ8b,EAAOC,KACrBD,EAAOhrB,OAGPgrB,EAAOE,WAGZ,CAAC9L,EAAMlQ,KAAM8b,EAAOC,OAEf,gBAAC,GAAD,CAAmB/b,KAAMkQ,EAAMlQ,KAAMgR,MAAM,oBAA3C,UACJ,sBAAKZ,UAAU,mBAAf,SACI,eAAC,GAAD,CAAY9W,MAAM,qBAAqBsc,QAAS,SAACxjB,GAAQ0pB,EAAOC,KAAO3pB,GAAMyjB,QAAUiG,EAAOC,KAA9F,sCAEJ,uBAAK3L,UAAU,mBAAf,UACI,uMAIC,eAAC,GAAD,CAASta,IAAK,EAAKC,IAAK,GAAM4iB,KAAM,IAAMlU,MAAOqX,EAAO1gB,OAAQ9B,MAAO,qBAC9D8b,SAAU,SAACjjB,GAAQ2pB,EAAO1gB,OAASjJ,GAD5C,8BAEA,eAAC,GAAD,CAAYmH,MAAM,qBAAqBsc,QAAS,SAACxjB,GAAQ0pB,EAAOG,WAAa7pB,GAAMyjB,QAAUiG,EAAOG,WAApG,qCACA,eAAC,GAAD,CAAY3iB,MAAM,qBAAqBsc,QAAS,SAACxjB,GAAQ0pB,EAAOI,gBAAkB9pB,GAAMyjB,QAAUiG,EAAOI,gBAAzG,oD,OCcEC,OA/Cf,SAAwBjM,GAEpB,IAAMkM,EAAQhS,KAEdlK,QAAQC,IAAI,6BAEZ,IAAM4a,EAASzC,mBACfyC,EAAOxC,QAAU6D,EAEjBxL,qBAAU,WACN,IAAIwL,EAAQrB,EAAOxC,QAGfrI,EAAMlQ,MAAQoc,EAAML,KACpBK,EAAMtrB,OAGNsrB,EAAMJ,WAGX,CAAC9L,EAAMlQ,KAAMoc,EAAML,OAEtB,IAAIM,GAAS,EAKb,OAJInM,EAAMlQ,OACNqc,EAASD,EAAMf,SAGX,gBAAC,GAAD,CAAmBrb,KAAMkQ,EAAMlQ,KAAMgR,MAAM,cAA3C,UACJ,uBAAKZ,UAAWiM,EAAQ,GAAK,SAA7B,UACI,sBAAKjM,UAAU,mBAAf,SACI,eAAC,GAAD,CAAY9W,MAAM,uBAAuBsc,QAAS,SAACxjB,GAAQgqB,EAAML,KAAO3pB,GAAMyjB,QAAUuG,EAAML,KAA9F,gCAEJ,uBAAK3L,UAAU,mBAAf,UACI,uMAIC,eAAC,GAAD,CAASta,IAAK,EAAKC,IAAK,GAAM4iB,KAAM,IAAMlU,MAAO2X,EAAMhhB,OAAQ9B,MAAO,uBAC7D8b,SAAU,SAACjjB,GAAQiqB,EAAMhhB,OAASjJ,GAD3C,8BAEA,eAAC,GAAD,CAAYmH,MAAM,uBAAuBsc,QAAS,SAACxjB,GAAQgqB,EAAMH,WAAa7pB,GAAMyjB,QAAUuG,EAAMH,WAApG,qCACA,eAAC,GAAD,CAAY3iB,MAAM,uBAAuBsc,QAAS,SAACxjB,GAAQgqB,EAAMF,gBAAkB9pB,GAAMyjB,QAAUuG,EAAMF,gBAAzG,mDAGR,sBAAK9L,UAAW9gB,EAAa,kBAAmB+sB,EAAQ,SAAU,IAAlE,mC,cCnDMC,OAff,SAAkBpM,GAEd,IAAMY,EAAQ,CACV,eAAgBZ,EAAMqM,WAAa,oBACnC,gBAAiBrM,EAAMsM,YAAc,sBAGnCrM,EAAUD,EAAMC,SAAY,aAElC,OAAQ,sBAAKC,UAAW9gB,EAAa,uBAAwB4gB,EAAMrW,GAAI,iBAAmB,mBACtFiX,MAAOA,EAAOX,QAASA,EADnB,SAEJ,sBAAKC,UAAU,uBC6HRqM,OAhHf,SAAwBvM,GAEpB,IAAMwM,EAAS1Q,KAEf9L,QAAQC,IAAI,6BAEZ,IAAM4a,EAASzC,mBACfyC,EAAOxC,QAAUmE,EAEjB9L,qBAAU,WACN,IAAI8L,EAAS3B,EAAOxC,QAGhBrI,EAAMlQ,KACN0c,EAAO5rB,OAGP4rB,EAAOV,WAGZ,CAAC9L,EAAMlQ,OAEV,IAAM2c,EAAc,CAChB3kB,GAAI,MACJC,IAAK,MAILtC,EAAI+mB,EAAOhpB,MACXuC,EAAIymB,EAAOlR,KACXxV,EAAI0mB,EAAOzoB,MAEL,QAAN0B,IAEAA,EAAIA,EAAEnD,QAAQ,GACdyD,EAAIA,EAAEzD,QAAQ,GACdwD,EAAIA,EAAExD,QAAQ,IAGlB,IAAMoqB,EAAUF,EAAOG,OAASH,EAAOI,MAEvC,OAAQ,gBAAC,GAAD,CAAmB9c,KAAMkQ,EAAMlQ,KAAMgR,MAAM,eAA3C,UACJ,+NAKA,uBAAKZ,UAAU,mBAAf,UACI,yCACA,uBAAKA,UAAU,iBAAf,UACI,uBAAMA,UAAU,SAAhB,oBACA,gCAAOsM,EAAOtR,aACd,uBAAKgF,UAAU,wBAAf,UACI,uCACA,eAAC,GAAD,CAAUvW,GAAwB,QAAnB6iB,EAAOvR,QAAoBgF,QAAS,WAAQuM,EAAOvR,QAAUwR,EAAYD,EAAOvR,UACrFqR,WAAW,oBAAoBD,UAAU,uBACnD,iDAIZ,uBAAKnM,UAAU,mBAAf,UACI,yCACA,uBAAKA,UAAU,iBAAf,UACI,uBAAMA,UAAU,SAAhB,oBACA,gCAAOsM,EAAOpR,aACd,uBAAK8E,UAAU,wBAAf,UACI,uCACA,eAAC,GAAD,CAAUvW,GAAwB,QAAnB6iB,EAAOrR,QAAoB8E,QAAS,WAAQuM,EAAOrR,QAAUsR,EAAYD,EAAOrR,UACrFmR,WAAW,oBAAoBD,UAAU,uBACnD,iDAIZ,uBAAKnM,UAAU,mBAAf,UACI,6CACA,gBAAC,GAAD,CAAgB7Y,SAAUmlB,EAAO9mB,WAAY+a,SAAU,SAACve,GAAQsqB,EAAO9mB,WAAaxD,GAApF,UACI,eAAC6d,GAAD,CAAsBxL,MAAM,MAA5B,iBACA,eAACwL,GAAD,CAAsBxL,MAAM,MAA5B,uBAGR,uBAAK2L,UAAU,mBAAf,UACI,yCACA,yBAAOA,UAAU,iBAAjB,UACI,iCACI,gCACI,wCACA,uCACA,6CAGR,iCACI,gCACI,gCAAKza,EAAL,UACA,gCAAKM,EAAL,UACA,gCAAKD,EAAL,qBAKhB,uBAAMoa,UAAU,UAChB,sBAAKA,UAAU,mBAAf,SACI,gBAAC,GAAD,CAAUD,QAAS,WtDqG/B,IAAsBrd,IsDrG8B4pB,EAAOK,YtDsGvDC,UAAUC,UAAUC,UAAUpqB,IsDtG0C+d,UAAW+L,EAA3E,UAAmF,eAAC,KAAD,IAAnF,6BAEJ,sBAAKxM,UAAU,mBAAf,SACI,eAAC,GAAD,CAAUD,QAAS,WAAQtd,EAAa,SAAW6pB,EAAOS,oBAAqB,mBAAuBtM,WAAY6L,EAAO9Q,WAAa8Q,EAAO7Q,YAA7I,sD,OCtFGuR,OAlBf,SAAwBlN,GAEpB,IAAMmN,EAAU1N,KAEhB,OAAQ,eAAC,GAAD,CAAmBqB,MAAM,eAAehR,KAAMkQ,EAAMlQ,KAApD,SACJ,uBAAKoQ,UAAU,mBAAf,UACI,6CACA,gBAAC,GAAD,CAAgB7Y,SAAU8lB,EAAQC,SAAU3M,SAAU,SAACve,GAAQirB,EAAQC,SAAWlrB,GAAlF,UACI,eAAC6d,GAAD,CAAsBxL,MAAM,KAAK4L,KAAM,eAAC,GAAD,CAAQA,KAAK,KAAK/W,MAAM,sBAA/D,sBACA,eAAC2W,GAAD,CAAsBxL,MAAM,MAAM4L,KAAM,eAAC,GAAD,CAAQA,KAAK,MAAM/W,MAAM,uBAAjE,uBACA,eAAC2W,GAAD,CAAsBxL,MAAM,MAAM4L,KAAM,eAAC,GAAD,CAAQA,KAAK,MAAM/W,MAAM,uBAAjE,oCACA,eAAC2W,GAAD,CAAsBxL,MAAM,MAAM4L,KAAM,eAAC,GAAD,CAAQA,KAAK,QAAQ/W,MAAM,yBAAnE,iCAEJ,eAAC,GAAD,CAAU6W,QAAS,WAfd,IAACna,EAAGunB,EAAHvnB,EAe8BqnB,EAAQG,eAfnCD,EAemDF,EAAQI,SAflD5qB,EAAa,SAAWmD,EAAGunB,IAeqC1M,UAAWwM,EAAQK,UAArG,6BCLZ,SAASC,KAEL,MAA8B9tB,oBAAS,GAAvC,mBAAO+tB,EAAP,KAAgBC,EAAhB,KAEI5J,EAASvF,KAEPoP,EAASxF,iBAAOrE,GAmCtB,OAjCArD,qBAAU,WACNkN,EAAOvF,QAAQwF,WAAW,mBAC3B,IA+BK,uBAAK3N,UAAW9gB,EAAa,eAAgB,SAAW2kB,EAAOI,MAAOuJ,EAAS,WAAa,IACvFI,YAvBb,SAAyB7oB,GACrBA,EAAE8oB,iBACF9oB,EAAE+oB,kBACFL,GAAW,IAoB4BM,YAjB3C,SAAyBhpB,GACrBA,EAAE8oB,iBACF9oB,EAAE+oB,kBACFL,GAAW,IAc0DO,WA5BzE,SAAwBjpB,GACpBA,EAAE8oB,iBACF9oB,EAAE+oB,mBA0B+FG,OAXrG,SAAoBlpB,GAChBA,EAAE8oB,iBACF9oB,EAAE+oB,kBACE/oB,EAAEmpB,aAAapR,OAAS/X,EAAEmpB,aAAapR,MAAMva,OAAS,IACtDshB,EAAOsC,KAAKphB,EAAEmpB,aAAapR,OAC3B/X,EAAEmpB,aAAaC,aAEnBV,GAAW,IAGP,UAEI,eAAC,GAAD,IACA,eAAC,GAAD,CAAe7d,KAAyB,SAAnBiU,EAAOS,UAC5B,eAAC,GAAD,CAAiB1U,KAAyB,WAAnBiU,EAAOS,UAC9B,eAAC,GAAD,CAAa1U,KAAyB,OAAnBiU,EAAOS,UAC1B,eAAC,GAAD,CAAc1U,KAAyB,QAAnBiU,EAAOS,UAC3B,eAAC,GAAD,CAAc1U,KAAyB,QAAnBiU,EAAOS,UAC3B,eAAC,GAAD,CAAgB1U,KAAyB,UAAnBiU,EAAOS,UAC7B,eAAC,GAAD,CAAgB1U,KAAyB,UAAnBiU,EAAOS,UAC7B,eAAC,GAAD,CAAgB1U,KAAyB,UAAnBiU,EAAOS,UAC7B,sBAAK3kB,GAAG,eAAeqgB,UAAU,kBACjC,eAAC,GAAD,IACA,sBAAKA,UAAU,oBAahBoO,OATf,WAEI,OACI,sBAAKpO,UAAU,cAAf,SACI,eAACuN,GAAD,OCrFGc,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUpc,MAAO6M,GAAjB,SACE,eAAC,GAAD,QAGJ5c,SAASosB,eAAe,SAM1BZ,GAAgBve,QAAQC,M","file":"static/js/main.cf51daca.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { useState } from 'react';\n\n/**\n * Chain multiple class strings into a single string, useful when passing them\n * to React components' className property\n *\n * @param {String} name1, name2...    Name of the first class, second class, etc.\n * \n * @return {String}                   Chained class names\n */\nfunction chainClasses() {\n    return _.join(_.flatten(arguments), ' ');\n}\n\n/**\n * Generate a memoized unique ID for an element\n * \n * @param  {String} prefix Prefix of the id\n * \n * @return {String}        Unique ID\n */\nfunction useId(prefix='uid') {\n    const [id] = useState(() => (_.uniqueId(prefix)));\n    return id;\n}\n\nexport { chainClasses, useId };","import _ from 'lodash';\nimport colormap from 'colormap';\nimport ColorScale from 'color-scales';\n\nimport CrystVis from 'crystvis-js';\n\n/*\n * Merges together all the outputs of multiple async processes into a single\n * argument to pass to a callback, according the outputs are in Object form.\n */\nclass CallbackMerger {\n    \n    constructor(n, callback) {\n        this._callback = callback;\n        this._n = n;\n\n        this._arg = {};\n    }\n\n    call(arg) {\n        \n        if (this._n <= 0) {\n            throw Error('CallbackMerger has completed its iterations');\n        }\n\n        _.merge(this._arg, arg);\n        this._n -= 1;\n        if (this._n === 0) {\n            this._callback(this._arg);\n        }\n    }\n}\n\n/**\n * A custom class that acts like an Enum type\n */\nclass Enum {\n\n    constructor(values={}) {\n\n        if (Array.isArray(values)) {\n            values = _.fromPairs(values.map((x, i) => [x, i]));\n        }\n\n        for (let key in values) {\n            let v = values[key];\n\n            Object.defineProperty(this, key, {\n                get: () => v\n            });\n        }\n    }\n\n}\n\n/**\n * A class to manage more conveniently click events sent to the CrystVis app.\n * It helps sorting out possible conflicts between different components trying\n * to each set their own handler.\n */\nclass ClickHandler {\n\n    constructor(app) {\n\n        app.onAtomClick(this.leftClick.bind(this), \n                        CrystVis.LEFT_CLICK);\n        app.onAtomClick(this.leftClickCtrl.bind(this), \n                        CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON);\n        app.onAtomClick(this.leftClickShift.bind(this), \n                        CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON);\n        app.onAtomClick(this.rightClick.bind(this), \n                        CrystVis.RIGHT_CLICK);\n\n        this._callbacks = {\n            [CrystVis.LEFT_CLICK]: {},\n            [CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON]: {},\n            [CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON]: {},\n            [CrystVis.RIGHT_CLICK]: {},\n        };\n    }\n\n    setCallback(name, code, cback=null) {\n\n        if (!(code in this._callbacks)) {\n            throw Error('Invalid callback code; unsupported event type');\n        }\n\n        if (!cback) {\n            delete(this._callbacks[code][name]);\n        }\n        else {\n            this._callbacks[code][name] = cback;            \n        }\n\n    }\n\n    leftClick(atom, event) {\n\n        const cbacks = this._callbacks[CrystVis.LEFT_CLICK];\n\n        for (let n in cbacks) {\n            cbacks[n](atom, event);\n        }\n\n    }\n\n    leftClickCtrl(atom, event) {\n\n        const cbacks = this._callbacks[CrystVis.LEFT_CLICK+CrystVis.CTRL_BUTTON];\n\n        for (let n in cbacks) {\n            cbacks[n](atom, event);\n        }\n\n    }\n\n    leftClickShift(atom, event) {\n\n        const cbacks = this._callbacks[CrystVis.LEFT_CLICK+CrystVis.SHIFT_BUTTON];\n\n        for (let n in cbacks) {\n            cbacks[n](atom, event);\n        }\n\n    }\n\n    rightClick(atom, event) {\n\n        const cbacks = this._callbacks[CrystVis.RIGHT_CLICK];\n\n        for (let n in cbacks) {\n            cbacks[n](atom, event);\n        }\n\n    }\n\n}\n\n\nfunction getColorScale(min=0, max=1, scale='jet', shades=10) {\n    \n    let colors = colormap({\n        colormap: scale,\n        nshades: shades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    // If min and max are equal we get an error so fix that\n    max = (max === min)? max+1e-8 : max;\n\n    let cscale = new ColorScale(min, max, colors, 1.0);\n\n    return cscale;\n}\n\n/**\n * Merge the values from an object into another, but without creating\n * new values if they were absent to begin with.\n * \n * @param  {Object} a The object to update\n * @param  {Object} b The object containing the updated values\n * \n * @return {Object}   The updated object\n */\nfunction mergeOnly(a, b) {\n\n    let c = {};\n\n    for (let k in a) {\n        c[k] = (k in b)? b[k] : a[k];\n    }\n\n    return c;\n}\n\n/**\n * Make a single row of an ASCII table with a fixed field width\n * \n * @param  {Array}  values      Values to include in the row\n * @param  {Number} width       Width of each field of the row\n * @param  {Number} precision   Digits used for numerical values\n * \n * @return {String}        Compiled row\n */\nfunction tableRow(values, width=20, precision=5) {\n    return values.reduce((s, v) => {        \n        if (Number.isFinite(v) && !Number.isInteger(v)) {\n            v = v.toFixed(precision);\n        }\n        else {\n            v = v.toString();\n        }\n        const ns = width-v.length;\n        return s + ' '.repeat(ns > 0? ns : 0) + v;\n    }, '') + '\\n';\n}\n\n/**\n * Download a file\n * \n * @param  {String} data     The data content of the file, must be a valid data URL\n * @param  {[type]} filename The name of the file to download\n */\nfunction saveContents(data, filename) {\n\n    const download = document.createElement('a');\n    download.setAttribute('download', filename);\n    download.setAttribute('href', data);\n    download.click();\n}\n\n/**\n * Download a PNG screenshot from data take from a Canvas\n * \n * @param  {String} data     Data URL retrieved with the .toDataURL() method\n * @param  {[type]} filename Filename to save\n */\nfunction saveImage(data, filename='image.png') {\n    data = data.replace('image/png', 'image/octet-stream');\n    saveContents(data, filename);\n}\n\n\n/**\n * Copy something to the clipboard\n * \n * @param  {String} data Content to copy\n */\nfunction copyContents(data) {\n    navigator.clipboard.writeText(data);\n}\n\n\nexport { CallbackMerger, Enum, ClickHandler, \n         getColorScale, mergeOnly, saveContents, \n         saveImage, copyContents, tableRow };","import { Map } from 'immutable';\n\n// Immutable map makes these entries safe\nconst regularExpressions = Map({\n    float: new RegExp('[0-9]*(?:[.][0-9]*)?'),\n    int: new RegExp('[0-9]*'),\n    alpha: new RegExp('[a-zA-Z]*'),\n    alphanumeric: new RegExp('[0-9a-zA-Z]*')\n});\n\nexport default regularExpressions;","/** \n * Utilities that have to do with computing non-trivial NMR quantities\n */\n\n/**\n * Dipolar coupling constant in Hz between two atoms. Takes into account both\n * distance and the properties of the isotopes.\n * \n * @param  {AtomImage} a1 First atom\n * @param  {AtomImage} a2 Second atom\n * \n * @return {[Number, Array]}    Dipolar coupling in Hz and unit vector connecting\n *                              the two atoms\n */\nfunction dipolarCoupling(a1, a2) {\n\n    const MU0_HBAR_E30 = 1.3252140307214143e-10;\n    const g1 = a1.isotopeData.gamma || 0;\n    const g2 = a2.isotopeData.gamma || 0;\n\n    const r1 = a1.xyz;\n    const r2 = a2.xyz;\n    const r = r2.map((x, i) => x-r1[i]);\n    const R = Math.sqrt(r.reduce((s, x) => s+x*x, 0));\n    const rnorm = r.map((x) => x/R);\n\n    return [-MU0_HBAR_E30*g1*g2/(8*Math.PI*Math.PI*Math.pow(R, 3)), rnorm];    \n}\n\n/**\n * J coupling constant in Hz between two atoms. Will return\n * a value only if the ISC tensor data is available\n * \n * @param  {AtomImage} a1   First atom\n * @param  {AtomImage} a2   Second atom\n * \n * @return {Number}         J-coupling constant in Hz\n */\nfunction jCoupling(a1, a2) {\n\n    let T;\n    // Is it present at all?\n    try {\n        T = a1.getArrayValue('isc')[a2.index];\n    }\n    catch (e) {\n        // Not found\n        return null;\n    }\n\n    if (!T)\n        return null;\n\n    // Convert the tensor\n    let g1 = a1.isotopeData.gamma;\n    let g2 = a2.isotopeData.gamma;\n    T = T.iscAtomicToHz(g1, g2);\n\n    return T.isotropy;\n}\n\nexport { dipolarCoupling, jCoupling };","import * as mjs from 'mathjs';\n\n/**\n * Return a rotation matrix from a set of axes to another. Axes are not checked\n * and must be already orthonormal, with columns corresponding to each axis\n * \n * @param  {Array} axes1 Starting coordinate system\n * @param  {Array} axes2 Ending coordinate system\n\n * @return {Array}       Rotation matrix\n */\nfunction rotationBetween(axes1, axes2) {\n    return mjs.multiply(axes2, mjs.transpose(axes1));\n}\n\n/**\n * Euler angles (in ZYZ or ZXZ convention) from a rotation matrix R\n * \n * @param  {Array}  R           Rotation matrix\n * @param  {String} convention  Convention to use ('zyz' or 'zxz', by default 'zyz')\n * \n * @return {Array}      Euler angles\n */\nfunction eulerFromRotation(R, convention='zyz') {\n\n    /*\n        \n        For the ZYZ convention the rotation matrix is:\n\n        ⎡-sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(α)⋅cos(β)⋅cos(γ) + sin(γ)⋅cos(α)   -sin(β)⋅cos(γ)⎤\n        ⎢                                                                                            ⎥\n        ⎢-sin(α)⋅cos(γ) - sin(γ)⋅cos(α)⋅cos(β)  -sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(β)⋅sin(γ) ⎥\n        ⎢                                                                                            ⎥\n        ⎣            sin(β)⋅cos(α)                          sin(α)⋅sin(β)                  cos(β)    ⎦\n\n        \n        While for the ZXZ convention it is:\n        \n        ⎡-sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(α)⋅cos(γ) + sin(γ)⋅cos(α)⋅cos(β)   sin(β)⋅sin(γ)⎤\n        ⎢                                                                                           ⎥\n        ⎢-sin(α)⋅cos(β)⋅cos(γ) - sin(γ)⋅cos(α)  -sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(β)⋅cos(γ)⎥\n        ⎢                                                                                           ⎥\n        ⎣            sin(α)⋅sin(β)                         -sin(β)⋅cos(α)                 cos(β)    ⎦\n\n\n        The math is identical for the beta angle as well as the gimbal lock case. In the general case, \n        there's some changes in signs.\n\n     */\n\n\n    let cosb = R[2][2];\n    // Fix for the occasional numerical error\n    cosb = Math.min(Math.max(cosb, -1), 1);\n\n    let a;\n    let b = Math.acos(cosb);\n    let c;\n\n    if (Math.abs(cosb) === 1) {\n        // Special case, gimbal lock\n        c = 0;\n        a = Math.atan2(R[0][1], R[0][0]);\n    }\n    else {\n        // General case\n        switch (convention) {\n            case 'zyz':\n                a = Math.atan2(R[2][1],  R[2][0]);\n                c = Math.atan2(R[1][2], -R[0][2]);\n                break;\n            case 'zxz':\n                a = Math.atan2(R[2][0], -R[2][1]);\n                c = Math.atan2(R[0][2],  R[1][2]);\n                break;\n            default:\n                throw Error('Unrecognised Euler angles convention');\n        }\n    }\n\n    return [a, b, c];\n}\n\n/**\n * Rotation matrix from ZYZ Euler angles\n * \n * @param  {Number} alpha \n * @param  {Number} beta \n * @param  {Number} gamma \n * \n * @return {Array}   Rotation matrix\n */\nfunction rotationMatrixFromZYZ(alpha, beta, gamma) {\n\n    const sa = Math.sin(alpha);\n    const ca = Math.cos(alpha);\n    const sb = Math.sin(beta);\n    const cb = Math.cos(beta);\n    const sg = Math.sin(gamma);\n    const cg = Math.cos(gamma);\n\n    return [\n        [ca*cb*cg-sa*sg, sa*cb*cg+ca*sg, -sb*cg], \n        [-ca*cb*sg,      -sa*cb*sg+ca*cg, sb*sg],\n        [ca*sb,          sa*sb,           cb]\n    ];\n\n}\n\n/**\n * Euler angles between the Haeberlen eigenvectors of two NMR tensors\n * \n * @param  {CrystVis.TensorData}    T1          First tensor\n * @param  {CrystVis.TensorData}    T2          Second tensor\n * @param  {String}                 convention  Euler angles convention\n * \n * @return {Array}                              Euler angles\n */\nfunction eulerBetweenTensors(T1, T2, convention='zyz') {\n    const ax1 = T1.haeberlen_eigenvectors;\n    const ax2 = T2.haeberlen_eigenvectors;\n    return eulerFromRotation(rotationBetween(ax1, ax2), convention);\n}\n\nexport { rotationBetween, eulerFromRotation, eulerBetweenTensors, \n         rotationMatrixFromZYZ };","import _ from 'lodash';\nimport { dipolarCoupling, jCoupling } from '../../utils';\n\nfunction makeSelector(prefix, extras=[]) {\n    // Creates and returns a selector function for a given prefix\n    function selector(state) {\n        let ans = {};\n\n        for (let key in state) {\n            if (!_.startsWith(key, prefix) && extras.indexOf(key) === -1)\n                continue;\n            ans[key] = state[key];\n        }\n\n        return ans;\n    }\n\n    return selector;\n}\n\nconst addPrefix = (p, n) => p + '_' + n;\n\nfunction getSel(app) {\n    let sel = app.selected;\n    if (sel) {\n        return sel.length > 0? sel : app.displayed;\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getNMRData(view, datatype, tenstype='ms', reftable=null) {\n\n    let units = '';\n    let tens_units = {\n        ms: 'ppm',\n        efg: 'au'\n    }[tenstype];\n    let values = null;\n    let tensors = view.map((a) => (a.getArrayValue(tenstype)));\n\n    switch(datatype) {\n        case 'iso': \n            values = tensors.map((T) => T.isotropy);\n            units = tens_units;\n            break;\n        case 'aniso':\n            values = tensors.map((T) => T.anisotropy);\n            units = tens_units;\n            break;            \n        case 'asymm':\n            values = tensors.map((T) => T.asymmetry);\n            break;\n        case 'span':\n            values = tensors.map((T) => T.span);\n            break;\n        case 'skew':\n            values = tensors.map((T) => T.skew);\n            break;\n        case 'cs':\n            if (!reftable) {\n                throw Error('Can not compute chemical shifts without a reference table');\n            }\n            values = tensors.map((T, i) => {\n                let el = view.atoms[i].element;\n                let ref = reftable[el] || 0.0;\n                return ref-T.isotropy;\n            });\n            units = tens_units;\n            break;\n        case 'e_x':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[0]);\n            break;\n        case 'e_y':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[1]);\n            break;\n        case 'e_z':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[2]);\n            break;\n        case 'Q':\n            values = tensors.map((T, i) => {\n                let iD = view.atoms[i].isotopeData;\n                return T.efgAtomicToHz(iD.Q).haeberlen_eigenvalues[2]/1e3;\n            });\n            units = 'kHz';\n            break;\n        default:\n            break;\n    }\n\n    return [units, values];\n}\n\nfunction getLinkLabel(a1, a2, linktype) {\n\n    switch (linktype) {\n        case 'dip':\n            const D = dipolarCoupling(a1, a2)[0];\n            return (D/1e3).toFixed(2) + ' kHz';\n        case 'jc':\n            const J = jCoupling(a1, a2);\n            if (J === null) {\n                return '';\n            }\n            return J.toFixed(2) + ' Hz';\n        default:\n            return '';\n    }\n}\n\n\nclass BaseInterface {\n\n    constructor(state, dispatcher) {\n        this._state = state;\n        this._dispatcher = dispatcher;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    dispatch(action) {\n        this._dispatcher(action);\n    }\n\n}\n\nexport { \n    makeSelector, \n    addPrefix,\n    getSel,\n    getNMRData,\n    getLinkLabel,\n    BaseInterface \n};","/**\n * Colors used in ellipsoids, labels, etc.\n *\n * This isn't the best place to insert them, but they will stay here until\n * I can find a working way to have interoperability between JS and CSS on this.\n */\n\nconst selColor = 0xffffff; // Used for crystallographic labels\nconst msColor = 0xff8000;\nconst efgColor = 0x0080ff;\nconst dipColor = 0x00ff80;\nconst jcColor = 0xff0080;\n\nexport {\n    selColor,\n    msColor,\n    efgColor,\n    dipColor,\n    jcColor\n};","/**\n * Listeners for the rendering of ellipsoids\n */\n\nimport _ from 'lodash';\nimport { addPrefix, getSel } from '../utils';\nimport { msColor, efgColor } from './colors';\n\nfunction makeEllipsoidListener(name, color) {\n    // Factory for a listener that will be used for both MS and EFG ellipsoids\n    // with minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_on = addPrefix(name, 'ellipsoids_on');\n    const pre_scale = addPrefix(name, 'ellipsoids_scale');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases for convenience\n        const on = state[pre_on];\n        let scale = state[pre_scale];\n\n\n        if (current_view && (current_view !== next_view || !on)) {\n            // Something's changing. Remove old ellipsoids!\n            current_view.removeEllipsoids(name);\n        }\n\n        // Now for the new view and data\n        if (on) {\n\n            const data = next_view.map((a) => a.getArrayValue(name));\n\n            if (scale === 0) {\n                // Auto scale needed\n                let avg = data.map((t) => _.sum(t.eigenvalues.map(Math.abs))/3.0);\n                avg = _.sum(avg)/data.length;\n                scale = 2.0/avg;\n            }\n\n            next_view.addEllipsoids(data, name, {scalingFactor: scale, color: color, opacity: 0.125});\n        }\n\n        return {\n            [pre_view]: next_view,\n            [pre_scale]: scale\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst msEllipsoidListener = makeEllipsoidListener('ms', msColor);\nconst efgEllipsoidListener = makeEllipsoidListener('efg', efgColor);\n\nexport { msEllipsoidListener, efgEllipsoidListener };","/**\n * Listeners for the rendering of labels\n */\n\nimport { addPrefix, getSel, getNMRData } from '../utils';\nimport { selColor, msColor, efgColor } from './colors';\n\nfunction makeLabelListener(name, color, shiftfunc) {\n    // Factory for a function that will be used for both MS and EFG with\n    // minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_references = addPrefix(name, 'references');\n    const pre_type = addPrefix(name, 'labels_type');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n        let ref_table = state[pre_references];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases\n        const mode = state[pre_type];\n\n        if (current_view && (current_view !== next_view || mode === 'none')) {\n            // Remove old labels\n            current_view.removeLabels(name);\n        }\n\n        let label_texts;\n        if (mode !== 'none') {\n\n            if (name !== 'sel_sites') {\n                let [units, values] = getNMRData(next_view, mode, name, ref_table);\n                label_texts = values.map((v) => v.toFixed(2) + ' ' + units);                \n            }\n            else {\n                // Non-NMR labels\n                label_texts = next_view.map((a) => a.crystLabel);\n            }\n\n            next_view.addLabels(label_texts, name, (a, i) => ({ \n                color: color,  \n                shift: shiftfunc(a.radius),\n                height: 0.02\n            }));\n        }\n\n        return {\n            [pre_view]: next_view,\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst selLabelListener = makeLabelListener('sel_sites', selColor, (r) => ([r, r, 0]));\nconst msLabelListener = makeLabelListener('ms', msColor, (r) => ([1.414*r, 0.0, 0.0]));\nconst efgLabelListener = makeLabelListener('efg', efgColor, (r) => ([r, -r, 0.0]));\n\nexport { selLabelListener, msLabelListener, efgLabelListener };","import { addPrefix } from '../utils';\n\nimport { dipColor, jcColor } from './colors';\nimport { getLinkLabel } from '../utils';\n\n\nfunction makeCalculateLinksListener(name) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of calculating which atoms are the\n    // 'targets' to which we're drawing links to. Must precede a call to \n    // updateViews so that the ghosts get visualised or hidden as needed\n    \n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_homo = addPrefix(name, 'homonuclear');\n\n    const pre_view = addPrefix(name, 'view');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let model = app.model;\n\n        if (!model) {\n            // Can happen if we're running with an empty visualiser.\n            return {};\n        }\n\n        let ghostreqs = {\n            ...state.sel_ghosts_requests\n        };\n\n        // Targets?\n        const on = state[pre_on];\n        const catom = state[pre_ca];\n        const r = state[pre_r];\n        const hn = state[pre_homo];\n\n        let linkview;\n\n        if (on && catom) {\n\n            let query = { sphere: [catom, r] };\n            if (hn) {\n                query = {\n                    '$and': [\n                        query,\n                        { elements: [catom.element] }\n                    ]\n                };\n            }\n\n\n            linkview = model.find(query);\n            ghostreqs[name] = linkview;\n        }        \n        else {\n            linkview = model.view([]);\n            // Cancel previous ghosts, if present\n            delete(ghostreqs[name]);\n        }\n\n        return {\n            [pre_view]: linkview,\n            sel_ghosts_requests: ghostreqs\n        };\n    }\n\n    return listener;\n\n}\n\nfunction makeDisplayLinksListener(name, color) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of actually drawing the links  \n\n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_sph = addPrefix(name, 'sphere_show');\n\n    const pre_view = addPrefix(name, 'view');\n\n    // These we keep inside this enclosed variable, as a way to keep track for\n    // when we delete them\n    let current_link_names = [];\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let linkview = state[pre_view];\n\n        const catom = state[pre_ca];\n        const radius = state[pre_r];\n        const on = state[pre_on];\n        const sphere = state[pre_sph];\n\n        const model = app.model;\n\n\n        if (!model) {\n            // Nothing to do\n            return {};\n        }\n\n        // First, cleaning up old visualisation\n        current_link_names.forEach((name) => { model.removeGraphics(name); });\n\n        // Now creating a new one\n        current_link_names = [];\n        if (on && catom && linkview) {\n            linkview.atoms.forEach((a2, i) => {\n\n                if (a2 === catom)\n                    return;\n\n                const lname = name + '_link_' + i;\n                const label = getLinkLabel(catom, a2, name);\n\n                if (label === '') {\n                    // No coupling found\n                    return;\n                }\n\n                model.addLink(catom, a2, lname, label, {\n                    color: color,\n                    dashed: true,\n                    onOverlay: true\n                });\n                current_link_names.push(lname);\n            });\n        }\n\n        // Now the sphere\n        if (on && catom && sphere) {\n            model.addSphere(catom.xyz, radius, name + '_sphere', {\n                opacity: 0.25,\n                showAxes: false,\n                showCircles: true\n            });\n        }\n        else {\n            model.removeGraphics(name + '_sphere');\n        }\n\n        return {};\n    }\n\n    return listener;\n\n}\n\nconst dipCalculateLinksListener = makeCalculateLinksListener('dip');\nconst dipDisplayLinksListener = makeDisplayLinksListener('dip', dipColor);\n\nconst jcCalculateLinksListener = makeCalculateLinksListener('jc');\nconst jcDisplayLinksListener = makeDisplayLinksListener('jc', jcColor);\n\n\nexport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener, jcDisplayLinksListener };","/**\n * Listeners for Euler angles\n */\n\nimport { msColor, efgColor } from './colors';\nimport { eulerBetweenTensors } from '../../../utils';\n\nconst ctable = {\n    'ms': msColor,\n    'efg': efgColor\n};\n\nfunction eulerAngleListener(state) {\n\n    const a1A = state.eul_atom_A;\n    const a1B = state.eul_atom_B;\n\n    const a2A = state.eul_newatom_A;\n    const a2B = state.eul_newatom_B;\n\n    const tA = state.eul_tensor_A;\n    const tB = state.eul_tensor_B;\n\n    const conv = state.eul_convention;\n\n    let nmrA = null;\n    let nmrB = null;\n\n    if (a1A) {\n        a1A.removeLabel('eulA');\n    }\n\n    if (a2A) {\n        let r = a2A.radius;\n        a2A.addLabel('A', 'eulA', {\n            shift: [0, 0.25*r, 0],\n            color: ctable[tA],\n            onOverlay: true,\n            height: 0.04\n        });\n\n        // Now get the tensor value\n        if (a2A.model.hasArray(tA)) {\n            nmrA = a2A.getArrayValue(tA);\n        }\n    }\n\n    if (a1B) {\n        a1B.removeLabel('eulB');\n    }\n\n    if (a2B) {\n        let r = a2B.radius;\n        a2B.addLabel('B', 'eulB', {\n            shift: [0, -0.5*r, 0],\n            color: ctable[tB],\n            onOverlay: true\n        });\n\n        // Now get the tensor value\n        if (a2B.model.hasArray(tB)) {\n            nmrB = a2B.getArrayValue(tB);\n        }\n    }\n\n    let results = null;\n\n    if (nmrA && nmrB) {\n        // Get the eigenvectors\n        results = eulerBetweenTensors(nmrA, nmrB, conv);\n    }\n\n    return {\n        eul_atom_A: a2A,\n        eul_atom_B: a2B,\n        eul_results: results\n    };\n}\n\nexport { eulerAngleListener };","// Events used to trigger listeners\nimport { Enum } from '../../../utils';\n\nconst Events = new Enum([\n    'DISPLAY',\n    'VIEWS',\n    'SEL_LABELS',\n    'CELL',\n    'CSCALE',\n    'MS_ELLIPSOIDS',\n    'MS_LABELS',\n    'EFG_ELLIPSOIDS',\n    'EFG_LABELS',\n    'EUL_ANGLES',\n    'DIP_LINKS',                // Links require two events, one before a VIEWS update, the other after\n    'DIP_RENDER',\n    'JC_LINKS',\n    'JC_RENDER'\n]);\n\n// Event priority ranking. Events with higher priority fire first, and are\n// followed by all the ones of lower priority. Example: a change in Views\n// (priority 1) inevitably triggers all events of priority 0.\nconst eventPriority = {\n    0: new Set([Events.DISPLAY]),                               // Called last. If we need to change displayed model\n    1: new Set([Events.SEL_LABELS, Events.CELL,                 // All events having to do with rendering something that\n                Events.CSCALE,                                  // is affected by displayed/selected atoms\n                Events.MS_ELLIPSOIDS, Events.MS_LABELS,         \n                Events.EFG_ELLIPSOIDS, Events.EFG_LABELS,\n                Events.EUL_ANGLES, \n                Events.DIP_RENDER, Events.JC_RENDER]),\n    2: new Set([Events.VIEWS]),                                 // Changing displayed/selected atoms\n    3: new Set([Events.DIP_LINKS, Events.JC_LINKS])             // Computing links and required ghosts (which changes displayed atoms)\n};\n\nfunction getPriorityOfEvent(event) {\n\n    for (let p in eventPriority) {\n        let eset = eventPriority[p];\n        if (eset.has(event)) {\n            return p;\n        }\n    }\n\n    return 0; // Default value\n}\n\nfunction getEventsWithPriority(priority) {\n    return eventPriority[priority];\n}\n\n\nexport default Events;\nexport { getPriorityOfEvent, getEventsWithPriority };","/**\n * This file contains the master function for controlling the listener system.\n * Listeners are subscribed to the magresStore and fire whenever the state\n * changes. Since it could get too expensive to check which parts of the state\n * have changed at any time, listeners must be invoked EXPLICITLY by a method\n * making a dispatch by adding their names to the listen_update Array.\n *\n * A listener must have the following interface:\n *\n * function exampleListener(state) {\n *\n *      // ...do something...\n *\n *      return [new_data, new_listeners];\n * \n * }\n *\n * where new_data is a dictionary that will be directly used to update the\n * state while new_listeners is a list of any new listeners that should be\n * queued for update next. The process will stop only once that listen_update = []\n * at the end of a run through the current queue, (so be wary of creating infinite loops!).\n */\n\nimport { displayListener } from './display';\nimport { viewsListener } from './views';\nimport { msEllipsoidListener, efgEllipsoidListener } from './ellipsoids';\nimport { selLabelListener, msLabelListener, efgLabelListener } from './labels';\nimport { colorScaleListener } from './cscales';\nimport { cellListener } from './cell';\nimport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener,  jcDisplayLinksListener } from './links';\nimport { eulerAngleListener } from './euler';\nimport Events, { getPriorityOfEvent, getEventsWithPriority } from './events';\n\nconst initialListenerState = {\n    listen_update: []\n};\n\nconst listeners = {\n    [Events.DISPLAY]:           displayListener,\n    [Events.VIEWS]:             viewsListener,\n    [Events.SEL_LABELS]:        selLabelListener,\n    [Events.CELL]:              cellListener,\n    [Events.CSCALE]:            colorScaleListener,\n    [Events.MS_ELLIPSOIDS]:     msEllipsoidListener,\n    [Events.MS_LABELS]:         msLabelListener,\n    [Events.EFG_ELLIPSOIDS]:    efgEllipsoidListener,\n    [Events.EFG_LABELS]:        efgLabelListener,\n    [Events.EUL_ANGLES]:        eulerAngleListener,\n    [Events.DIP_LINKS]:         dipCalculateLinksListener,\n    [Events.DIP_RENDER]:        dipDisplayLinksListener,\n    [Events.JC_LINKS]:          jcCalculateLinksListener,\n    [Events.JC_RENDER]:         jcDisplayLinksListener\n};\n\nfunction makeMasterListener(store) {\n\n    function listener() {\n\n        let state = store.getState();\n        let toUpdate = state.listen_update;\n\n        if (toUpdate && toUpdate.length > 0) {\n\n            let data = {};\n\n            // Find max priority\n            let maxPriority = toUpdate.reduce((P, e) => {\n                let p = getPriorityOfEvent(e);\n                return p > P? p : P;\n            }, -1);\n\n            toUpdate = toUpdate.filter((e) => {\n                return getPriorityOfEvent(e) === maxPriority;\n            });\n\n            toUpdate = new Set(toUpdate); // Avoid duplicates\n\n            toUpdate.forEach((lname) => {\n\n                if (!(lname in listeners))\n                    return;\n\n                try {\n                    let d = listeners[lname](state);\n                \n                    data = {\n                        ...data,\n                        ...d\n                    };\n                }\n                catch (e) {\n                    // Can happen if the listener e.g. relies on there being\n                    // a model, and we don't have one loaded. Tolerated with a\n                    // warning.\n                    console.warn(e);\n                }\n\n            });\n\n            // Next do all the lower priority\n            let nextToUpdate = [];\n            if (maxPriority > 0) {\n                nextToUpdate = [...getEventsWithPriority(maxPriority-1)];\n            }\n            data.listen_update = nextToUpdate;\n\n            store.dispatch({\n                type: 'update',\n                data: data\n            });\n        }\n    }\n\n    return listener;\n}\n\nexport { initialListenerState, Events };\nexport default makeMasterListener;","function displayListener(state) {\n\n    const app = state.app_viewer;\n    const toDisplay = state.app_model_queued;\n\n    let data = {};\n\n    if (app && toDisplay) {\n        app.displayModel(toDisplay);\n        data = {\n            app_default_displayed: app.displayed,\n            app_model_queued: null\n        };\n    }\n\n    return data;\n}\n\nexport { displayListener };","function viewsListener(state) {\n\n    let app = state.app_viewer;\n    let model = app.model;\n\n    if (!model) {\n        return {};\n    }\n\n    // Aliases\n    let sel = state.sel_selected_view;\n    let displ = state.sel_displayed_view? state.sel_displayed_view : state.app_default_displayed;\n\n    // Assign new selection\n    if (sel && sel !== app.selected)\n        app.selected = sel;\n\n    if (model)\n        model.all.hide();\n\n    // Deal with ghosts\n    Object.values(state.sel_ghosts_requests).forEach((s, i) => {\n        // Make each of these visible but translucent\n        s.show();\n        s.setProperty('opacity', 0.5);\n    });\n    \n    // Doing this after the ghosts means any overlap will be fixed here\n    app.displayed = displ;\n    displ.setProperty('opacity', 1.0);\n\n    // We now update all visualizations that may be changed as a result of this\n    return  {};\n}\n\nexport { viewsListener };","/** \n * Listener for when cell/axes visibility is changed\n */\n\nfunction cellListener(state) {\n    const app = state.app_viewer;\n\n    if (app) { \n        const model = app.model;\n        if (model) {\n            console.log(model);\n            model.box.visible = state.sel_show_cell;\n            model.axes.visible = state.sel_show_cell;\n        }\n    }\n\n    return {};\n}\n\nexport { cellListener };","/**\n * Listeners for color scales\n */\n\nimport _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\nimport { getColorScale } from '../../../utils';\n\nfunction colorScaleListener(state) {\n\n    let app = state.app_viewer;\n    let current_view = state.cscale_view;\n    let current_greyed = state.cscale_displ;\n    let displayed = app.displayed;\n\n    let next_view = getSel(app);\n    let next_greyed = null;\n\n    const cstype = state.cscale_type;\n\n    // Restore color to the grayed out atoms\n    if (current_greyed) {\n        current_greyed.setProperty('color', null);\n    }\n\n    if (cstype !== 'none') {\n\n        // Split in prefix and mode\n        const [prefix, mode] = cstype.split('_', 2);\n        const ref_table = state[prefix + '_references'];\n\n        next_greyed = displayed.xor(next_view);\n\n        const nmrdata = getNMRData(next_view, mode, prefix, ref_table);\n        const values = nmrdata[1];\n\n        let minv = _.min(values);\n        let maxv = _.max(values);\n        let cs = getColorScale(minv, maxv, 'portland');\n        let colors = values.map((v) => cs.getColor(v).toHexString());\n\n        next_view.setProperty('color', colors);\n        next_greyed.setProperty('color', 0x888888);\n    }\n    else {\n        if (current_view)\n            current_view.setProperty('color', null);\n    }\n\n    return {\n        cscale_view: next_view,\n        cscale_displ: next_greyed\n    };\n}\n\nexport { colorScaleListener };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst SLC = CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON;\nconst CLC = CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON;\n\nconst initialSelState = {\n    sel_selected_view: null,\n    sel_displayed_view: null,\n    sel_ghosts_requests: {},\n    sel_on: false,\n    sel_mode: 'atom',\n    sel_sphere_r: 2.0,\n    sel_bond_n: 1,\n    sel_hlight: true,\n    sel_sites_view: null,\n    sel_sites_labels_type: 'none',\n    sel_show_cell: true\n};\n\nclass SelInterface extends BaseInterface {\n\n    get app() {\n        return this.state.app_viewer;\n    }\n\n    get selected() {\n        return this.state.sel_selected_view;\n    }\n\n    set selected(v) {\n        if (!v) {\n            let model = this.state.app_viewer.model;\n            if (model) {\n                v = model.view([]);\n            }\n        }\n\n        this.dispatch({\n            type: 'update', \n            data: {\n                sel_selected_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get displayed() {\n        return this.state.sel_displayed_view || this.state.app_default_displayed;\n    }\n\n    set displayed(v) {\n        if (!v) {\n            v = this.state.app_default_displayed;\n            if (!v) {\n                // Then there's just no model at all\n                return;\n            }\n        }\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_displayed_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get defaultDisplayed() {\n        return this.state.app_default_displayed;\n    }\n\n    get highlightSelected() {\n        return this.state.sel_hlight;\n    }\n\n    set highlightSelected(v) {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        app.highlightSelected = v;\n        this.dispatch({\n            type: 'set',\n            key: 'sel_hlight',\n            value: v\n        });\n    }\n\n    get showCrystLabels() {\n        return this.state.sel_sites_labels_type === 'labels';\n    }\n\n    set showCrystLabels(v) {\n        v = v? 'labels' : 'none';\n\n        this.dispatch({\n            type: 'update',\n            data: { sel_sites_labels_type: v, listen_update: [Events.SEL_LABELS]}\n        });\n    }\n\n    get showCell() {\n        return this.state.sel_show_cell;\n    }\n\n    set showCell(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_show_cell: v,\n                listen_update: [Events.CELL]\n            }\n        });\n    }\n\n    get selectionOn() {\n        return this.state.sel_on;\n    }\n\n    set selectionOn(v) {\n        this.setSelection(this.selectionMode, {on: v});\n    }\n\n    get selectionMode() {\n        return this.state.sel_mode;\n    }\n\n    set selectionMode(v) {\n        this.setSelection(v);\n    }\n\n    get selectionSphereR() {\n        return this.state.sel_sphere_r;\n    }\n\n    set selectionSphereR(v) {\n        this.setSelection(this.selectionMode, {r: v});\n    }\n\n    get selectionBondN() {\n        return this.state.sel_bond_n;\n    }\n\n    set selectionBondN(v) {\n        this.setSelection(this.selectionMode, {n: v});\n    }\n\n    get isotopeChoices() {\n        // Find which isotopes are available for the currently selected atoms\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        let elements = sel.map((a, i) => a.element);\n        // Are they all the same?\n        let el = elements[0];\n        if (!elements.reduce((s, x) => (s && x === el), true)) {\n            return null;\n        }\n\n        // Get the isotope information\n        let eData = sel.atoms[0].elementData;\n\n        let iKeys = Object.keys(eData.isotopes).sort();\n        let iData = iKeys.map((A, i) => {\n            let iso = eData.isotopes[A];\n            return {\n                A: A,\n                is_nmr_active: iso.spin !== 0,\n                is_Q_active: iso.Q !== 0,\n                is_max_nmr: A === eData.maxiso_NMR,\n                is_max_Q: A === eData.maxiso_Q,\n                abundance: iso.abundance\n            };\n        });\n\n        return iData;\n    }\n\n    setIsotope(A) {\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        sel.setProperty('isotope', A);\n\n        // Must update everything that depends on isotope properties\n        this.dispatch({\n            type: 'update',\n            data: {\n                listen_update: [Events.EFG_LABELS, Events.CSCALE, \n                                Events.DIP_RENDER, Events.JC_RENDER]\n            }\n        });\n    }\n\n    setSelection(mode, options={}) {\n        // Set the selection for a certain mode and options\n\n        let app = this.state.app_viewer;\n        if (!app) \n            return;\n\n        let default_options = {\n            r: this.selectionSphereR,\n            n: this.selectionBondN,\n            on: this.selectionOn\n        };\n\n        options = {\n            ...default_options,\n            ...options\n        };\n\n        // Selector functions\n        let selFunc = null;\n\n        if (options.on) {\n            switch(mode) {\n                case 'atom':\n                    selFunc = ((a, e) => {\n                        return app.model.view([a.imgIndex]); // Just the one\n                    });\n                    break;\n                case 'element':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryElements(a.element);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'sphere':\n                    const r = options.r;\n                    selFunc = ((a, e) => {\n                        var found = app.model._querySphere(a, r); \n                        return app.model.view(found);\n                    });\n                    break;\n                case 'molecule': \n                    selFunc = ((a, e) => {\n                        var found = app.model._queryMolecule(a);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'bonds':\n                    const n = options.n;\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryBonded(a, n, false);\n                        found = found.concat([a.imgIndex]); // Crystvis excludes the original atom\n                        return app.model.view(found);\n                    });\n                    break;\n                default:\n                    // No selection at all\n                    break;\n            }\n        }\n\n        // We use this to guarantee that the selection still doesn't go out of\n        // the default display (e.g. the main cell). Everything else remains\n        // hidden or can be used as ghost for other purposes\n        const dd = this.state.app_default_displayed;\n        const intf = this;\n        const handler = this.state.app_click_handler;\n\n        if (selFunc) {\n            handler.setCallback('sel', LC, (a, e) => { intf.selected = dd.and(selFunc(a, e)); });\n            handler.setCallback('sel', SLC, (a, e) => { intf.selected = dd.and(app.selected.or(selFunc(a, e))); });\n            handler.setCallback('sel', CLC, (a, e) => { intf.selected = dd.and(app.selected.xor(selFunc(a, e))); });\n        }\n        else {\n            // Free the events\n            handler.setCallback('sel', LC);\n            handler.setCallback('sel', SLC);\n            handler.setCallback('sel', CLC);\n        }\n\n        this.dispatch({type: 'update', data: {\n            sel_mode: mode,\n            sel_sphere_r: options.r,\n            sel_bond_n: options.n,\n            sel_on: options.on\n        }});\n    }\n\n}\n\n// Hook for interface\nfunction useSelInterface() {\n    let state = useSelector(makeSelector('sel', ['app_viewer', 'app_click_handler', 'app_default_displayed']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new SelInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default useSelInterface;\nexport { initialSelState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\n\nconst initialCScaleState = {\n    cscale_view: null,\n    cscale_displ: null,\n    cscale_type: 'none'\n};\n\n// A base class not meant to be used directly, but inherited by all interfaces\n// that make use of color scales. \n// \n// Must be used in conjuction with makeCScaleSelector!\nclass CScaleInterface extends BaseInterface {\n\n    get colorScaleType() {\n        return this.state.cscale_type;\n    }\n\n    set colorScaleType(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_type: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    get colorScalePrefix() {\n        return this.colorScaleType.split('_', 2)[0];\n    }\n\n}\n\nfunction makeCScaleSelector(prefix, extras=[]) {\n    extras = extras.concat(Object.keys(initialCScaleState));\n\n    return makeSelector(prefix, extras);\n}\n\nexport default CScaleInterface;\nexport { initialCScaleState, makeCScaleSelector };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialMSState = {\n    ms_view: null,\n    ms_ellipsoids_on: false,\n    ms_ellipsoids_scale: 0.05,\n    ms_labels_type: 'none',\n    ms_references: {}\n};\n\n// Update any new references for chemical shifts\nfunction msSetReferences(state, refs=null) {\n\n    let new_refs = {};\n\n    // Default behaviour if refs is null is to clear everything,\n    // otherwise we update the existing table.\n    if (refs) {\n        new_refs = {\n            ...state.ms_references,\n            ...refs\n        };\n    }\n\n    // We then update the state and refresh the ms labels, in case any changes\n    // are needed\n    return {\n        ms_references: new_refs,\n        listen_update: [Events.MS_LABELS, Events.CSCALE]\n    };\n}\n\n// Action creator\nconst msAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass MSInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.ms_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(msAction({ ms_ellipsoids_on: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.ms_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(msAction({ ms_ellipsoids_scale: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.ms_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(msAction({ 'ms_labels_type': v }, [Events.MS_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'ms');\n    }\n\n    get referenceTable() {\n\n        if (!this.state.app_viewer || !this.state.app_viewer.model)\n            return [];\n\n        // Find the elements, then return the respective references as pairs\n        const elements = _.uniq(this.state.app_viewer.model.symbols);\n        const refs = this.state.ms_references;\n        return _.fromPairs(elements.map((el) => [el, refs[el] || 0]));\n    }\n\n    updateReferenceTable(data) {\n        this.dispatch({\n            type: 'call',\n            function: msSetReferences,\n            arguments: [data]\n        });\n    }\n\n    getReference(el) {\n        return this.state.ms_references[el] || 0.0;\n    }\n\n}\n\nfunction useMSInterface() {\n    let state = useSelector(makeCScaleSelector('ms', ['app_viewer', 'efg_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new MSInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useMSInterface;\nexport { initialMSState, msSetReferences };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialEFGState = {\n    efg_view: null,\n    efg_ellipsoids_on: false,\n    efg_ellipsoids_scale: 0.1,\n    efg_labels_type: 'none'\n};\n\n// Action creator\nconst efgAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass EFGInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.efg_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_on: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.efg_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_scale: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.efg_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(efgAction({ efg_labels_type: v }, [Events.EFG_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'efg');\n    }\n\n}\n\nfunction useEFGInterface() {\n    let state = useSelector(makeCScaleSelector('efg', ['app_viewer', 'ms_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EFGInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEFGInterface;\nexport { initialEFGState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialDipState = {\n    dip_view: null,\n    dip_link_names: [],\n    dip_links_on: false,\n    dip_central_atom: null,\n    dip_radius: 1.0,\n    dip_sphere_show: true,\n    dip_homonuclear: false\n};\n\n\nclass DipInterface extends BaseInterface {\n\n    get isOn() {\n        return this.state.dip_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            dip_links_on: v,\n            listen_update: [ Events.DIP_LINKS ]\n        };\n\n        if (!v) \n            data.dip_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.dip_central_atom;\n    }\n\n    get radius() {\n        return this.state.dip_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.dip_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_homonuclear: v,\n                listen_update: [ Events.DIP_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.dip_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_sphere_show: v,\n                listen_update: [ Events.DIP_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('dip', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        dip_central_atom: a,\n                        listen_update: [ Events.DIP_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('dip', LC); \n    }\n\n}\n\nfunction useDipInterface() {\n    let state = useSelector(makeSelector('dip', ['app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new DipInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useDipInterface;\nexport { initialDipState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialJCoupState = {\n    jc_view: null,\n    jc_link_names: [],\n    jc_links_on: false,\n    jc_central_atom: null,\n    jc_radius: 1.0,\n    jc_sphere_show: true,\n    jc_homonuclear: false\n};\n\n\nclass JCoupInterface extends BaseInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    get isOn() {\n        return this.state.jc_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            jc_links_on: v,\n            listen_update: [ Events.JC_LINKS ]\n        };\n\n        if (!v) \n            data.jc_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.jc_central_atom;\n    }\n\n    get radius() {\n        return this.state.jc_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.jc_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_homonuclear: v,\n                listen_update: [ Events.JC_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.jc_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_sphere_show: v,\n                listen_update: [ Events.JC_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('jc', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        jc_central_atom: a,\n                        listen_update: [ Events.JC_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('jc', LC); \n    }\n\n}\n\nfunction useJCoupInterface() {\n    let state = useSelector(makeSelector('jc', ['app_click_handler', 'app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new JCoupInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useJCoupInterface;\nexport { initialJCoupState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { eulerBetweenTensors } from '../../../utils';\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst RC = CrystVis.RIGHT_CLICK;\n\nconst initialEulerState = {\n    eul_atom_A: null,\n    eul_newatom_A: null,\n    eul_tensor_A: 'ms',\n    eul_atom_B: null,\n    eul_newatom_B: null,\n    eul_tensor_B: 'ms',\n    eul_convention: 'zyz',\n    eul_results: null\n};\n\nconst tensorValues = new Set(['ms', 'efg']);\nconst conventionValues = new Set(['zyz', 'zxz']);\n\nfunction makeCallback(dispatch, ending='A') {    \n\n    function cback(a, e) {\n        dispatch({\n            type: 'update',\n            data: {\n                ['eul_newatom_' + ending]: a,\n                listen_update: [Events.EUL_ANGLES]\n            }\n        });\n    }\n\n    return cback;\n}\n\nfunction makeEulerAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.EUL_ANGLES]\n        }\n    };\n}\n\nclass EulerInterface extends BaseInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get convention() {\n        return this.state.eul_convention;\n    }\n\n    set convention(v) {\n        if (!conventionValues.has(v))\n            throw Error('Invalid Euler angles convention');\n        this.dispatch(makeEulerAction({eul_convention: v}));\n    }\n\n    _getAtomLabel(ending='A') {\n        let a = this.state['eul_atom_' + ending];\n        if (a)\n            return a.crystLabel\n        else\n            return 'Not selected'        \n    }\n\n    _setTensorType(v, ending='A') {\n        if (!tensorValues.has(v))\n            throw Error('Invalid NMR tensor for Euler angles');\n        this.dispatch(makeEulerAction({['eul_tensor_' + ending]: v}));\n    }\n\n    get atomA() {\n        return this.state.eul_atom_A;\n    }\n\n    get atomLabelA() {\n        return this._getAtomLabel('A');\n    }\n\n    get atomB() {\n        return this.state.eul_atom_B;\n    }\n\n    get atomLabelB() {\n        return this._getAtomLabel('B');\n    }\n\n    get tensorA() {\n        return this.state.eul_tensor_A;\n    }\n\n    set tensorA(v) {\n        this._setTensorType(v, 'A');\n    }\n\n    get tensorB() {\n        return this.state.eul_tensor_B;\n    }\n\n    set tensorB(v) {\n        this._setTensorType(v, 'B');        \n    }\n\n    _getResult(i, rad=false) {\n        let f = rad? 1.0 : 180/Math.PI;\n        let r = this.state.eul_results;\n        return r? (r[i]*f) : 'N/A';        \n    }\n\n    get alpha() {\n        return this._getResult(0);\n    }\n\n    get beta() {\n        return this._getResult(1);\n    }\n\n    get gamma() {\n        return this._getResult(2);\n    }\n\n    get alphaRad() {\n        return this._getResult(0, true);\n    }\n\n    get betaRad() {\n        return this._getResult(1, true);\n    }\n\n    get gammaRad() {\n        return this._getResult(2, true);\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC, makeCallback(dispatch, 'A'));\n        handler.setCallback('eul', RC, makeCallback(dispatch, 'B'));\n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC);\n        handler.setCallback('eul', RC);\n\n        this.dispatch(makeEulerAction({\n            eul_newatom_A: null,\n            eul_newatom_B: null\n        }));\n    }\n\n    txtReport() {\n        let report = 'Euler angles between tensors:\\n';\n\n        report += `${this.tensorA} on ${this.atomLabelA}\\nand\\n`;\n        report += `${this.tensorB} on ${this.atomLabelB}\\n\\n`;\n\n        report += `Convention: ${this.convention.toUpperCase()}\\n\\n`;\n\n        report += `Degrees:\\n${this.alpha}    ${this.beta}    ${this.gamma}\\n\\n`;\n        report += `Radiants:\\n${this.alphaRad}     ${this.betaRad}     ${this.gammaRad}`;\n\n        return report;\n    }\n\n    txtSelfAngleTable() {\n        // Return a full table of MS-to-EFG tensor angles for each atom\n        if (!(this.hasMSData && this.hasEFGData)) {\n            // Pointless\n            throw Error('Both MS and EFG tensors are needed to compute the table');\n        }\n\n        // Selection if available, otherwise displayed atoms\n        let targ = this.state.app_viewer.selected;\n        targ = (targ.length > 0)? targ : this.state.app_viewer.displayed;\n\n        const data = targ.map((a, i) => {\n            return [a.crystLabel, a.getArrayValue('ms'), a.getArrayValue('efg')];\n        });\n\n        let table = `Euler angles between MS and EFG tensors in radiants, convention: ${this.convention.toUpperCase()}\\n`;\n        let conv = this.convention;\n\n        data.forEach((d, i) => {\n\n            let [label, ms, efg] = d;\n\n\n            let [alpha, beta, gamma] = eulerBetweenTensors(ms, efg, conv);\n\n            table += `${label}    ${alpha}    ${beta}    ${gamma}\\n`;\n        });\n\n        return table;\n    }\n}\n\nfunction useEulerInterface() {\n    let state = useSelector(makeSelector('eul', ['app_viewer', 'app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EulerInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEulerInterface;\nexport { initialEulerState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { CallbackMerger, ClickHandler } from '../../../utils';\n\nimport { initialSelState } from './SelInterface';\nimport { initialCScaleState } from './CScaleInterface';\nimport { initialMSState } from './MSInterface';\nimport { initialEFGState } from './EFGInterface';\nimport { initialDipState } from './DipInterface';\nimport { initialJCoupState } from './JCoupInterface';\nimport { initialEulerState } from './EulerInterface';\n\nimport { Events } from '../listeners';\n\nimport CrystVis from 'crystvis-js';\n\n\nconst initialAppState = {\n    app_viewer: null,\n    app_click_handler: null,\n    app_theme: 'dark',\n    app_sidebar: 'load',\n    app_default_displayed: null,\n    app_model_queued: null,\n    app_load_as_mol: false,\n    app_use_nmr_isos: true\n};\n\n// Functions meant to operate on the app alone.\n// These exist outside of the AppInterface because they will be invoked\n// directly from inside the reducer as special actions\nfunction appDisplayModel(state, m) {\n    let app = state.app_viewer;\n    let cm = app.model;\n\n    let data = {};\n    if (cm) {\n        // We turn visualizations off\n        data = {\n            ...initialSelState,\n            ...initialCScaleState,\n            ...initialMSState,\n            ...initialEFGState,\n            ...initialDipState,\n            ...initialJCoupState,\n            ...initialEulerState\n        };\n    }\n\n    // Return data for dispatch\n    return {\n        ...data,\n        app_model_queued: m,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS, Events.JC_LINKS]\n    };\n}\n\nfunction appDeleteModel(state, m) {\n    \n    let app = state.app_viewer;\n    let data = {};\n\n    // Delete a model\n    app.deleteModel(m);\n\n    let models = app.modelList;\n\n    if (!app.model && models.length > 0) {\n        // Let's display a different one\n        data = appDisplayModel(state, models[0]);\n    }\n\n    return data;\n}\n\nclass AppInterface extends BaseInterface {\n\n    get initialised() {\n        return this.viewer !== null;\n    }\n\n    get viewer() {\n        return this.state.app_viewer;\n    }\n\n    get models() {\n        let models = [];\n\n        if (this.initialised) {\n            models = this.viewer.modelList;\n        }\n\n        return models;\n    }\n\n    get currentModel() {\n        let model = null;\n\n        if (this.initialised) {\n            model = this.viewer.model;\n        }\n\n        return model;\n    }\n\n    get currentModelName() {\n        let model_name = null;\n\n        if (this.initialised) {\n            model_name = this.viewer.modelName;\n        }\n\n        return model_name;\n    }\n\n    get theme() {\n        return this.state.app_theme;\n    }\n\n    set theme(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_theme',\n            value: v\n        });\n    }\n\n    get sidebar() {\n        return this.state.app_sidebar;\n    }\n\n    set sidebar(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_sidebar',\n            value: v\n        });\n    }\n\n    get loadAsMol() {\n        return this.state.app_load_as_mol;\n    }\n\n    set loadAsMol(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_load_as_mol',\n            value: v\n        });\n    }\n\n    get useNMRIsotopes() {\n        return this.state.app_use_nmr_isos;\n    }\n\n    set useNMRIsotopes(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_use_nmr_isos',\n            value: v\n        });\n    }\n\n    initialise(elem) {\n        console.log('Initialising CrystVis app on element ' + elem);\n        // Initialise app but only if it's not already there\n        const vis = new CrystVis(elem);\n        vis.highlightSelected = true; // Our default\n                \n        const handler = new ClickHandler(vis);\n\n        if (!this.initialised) {\n            this.dispatch({\n                type: 'update',\n                data: {\n                    app_viewer: vis,\n                    app_click_handler: handler\n                }\n            });\n        }\n    }\n\n    load(files, cback=null) {\n\n        /* Load from a list of files, running a callback with the aggregate\n        dictionary that reports the success for each of them */\n\n        if (!this.initialised) {\n            return;\n        }\n\n        let cbm = new CallbackMerger(files.length, cback);\n        let app = this.viewer;\n        let intf = this;\n        let params = {\n            supercell: [3, 3, 3],\n            molecularCrystal: this.loadAsMol,\n            useNMRActiveIsotopes: this.useNMRIsotopes\n        };\n\n        // Callback for each file after the FileReader is done\n        function onLoad(contents, name, extension) {\n            var success = app.loadModels(contents, extension, name, params);\n\n            // Find a valid one to load\n            var to_display = null;\n            _.map(success, (v, n) => {\n                if (v === 0) {                 \n                    to_display = n;\n                }\n            });\n\n            if (to_display) {\n                intf.display(to_display);\n            }\n\n            if (cback) {\n                cbm.call(success);\n            }\n        }\n\n        // Function that loads each individual file\n        function parseOne(f) {\n            \n            let reader = new FileReader();\n            // Extension and file name\n            let name = f.name.split('.')[0];\n            let extension = f.name.split('.').pop();\n\n            reader.onload = ((e) => { onLoad(e.target.result, name, extension) });\n            reader.readAsText(f);\n        }\n\n        _.forEach(files, parseOne);\n    }\n\n    display(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDisplayModel,\n            arguments: [m]\n        });\n    }\n\n    delete(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDeleteModel,\n            arguments: [m]\n        });\n    }\n\n}\n\n// Hook for interface\nfunction useAppInterface() {\n    let state = useSelector(makeSelector('app'), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new AppInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useAppInterface;\nexport { initialAppState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface, getSel, getNMRData } from '../utils';\nimport { tableRow, eulerFromRotation, dipolarCoupling, jCoupling } from '../../../utils';\n\nconst initialFilesState = {\n    files_seltype: 'ms'\n};\n\nclass FilesInterface extends BaseInterface {\n\n    get fileType() {\n        return this.state.files_seltype;\n    }\n\n    set fileType(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'files_seltype',\n            value: v\n        });\n    }\n\n    get fileName() {\n        let app = this.state.app_viewer;\n        let mname = app.modelName;\n        let type = this.state.files_seltype;\n\n        if (mname) {\n            return `mvtable_${mname}_${type}.txt`;\n        }\n        else {\n            return 'N/A';\n        }\n    }\n\n    get fileValid() {\n        // Can we generate a file with these parameters?\n        let app = this.state.app_viewer;\n        if (!app || !app.model)\n            return false;\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                return this.hasMSData;\n            case 'efg':\n                return this.hasEFGData;\n            case 'isc':\n                return this.hasISCData;\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    generateFile() {\n\n        let contents = '';\n\n        // What are the atoms?\n        const app = this.state.app_viewer;\n        let view = null;\n\n        if (app && app.model) {\n            view = getSel(app);\n        }\n\n        if (!view) {\n            return null;\n        }\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                contents = this._msMakeTable(view);\n                break;\n            case 'efg':\n                contents = this._efgMakeTable(view);\n                break;\n            case 'dip':\n                contents = this._dipMakeTable(view);\n                break;\n            case 'isc':\n                contents = this._iscMakeTable(view);\n                break;\n            default:\n                return null;\n        }\n\n        return contents;\n    }\n\n    // Table generators\n    _msMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'MS Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Isotropy (ppm)', \n                           'Anisotropy (ppm)', 'Asymmetry', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const iso = getNMRData(view, 'iso', 'ms')[1];\n        const aniso = getNMRData(view, 'aniso', 'ms')[1];\n        const asymm = getNMRData(view, 'asymm', 'ms')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('ms');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                iso[i],\n                aniso[i],\n                asymm[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _efgMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'EFG Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Vzz (au)', 'Anisotropy (au)', \n                           'Asymmetry', 'Q (kHz)', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const Vzz = getNMRData(view, 'e_z', 'efg')[1];\n        const aniso = getNMRData(view, 'aniso', 'efg')[1];\n        const asymm = getNMRData(view, 'asymm', 'efg')[1];\n        const Q = getNMRData(view, 'Q', 'efg')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('efg');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                Vzz[i],\n                aniso[i],\n                asymm[i],\n                Q[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _dipMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'Dipolar coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'D (kHz)', 'r_x (Ang)', 'r_y (Ang)', 'r_z (Ang)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const [D, r] = dipolarCoupling(a1, a2);\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    D,\n                    r[0], r[1], r[2]\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n\n    _iscMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'J coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'J (Hz)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const J = jCoupling(a1, a2);\n\n                if(!J)\n                    return; // No data\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    J\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n}\n\n// Hook for interface\nfunction useFilesInterface() {\n    let state = useSelector(makeSelector('files', ['app_viewer', \n                                                   'app_default_displayed', \n                                                   'eul_convention']), \n                            shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new FilesInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useFilesInterface;\nexport { initialFilesState };","import { createStore } from 'redux';\n\n// Initial state, merged from segments\nimport { initialAppState } from './interfaces/AppInterface';\nimport { initialSelState } from './interfaces/SelInterface';\nimport { initialCScaleState } from './interfaces/CScaleInterface';\nimport { initialMSState } from './interfaces/MSInterface';\nimport { initialEFGState } from './interfaces/EFGInterface';\nimport { initialDipState } from './interfaces/DipInterface';\nimport { initialJCoupState } from './interfaces/JCoupInterface';\nimport { initialEulerState } from './interfaces/EulerInterface';\nimport { initialFilesState } from './interfaces/FilesInterface';\nimport makeMasterListener, { initialListenerState } from './listeners';\n\n// Merging together\nconst initialState = {\n    ...initialAppState,\n    ...initialSelState,\n    ...initialCScaleState,\n    ...initialMSState,\n    ...initialEFGState,\n    ...initialDipState,\n    ...initialJCoupState,\n    ...initialEulerState,\n    ...initialFilesState,\n    ...initialListenerState\n};\n\n// Reducer\nfunction storeReducer(state=initialState, action={type: 'none'}) {\n    switch(action.type) {\n        case 'set':\n            // Set a single value\n            state = {\n                ...state,\n                [action.key]: action.value,\n            };\n            break;\n        case 'update':\n            // Set multiple values\n            state = {\n                ...state,\n                ...action.data\n            };\n            break;\n        case 'call':\n            // Do complex stuff with state\n            let args = [state].concat(action.arguments);\n            let data = action.function(...args);\n            state = {\n                ...state,\n                ...data\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nconst magresStore = createStore(storeReducer);\nmagresStore.subscribe(makeMasterListener(magresStore));\n\nexport default magresStore;","import magresStore from './store';\nimport useAppInterface from './interfaces/AppInterface';\nimport useSelInterface from './interfaces/SelInterface';\nimport useMSInterface from './interfaces/MSInterface';\nimport useEFGInterface from './interfaces/EFGInterface';\nimport useDipInterface from './interfaces/DipInterface';\nimport useEulerInterface from './interfaces/EulerInterface';\nimport useJCoupInterface from './interfaces/JCoupInterface';\nimport useFilesInterface from './interfaces/FilesInterface';\n\nexport default magresStore;\n\nexport { \n    useAppInterface, \n    useSelInterface, \n    useMSInterface, \n    useEFGInterface,\n    useDipInterface,\n    useJCoupInterface,\n    useEulerInterface,\n    useFilesInterface\n};","export default __webpack_public_path__ + \"static/media/logo.3a5b963a.svg\";","import './controls.css';\nimport './MVCustomSelect.css';\n\nimport React, { useState, cloneElement, useEffect } from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\n\nimport { chainClasses } from '../utils';\n\nfunction MVCustomSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className='mv-control mv-cselect-opt' onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVCustomSelect(props) {\n\n    const [ show, setShow ] = useState(false);\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVCustomSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    // Translation?\n    let tstyle = {};    \n    \n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    // If disabled while open, must close\n    useEffect(() => {\n        if (props.disabled)\n            setShow(false);\n    }, [props.disabled]);\n\n    return (\n        <div style={tstyle} className={chainClasses('mv-control', 'mv-cselect', show? null : 'mv-cselect-closed', \n                                                    props.disabled? 'mv-cselect-disabled' : null )} \n            onMouseLeave={(e) => { setShow(false); }} title={props.title}>\n            <div className='mv-control mv-cselect-main' onClick={() => { setShow(true && (!props.disabled)); }}>\n                {options[selected]}\n                <span className='mv-cselect-main-caret'><FaCaretDown /></span>\n            </div>\n            <div className='mv-control mv-cselect-ddown'>\n                {options.map((o, i) => {\n                    return cloneElement(o, {key: i, onClick: () => { setShow(false); onSelect(values[i]); }});\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport { MVCustomSelectOption };\nexport default MVCustomSelect;","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg47\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-18.293285,-29.905846)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path31-3\",\n    style: {\n      fill: \"#ffffff\",\n      strokeWidth: 0.113242,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 20.409953,29.969924 a 2.0525921,2.0525921 0 0 0 -2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,-2.052588 2.0525921,2.0525921 0 0 0 -2.052588,-2.052588 z m 0,0.304891 a 1.7477165,1.7477165 0 0 1 1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,-1.747697 1.7477165,1.7477165 0 0 1 1.747697,-1.747697 z m 0,0.981852 a 0.76590603,0.76590603 0 0 0 -0.765845,0.765845 0.76590603,0.76590603 0 0 0 0.765845,0.765844 0.76590603,0.76590603 0 0 0 0.765844,-0.765844 0.76590603,0.76590603 0 0 0 -0.765844,-0.765845 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMs);\nexport default __webpack_public_path__ + \"static/media/ms.f07fad56.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEfg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379\",\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"M 2.5730992,0.53564415 C 2.0763787,1.0247144 2.1174995,2.1158593 2.1174995,2.1158593 c 0,0 1.090811,0.040787 1.5798807,-0.4559341 C 4.1697678,1.1801491 3.9991355,0.77827206 3.7271516,0.50620724 3.4550908,0.23406562 3.0528756,0.06325682 2.5730992,0.53564415 Z\",\n    id: \"path949\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"m 3.2382813,0.12109375 c -0.2336518,-0.021225 -0.4928561,0.0749413 -0.75,0.328125 C 2.2066461,0.72651627 2.0927766,1.1440416 2.0390625,1.4902344 1.9853484,1.8364272 1.9960938,2.1210938 1.9960937,2.1210938 L 2,2.2324219 l 0.1132813,0.00391 c 0,0 0.2827996,0.010832 0.6289062,-0.042969 C 3.0882941,2.1395587 3.5059251,2.0257566 3.7832031,1.7441406 4.0363717,1.4870123 4.1324787,1.2277171 4.1113281,0.99414063 4.0901775,0.7605642 3.9606182,0.56808419 3.8125,0.41992188 3.6643293,0.27170718 3.471933,0.14231875 3.2382813,0.12109375 Z m -0.021484,0.2421875 C 3.3722117,0.37739918 3.5167352,0.46787023 3.640625,0.59179687 3.7644904,0.71569911 3.8570292,0.86030307 3.8710938,1.015625 3.8851583,1.1709469 3.8305467,1.3515714 3.6113281,1.5742187 3.399537,1.7893233 3.0266438,1.9050922 2.7050781,1.9550781 c -0.251685,0.039123 -0.3754283,0.03197 -0.4570312,0.03125 -7.728e-4,-0.080876 -0.00797,-0.2062232 0.03125,-0.4589844 0.049905,-0.3216465 0.1638213,-0.69447771 0.3789062,-0.90624995 0.222632,-0.21920321 0.403179,-0.27193043 0.5585938,-0.2578125 z\",\n    id: \"path951\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 1.6602402,3.6976978 C 2.1569607,3.2086275 2.11584,2.1174825 2.11584,2.1174825 c 0,0 -1.0908111,-0.040787 -1.57988078,0.4559342 -0.4723876,0.4797762 -0.3017553,0.8816532 -0.0297709,1.153718 C 0.7782491,3.9992763 1.1804642,4.1700851 1.6602402,3.6976978 Z\",\n    id: \"path957\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1210938,1.9960937 c 0,0 -0.2847528,-0.010832 -0.6308594,0.042969 -0.3461066,0.053801 -0.76373761,0.1676027 -1.04101565,0.4492188 -0.25316852,0.2571283 -0.34927569,0.5164235 -0.328125,0.75 C 0.14224444,3.4718577 0.27180335,3.6643377 0.41992188,3.8125 0.56809254,3.9607147 0.76048898,4.0901031 0.99414063,4.1113281 1.2277923,4.1325531 1.48895,4.0363868 1.7460937,3.7832031 2.0277289,3.5059056 2.1396453,3.0883803 2.1933594,2.7421875 2.2470735,2.3959947 2.2363281,2.1132813 2.2363281,2.1132813 L 2.2324219,2 Z M 1.9863281,2.2480469 c 7.439e-4,0.081628 0.00781,0.2052829 -0.03125,0.4570312 C 1.9051725,3.0267247 1.7912568,3.3995559 1.5761719,3.6113281 1.3535401,3.8305313 1.1710397,3.8852117 1.015625,3.8710938 0.86021029,3.8569758 0.71568671,3.7645516 0.59179687,3.640625 0.46793127,3.5167228 0.37734588,3.3721188 0.36328125,3.2167969 0.34921662,3.061475 0.40382827,2.8808505 0.62304687,2.6582031 0.83483802,2.4430985 1.2057781,2.3292828 1.5273437,2.2792969 1.7800414,2.2400162 1.905477,2.2472982 1.9863281,2.2480469 Z\",\n    id: \"path959\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 2.1132813,1.9960937 2,2 1.9960937,2.1132813 c 0,0 -0.010745,0.2827134 0.042969,0.6289062 0.053714,0.3461928 0.1675836,0.7637181 0.4492188,1.0410156 0.2571437,0.2531837 0.5163483,0.34935 0.75,0.328125 C 3.4719329,4.0901031 3.6643293,3.9607147 3.8125,3.8125 3.9606185,3.6643377 4.0901775,3.4718577 4.1113281,3.2382813 4.1324788,3.0047048 4.0363716,2.7454096 3.7832031,2.4882813 3.5059251,2.2066652 3.0882941,2.0928632 2.7421875,2.0390625 2.3960809,1.9852618 2.1132812,1.9960937 2.1132813,1.9960937 Z m 0.1347656,0.2519532 c 0.081645,-7.179e-4 0.2054038,-0.00786 0.4570312,0.03125 0.3215657,0.049986 0.6944589,0.1638016 0.90625,0.3789062 C 3.8305467,2.8808505 3.8851584,3.061475 3.8710938,3.2167969 3.8570291,3.3721188 3.7644906,3.5167228 3.640625,3.640625 3.5167352,3.7645516 3.3722116,3.8569758 3.2167969,3.8710938 3.0613821,3.8852117 2.8808349,3.8305313 2.6582031,3.6113281 2.4431182,3.3995559 2.3292024,3.0267247 2.2792969,2.7050781 2.2402454,2.4533874 2.2473047,2.3297177 2.2480469,2.2480469 Z\",\n    id: \"path4379-8-7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 0.99414063,0.12304687 C 0.76052273,0.14426881 0.56808207,0.27367078 0.41992188,0.421875 0.27181384,0.57002685 0.14224137,0.76255105 0.12109375,0.99609375 0.09994613,1.2296364 0.19606487,1.4889803 0.44921875,1.7460937 0.72646854,2.0276811 1.1441384,2.1415134 1.4902344,2.1953125 c 0.346096,0.053799 0.6308594,0.042969 0.6308594,0.042969 l 0.1113281,-0.00391 0.00391,-0.1132812 c 0,0 0.010744,-0.2827241 -0.042969,-0.6289063 C 2.1396469,1.1460053 2.0277002,0.72844112 1.7460937,0.45117188 1.4889649,0.19800288 1.2277585,0.10182494 0.99414063,0.12304687 Z M 1.015625,0.36328125 c 0.1554485,-0.014121 0.3379002,0.0405478 0.5605469,0.25976562 0.2151136,0.21180052 0.328999,0.58459283 0.3789062,0.90625003 0.039228,0.2528276 0.032025,0.3781486 0.03125,0.4589843 -0.08081,7.505e-4 -0.2062203,0.00804 -0.4589844,-0.03125 C 1.2057675,1.9070437 0.83486627,1.7913052 0.62304687,1.5761719 0.40381362,1.3535096 0.34921357,1.1729338 0.36328125,1.0175781 0.37734893,0.86222244 0.46792083,0.71766269 0.59179687,0.59375 0.71569719,0.46981287 0.86017652,0.37740225 1.015625,0.36328125 Z\",\n    id: \"path4379-8-7-9\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEfg);\nexport default __webpack_public_path__ + \"static/media/efg.dd4cc518.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDip(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path1204\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffb\",\n      strokeWidth: 0.214,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 4.089079,2.0563225 c 0,1.0289629 -0.8331367,1.8631023 -1.3433946,1.8631023 -0.5102579,-10e-8 -0.5044128,-0.8341394 -0.5044128,-1.8631023 0,-1.0289628 -0.00584,-1.86310211 0.5044128,-1.86310221 0.5102579,0 1.3433946,0.83413931 1.3433946,1.86310221 z\",\n    id: \"path1994\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 2.7460938,0.0859375 c -0.1567163,3e-8 -0.2914586,0.07367204 -0.3789063,0.18945313 C 2.2797398,0.39117171 2.2300544,0.54136545 2.1972656,0.71875 c -0.065577,0.3547691 -0.0625,0.8236122 -0.0625,1.3378906 0,0.5142784 -0.00308,0.9811683 0.0625,1.3359375 0.032788,0.1773846 0.082474,0.3295313 0.1699219,0.4453125 0.087448,0.1157812 0.2221891,0.1894531 0.3789063,0.1894531 0.3134343,0 0.6597622,-0.2320725 0.9453125,-0.5859374 0.2855502,-0.353865 0.5039062,-0.841406 0.5039062,-1.3847657 0,-0.5433597 -0.218356,-1.0309007 -0.5039062,-1.3847656 C 3.405856,0.31801006 3.0595281,0.0859375 2.7460938,0.0859375 Z m 0,0.21484375 c 0.196823,0 0.5207148,0.18541461 0.7792968,0.50585938 0.258582,0.32044477 0.4570313,0.76439787 0.4570313,1.24999997 0,0.4856022 -0.1984493,0.9295552 -0.4570313,1.25 C 3.2668086,3.6270854 2.9429167,3.8125 2.7460938,3.8125 2.6476822,3.8125 2.5920753,3.7817592 2.5371094,3.7089844 2.4821435,3.6362095 2.4377356,3.5132859 2.4082031,3.3535156 2.3491381,3.0339751 2.3476563,2.5713242 2.3476563,2.0566406 c 0,-0.5146833 0.00148,-0.9792875 0.060547,-1.2988281 0.029533,-0.1597703 0.07394,-0.28074067 0.1289063,-0.35351562 0.054966,-0.072775 0.1105744,-0.10351561 0.2089844,-0.10351563 z\",\n    id: \"path1996\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 1.4882812,0.09765625 c -0.3134344,0 -0.66171528,0.23207255 -0.94726558,0.5859375 C 0.25546533,1.0374587 0.03710938,1.5249996 0.03710937,2.0683594 c 0,0.5433597 0.21835596,1.0309007 0.50390625,1.3847656 0.2855503,0.3538649 0.63383118,0.5839844 0.94726558,0.5839844 0.1567172,-1e-7 0.2914583,-0.071719 0.3789063,-0.1875 0.087448,-0.1157812 0.1371335,-0.2679279 0.1699219,-0.4453125 0.065577,-0.3547692 0.0625,-0.8216592 0.0625,-1.3359375 0,-0.5142785 0.00308,-0.9831215 -0.0625,-1.33789065 C 2.0043206,0.5530842 1.9546352,0.40289046 1.8671875,0.28710938 1.7797398,0.17132829 1.6449975,0.09765628 1.4882812,0.09765625 Z m 0,0.21484375 c 0.09841,2e-8 0.1540186,0.0307407 0.2089844,0.10351563 0.054966,0.0727749 0.099374,0.19374531 0.1289063,0.35351562 0.059066,0.31954065 0.058594,0.78414475 0.058594,1.29882815 0,0.5146835 4.713e-4,0.9773345 -0.058594,1.296875 -0.029532,0.1597702 -0.07394,0.2826939 -0.1289063,0.3554687 -0.054966,0.072775 -0.1105728,0.1035156 -0.2089844,0.1035157 -0.196823,0 -0.52266797,-0.1854147 -0.78124995,-0.5058594 -0.25858198,-0.3204448 -0.45507812,-0.7643979 -0.45507812,-1.25 0,-0.4856022 0.19649614,-0.9295553 0.45507812,-1.25000002 C 0.96561323,0.4979146 1.2914582,0.3125 1.4882812,0.3125 Z\",\n    id: \"path1204-3\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDip);\nexport default __webpack_public_path__ + \"static/media/dip.4ab1e1ee.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgJcoup(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g2792\",\n    transform: \"translate(-0.12942697,-0.24771585)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 0.86132813,2.609375 a 0.25,0.25 0 0 0 -0.25000001,0.25 c 0,0.4485824 0.23846935,0.8635994 0.62695308,1.0878906 0.3884838,0.2242913 0.8693287,0.2242912 1.2578126,0 C 2.8845776,3.7229744 3.125,3.3079575 3.125,2.859375 a 0.25,0.25 0 0 0 -0.25,-0.25 0.25,0.25 0 0 0 -0.25,0.25 c 0,0.2707514 -0.1444286,0.5208743 -0.3789062,0.65625 -0.2344777,0.1353757 -0.523335,0.1353757 -0.7578126,0 C 1.2538037,3.3802493 1.1113281,3.1301264 1.1113281,2.859375 a 0.25,0.25 0 0 0 -0.24999997,-0.25 z\",\n    id: \"path2096\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 V 2.859375 a 0.25,0.25 0 0 0 0.25,0.25 0.25,0.25 0 0 0 0.25,-0.25 V 0.86328125 a 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1171875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 0.25,0.25 0 0 0 0.25,0.24999995 h 1.5136719 a 0.25,0.25 0 0 0 0.25,-0.24999995 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453-6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJcoup);\nexport default __webpack_public_path__ + \"static/media/jcoup.2bc45a9a.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEuler(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g23220\",\n    transform: \"translate(-0.12438843,0.37954715)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.70134777,2.576951 H 3.7807629 V 3.0747627 H 0.70134777 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247-3\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    transform: \"rotate(-45)\",\n    d: \"M -1.5022547,2.2452056 H 1.5771604 V 2.7430173 H -1.5022547 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.95025361,2.8258569 A 0.24890584,0.24890584 0 0 1 0.70134777,3.0747628 0.24890584,0.24890584 0 0 1 0.45244193,2.8258569 0.24890584,0.24890584 0 0 1 0.70134777,2.5769511 0.24890584,0.24890584 0 0 1 0.95025361,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 3.1277298,0.64838237 A 0.24890584,0.24890584 0 0 1 2.878824,0.8972882 0.24890584,0.24890584 0 0 1 2.6299182,0.64838237 0.24890584,0.24890584 0 0 1 2.878824,0.39947653 0.24890584,0.24890584 0 0 1 3.1277298,0.64838237 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5-6\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 4.0296685,2.8258569 A 0.24890584,0.24890584 0 0 1 3.7807627,3.0747628 0.24890584,0.24890584 0 0 1 3.5318568,2.8258569 0.24890584,0.24890584 0 0 1 3.7807627,2.5769511 0.24890584,0.24890584 0 0 1 4.0296685,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-6\",\n    style: {\n      fill: \"#505050\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: 8.64555,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 2.0206488,1.4219955 1.735275,1.725696 A 1.5092943,1.5092943 0 0 1 2.2104616,2.811338 L 2.6276135,2.807408 A 1.9264272,1.9264272 0 0 0 2.0206488,1.4219955 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEuler);\nexport default __webpack_public_path__ + \"static/media/euler.04feefb4.svg\";\nexport { ForwardRef as ReactComponent };","import './MVIcon.css';\n\nimport React from 'react';\n\nimport { ReactComponent as MSIcon } from './ms.svg';\nimport { ReactComponent as EFGIcon } from './efg.svg';\nimport { ReactComponent as DipIcon } from './dip.svg';\nimport { ReactComponent as JcoupIcon } from './jcoup.svg';\nimport { ReactComponent as EulerIcon } from './euler.svg';\n\nconst icons = {\n    ms: MSIcon,\n    efg: EFGIcon,\n    dip: DipIcon,\n    jcoup: JcoupIcon,\n    euler: EulerIcon\n};\n\nfunction MVIcon(props) {\n\n    if (!(props.icon in icons)) {\n        throw new Error('Invalid icon in MVIcon');\n    }\n\n    const Icon = icons[props.icon];\n    const color = (props.color || '#ffffff');\n\n    return (\n        <Icon className='mv-icon' style={{'--path-fill': color}} {...props}/>\n        );\n}\n\nexport default MVIcon;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewHeader.css';\nimport logo from '../icons/logo.svg';\nimport { FaSun, FaMoon, FaRegFolderOpen, FaMousePointer, FaFile } from 'react-icons/fa';\n\nimport React from 'react';\nimport MVCustomSelect, { MVCustomSelectOption } from '../controls/MVCustomSelect';\nimport MVIcon from '../icons/MVIcon';\nimport { useAppInterface } from './store';\n\nfunction ThemeSwitcher() {\n\n    const appint = useAppInterface();\n\n    const other = {\n        dark: 'light',\n        light: 'dark'\n    };\n\n    return (<div id='mv-themeswitch' onClick={() => { appint.theme = other[appint.theme]; }}>\n        <div id='mv-themeicons' className={appint.theme}>\n            <FaMoon id='mv-themedark'/>\n            <FaSun id='mv-themelight'/>\n        </div>\n    </div>);\n}\n\nfunction MagresViewHeader() {\n\n    const appint = useAppInterface();\n\n    return (<header className='mv-header'>\n        <div className='mv-header-left'>\n            <img src={logo} alt='MagresView logo' id='mv-header-logo'></img>\n            <h3 id='mv-header-title'>\n                <span style={{color: 'var(--ms-color-2)'}}>M</span>agres<span style={{color: 'var(--efg-color-2)'}}>V</span>iew 2.0\n            </h3>\n        </div>\n        <div className='mv-header-right'>\n            <MVCustomSelect onSelect={(v) => { appint.sidebar = v; }} selected={appint.sidebar}>\n                <MVCustomSelectOption value='load' icon={<FaRegFolderOpen />}>Load file</MVCustomSelectOption>\n                <MVCustomSelectOption value='select' icon={<FaMousePointer />}>Select and display</MVCustomSelectOption>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>Magnetic Shielding</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>Electric Field Gradient</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='jcoup' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='euler' icon={<MVIcon icon='euler' color='var(--bkg-color-3)'/>}>Euler Angles</MVCustomSelectOption>\n                <MVCustomSelectOption value='files' icon={<FaFile />}>Report files</MVCustomSelectOption>\n            </MVCustomSelect>            \n            <span className='mv-hor-sep-3'></span>\n            <ThemeSwitcher />\n        </div>\n    </header>);\n}\n\nexport default MagresViewHeader;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewScreenshot.css';\n\nimport { FaCamera } from 'react-icons/fa';\nimport useAppInterface from './store/interfaces/AppInterface';\nimport { saveImage } from '../utils';\n\n\nfunction MagresViewScreenshot(props) {\n\n    const appint = useAppInterface();\n\n    function takeScreenshot() {\n        let data = appint.viewer.getScreenshotData();\n        saveImage(data, 'MagresViewScreenshot.png');\n    }\n\n    return (<div className='mv-sshot' onClick={takeScreenshot}>\n        <FaCamera />\n        <div className='mv-sshot-text'>\n            Take a screenshot\n        </div>\n    </div>);\n}\n\nexport default MagresViewScreenshot;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewSidebar.css';\n\nimport React from 'react';\n\nimport { chainClasses } from '../../utils';\n\nfunction MagresViewSidebar(props) {\n    return (<div className={chainClasses('mv-sidebar', props.show? 'open' : '')}>\n        {props.title? <h2>{props.title}</h2> : null}\n        {props.children}\n    </div>);\n}\n\nexport default MagresViewSidebar;","import './MVFile.css';\nimport { chainClasses } from '../utils';\n\nimport React from 'react';\n\nfunction MVFile(props) {\n\n    function onChange(e) {\n        if (props.onSelect) {\n            var files = e.target.files;\n            if (files.length > 0) {\n                props.onSelect(files);\n            }\n        }\n        e.target.value = null;\n    }\n\n    return (\n        <input className={chainClasses('mv-control', 'mv-file', props.notext? 'hide-text' : null)} type='file' \n            accept={props.filetypes} \n            onChange={onChange} \n            multiple={props.multiple}\n        />\n    );\n}\n\nexport default MVFile;","import './MVBox.css';\nimport React from 'react';\nimport { GrFormClose } from 'react-icons/gr';\n\nimport { chainClasses } from '../utils';\n\nfunction MVBox(props) {\n\n    const status_class = (props.status)? 'mv-box-' + props.status : '';\n    const onClose = props.onClose || (() => {});\n\n    return (<div className={chainClasses('mv-control', 'mv-box', status_class)}>\n        <div className='mv-box-header'><GrFormClose onClick={onClose} size={22}/></div>\n        {props.children}\n    </div>);\n}\n\nexport default MVBox;","import './MVCheckBox.css';\n\nimport React from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVCheckBox(props) {\n\n    const id = useId('checkbox');\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    const onCheck = props.onCheck || (() => {});\n\n    return (\n        <span className='mv-control mv-checkbox' style={style} title={props.title}>\n            <input id={id} type='checkbox' checked={props.checked} onChange={(e) => onCheck(e.target.checked)}/>\n            <label htmlFor={id}/>{props.children}\n        </span>\n    );\n}\n\nexport default MVCheckBox;","import './controls.css';\nimport './MVListSelect.css';\n\nimport React, { cloneElement } from 'react';\n\nimport { chainClasses } from '../utils';\n\nfunction MVListSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className={chainClasses('mv-control', 'mv-lselect-opt', props.selected? 'mv-lselected': null)} \n             onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVListSelect(props) {\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVListSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    return (\n        <div className='mv-control mv-lselect' title={props.title}>\n            {options.map((o, i) => {\n                return cloneElement(o, {key: i, selected: (i === selected),\n                                        onClick: () => { onSelect(values[i]); }});\n            })}\n        </div>\n    );\n}\n\n\nexport { MVListSelectOption };\nexport default MVListSelect;","import MagresViewSidebar from './MagresViewSidebar';\n\nimport { AiFillEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { MdDeleteForever } from 'react-icons/md';\n\nimport MVFile from '../../controls/MVFile';\nimport MVBox from '../../controls/MVBox';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVListSelect, { MVListSelectOption } from '../../controls/MVListSelect';\nimport { useAppInterface } from '../store';\n\nimport React, { useState } from 'react';\n/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\n// Accepted file formats\nconst file_formats = ['.cif', '.xyz', '.magres', '.cell'];\n\nfunction MVSidebarLoad(props) {\n\n    const [ state, setState ] = useState({\n        load_message: '',\n        load_message_status: null,\n        list_selected: ''\n    });\n\n    const appint = useAppInterface();\n    const models = appint.models;\n\n    console.log('[MVSidebarLoad rendered]');\n\n    // Methods\n    function loadModel(f) {\n\n        appint.load(f, (success) => {\n            // Check success\n            let msg = '';\n            let err = false;\n            _.map(success, (v, n) => {\n                if (v !== 0) {\n                    msg += 'Error parsing file ' + n + ': ' + v + '\\n';\n                    err = true;\n                }\n            });\n            if (msg === '') {\n                msg = 'All files parsed successfully!'\n            }\n\n            setState({\n                ...state,\n                load_message: msg, \n                load_message_status: err? 'error' : 'success'\n            });\n        });\n    }\n\n    function makeModelOption(m, i) {\n\n        let model_icon;        \n        if (m === appint.currentModelName) {\n            model_icon = <AiFillEye size={22}/>;\n        }\n        else {\n            model_icon = <AiOutlineEyeInvisible size={22} onClick={() => { appint.display(m); }} />\n        }\n\n        return (<MVListSelectOption key={i} value={m} icon={model_icon}>\n            {m}\n            <MdDeleteForever style={{color: 'var(--err-color-2)'}} size={22} onClick={() => { appint.delete(m); }} />\n        </MVListSelectOption>);\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Load file'>\n        <div className='mv-sidebar-block'>\n            <MVFile filetypes={file_formats.join(',')} onSelect={loadModel} notext={true} multiple={true}/>\n            <MVCheckBox onCheck={(v) => { appint.loadAsMol = v }} checked={appint.loadAsMol}>Load as molecular crystal</MVCheckBox>\n            <MVCheckBox onCheck={(v) => { appint.useNMRIsotopes = v }} checked={appint.useNMRIsotopes}>Use only NMR active isotopes</MVCheckBox>\n        </div>\n        <h4>Models:</h4>\n        <MVListSelect selected={state.list_selected} onSelect={(v) => { setState({...state, list_selected: v}); }}>\n            {models.map(makeModelOption)}\n        </MVListSelect>\n        <span className='sep-1' />\n        <MVBox status={state.load_message_status} onClose={() => {setState({...state, load_message_status: ''})}}>\n            {state.load_message}\n        </MVBox>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarLoad;","import './MVButton.css';\nimport React from 'react';\n\nfunction MVButton(props) {\n    return (\n    <div className='mv-control'>\n        <button {...props} className='mv-control mv-button'>\n            {props.children}\n        </button>\n    </div>);\n}\n\nexport default MVButton;","import './MVRadioButton.css';\nimport _ from 'lodash';\n\nimport React, { cloneElement } from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVRadioButton(props) {\n\n    const uid = useId('radiobutton');\n\n    return (<span className='mv-control mv-radio' title={props.title}>\n        <input id={uid} name={props.name} type=\"radio\" checked={props.checked} onChange={props.onChange}/>\n        <label htmlFor={uid}></label>{props.children}\n    </span>);\n}\n\nfunction MVRadioGroup(props) {\n\n    // Which children are buttons?\n    const buttons = _.filter(props.children, (c) => c.type === MVRadioButton);\n    const values = buttons.map((b) => b.props.value);\n\n    // Find the index of the one we want selected\n    const selected = values.findIndex((v) => v === props.selected);\n    const onChange = props.onSelect? props.onSelect : (() => {});\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    return(<span className='mv-control mv-radiogroup' style={style} title={props.title}>\n        {props.label? <span className=\"mv-radiogroup-label\" style={props.labelStyle}>{props.label}</span> : null}\n        {buttons.map((b, i) => {\n            return cloneElement(b, {key: i, \n                index: i, \n                checked: (i === selected), \n                name: props.name, \n                onChange: (e) => { onChange(b.props.value); }\n            });\n        })}\n    </span>);\n}\n\nexport { MVRadioGroup };\nexport default MVRadioButton;","import './MVText.css';\n\nimport React, { useState } from 'react';\n\nimport { chainClasses, useId } from '../utils';\n\nfunction MVText(props) {\n\n    const [submitted, setSubmitted] = useState(true);\n    const id = useId('text');\n\n    var filter = null;\n    if (props.filter)\n        filter = new RegExp(props.filter);\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n    }\n\n    const waitSubmit = (props.onSubmit && !submitted);\n\n    function onChange(e) {\n        var v = e.target.value;\n        if (filter) {\n            let m = filter.exec(v)\n            v = m? m[0] : props.value;\n        }\n        setSubmitted(false);\n        if(props.onChange)\n            props.onChange(v);\n    }\n\n    function onKeyDown(e) {\n        if (e.key === 'Enter') {\n            if (waitSubmit)\n                props.onSubmit(props.value);\n            setSubmitted(true);\n        }\n    }\n\n    return (\n    <span className='mv-text' style={style} title={props.title}>\n        {props.children? <label htmlFor={id} className='mv-textlabel'>{props.children}</label> : <></>}\n        <input type='text' id={id} className={chainClasses('mv-control mv-textfield', waitSubmit? 'mv-submit-wait' : '')} \n            size={props.size} value={props.value}\n            onChange={onChange} onKeyDown={onKeyDown}\n            disabled={props.disabled}\n        />\n    </span>);\n}\n\nexport default MVText;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarSelect.css';\n\nimport _ from 'lodash';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useSelInterface } from '../store';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVText from '../../controls/MVText';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\n\nfunction sharedElement(sel) {\n    if (sel == null || sel.atoms.length === 0) {\n        return null;\n    }\n\n    let atoms = sel.atoms;\n    let el = atoms[0].element;\n\n    if (atoms.slice(1).reduce((s, a) => (s && a.element === el), true)) {\n        return el;\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction MVIsotopeSelection(props) {\n\n    // Actually unnecessary; we only use it to trigger a re-render\n    const [ state, setState ] = useState(1);\n\n    const selint = useSelInterface();\n    const selected = selint.selected;\n    const el = sharedElement(selected);\n\n    let elData = null;\n    let isoConf = null;\n    let selOptions = [];\n    let currentOption = 0;\n\n    if (el) {\n        // Information about that element?\n        elData = selected.atoms[0].elementData;\n        isoConf = selected.atoms.map((a) => a.isotope);\n\n        // Are they all the same?\n        currentOption = isoConf[0].toString();\n        if (!isoConf.reduce((s, x) => s && x === isoConf[0], true)) {\n            // If not, then we have to add a special option that reproduces this last\n            // configuration\n            selOptions = [<MVCustomSelectOption key={-1} value={isoConf}>\n                {_.join(_.uniq(isoConf))}\n            </MVCustomSelectOption>];\n            currentOption = isoConf;\n        }\n\n        // Generate options\n        let keys = Object.keys(elData.isotopes).sort();\n        selOptions = selOptions.concat(keys.map((A, i) => (<MVCustomSelectOption key={i} value={A}>\n                {A}\n            </MVCustomSelectOption>))\n        );\n    }\n    else {\n        selOptions = [<MVCustomSelectOption key={0} value={0}>N/A</MVCustomSelectOption>];\n    }\n\n    // This component handles specifically just the selection of isotopes\n    return (<>\n        <h3>Isotope selection</h3>\n        <MVCustomSelect disabled={!el} onSelect={(A) => { selint.setIsotope(A); setState(-state); }} selected={currentOption}>{selOptions}</MVCustomSelect>\n    </>);\n}\n\n\nfunction MVSidebarSelect(props) {\n\n    const selint = useSelInterface();\n\n    console.log('[MVSidebarSelect rendered]');\n\n    function selectMode(v) {\n        selint.selectionMode = v;\n    }\n\n    function setR(v) {\n        selint.selectionSphereR = v;\n    }\n\n    function setN(v) {\n        selint.selectionBondN = v;\n    }\n\n    const selRef = useRef();\n    selRef.current = selint;\n\n    useEffect(() => {\n        console.log('Binding select clicks');\n        let selint = selRef.current;\n        selint.selectionOn = props.show;\n    }, [props.show, selint.app]); // The dependency on app guarantees this is executed AFTER the app itself is loaded\n\n    return (<MagresViewSidebar show={props.show} title='Select and display'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={selint.showCrystLabels} onCheck={(v) => { selint.showCrystLabels = v }}>Show crystallographic labels</MVCheckBox>        \n            <MVCheckBox checked={selint.highlightSelected} onCheck={(v) => { selint.highlightSelected = v }}>Highlight selected</MVCheckBox>        \n            <MVCheckBox checked={selint.showCell} onCheck={(v) => { selint.showCell = v }}>Show unit cell</MVCheckBox>        \n            <span className='sep-1' />\n            <MVRadioGroup label='Selection mode' onSelect={selectMode} selected={selint.selectionMode} name='selec_mode_radio'>\n                <MVRadioButton value='atom'>Atom</MVRadioButton>\n                <MVRadioButton value='element'>Element</MVRadioButton>\n                <MVRadioButton value='sphere'>Sphere, radius =&nbsp;\n                    <MVText size='5' value={selint.selectionSphereR} filter='[0-9]*(?:\\.[0-9]*)?' onChange={setR} onSubmit={setR} />&nbsp;  &#8491;\n                </MVRadioButton>\n                <MVRadioButton value='molecule'>Molecule</MVRadioButton>\n                <MVRadioButton value='bonds'>Bonds, max distance = &nbsp;\n                    <MVText size='3' value={ selint.selectionBondN } filter='[0-9]*' onChange={setN} onSubmit={setN} />\n                </MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <div className='mv-sidebar-grid'>\n                <MVButton onClick={() => { selint.selected = selint.displayed }}>Select visible</MVButton>\n                <MVButton onClick={() => { selint.selected = null }}>Select none</MVButton>                \n                <MVButton onClick={() => { selint.displayed = selint.selected }}>Display selected</MVButton>\n                <MVButton onClick={() => { selint.displayed = null }}>Reset displayed</MVButton>                \n            </div>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVIsotopeSelection />\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Selection controls:</h3>\n            <ul>\n                <li><tt>CLICK</tt> to select an atom/element/etc.</li>\n                <li><tt>SHIFT+CLICK</tt> to add to the current selection</li>\n                <li><tt>CTRL+CLICK</tt> to add or remove (XOR) from the current selection</li>\n            </ul>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarSelect;","import './MVRange.css';\nimport './MVText.css'; \n\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { regularExpressions, useId } from '../utils';\nimport MVText from './MVText';\n\nfunction MVRange(props) {\n\n    // Range definition\n    const min = 'min' in props? props.min : 0;\n    const max = 'max' in props? props.max : 100;\n    const step = 'step' in props? props.step : 1;\n\n    function toNumber(v) {\n        v = parseFloat(v);\n        v = Math.min(v, max);\n        v = Math.max(v, min);\n        v = Math.round(v/step)*step;\n        return v;\n    }\n\n    const in_val = (props.value != null? toNumber(props.value) : min);\n    const id = useId('range');\n\n    const [text, setText] = useState(in_val.toString());\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n        style['--thumb-color'] = props.color;\n    }\n\n    function acceptValue(v) {\n        v = toNumber(v);\n\n        if (props.onChange)\n            props.onChange(v);\n    }\n\n    let stateRef = useRef();\n    stateRef.current = [text, setText];\n\n    // Update the text value if the props one changed and if necessary\n    useEffect(() => {\n        const [text, setText] = stateRef.current;\n\n        if (parseFloat(text) !== in_val)\n            setText(in_val.toString());\n    }, [in_val]);\n\n\n    return (\n        <div className='mv-control'>\n            {props.children? <label htmlFor={id} className='mv-rangelabel'>{props.children}</label> : <></>}            \n            <span className='mv-control mv-range' style={style}>\n                <input className='mv-range-slider' type='range' id={id} onInput={(e) => { acceptValue(e.target.value); }}\n                 min={min} max={max} step={step} value={in_val} disabled={props.disabled}/>\n                <MVText size={4} filter={regularExpressions.float} value={text} onChange={setText} onSubmit={acceptValue} disabled={props.disabled}/>\n            </span>\n        </div>);\n}\n\nexport default MVRange;","import './controls.css';\nimport './MVModal.css';\n\nimport React, { useEffect, useReducer } from 'react';\nimport { IconContext } from 'react-icons';\nimport { IoClose } from 'react-icons/io5';\n\nimport { chainClasses } from '../utils';\n\nimport MVButton from './MVButton';\n\nfunction modalReducer(state, action={}) {\n    switch(action.type) {\n        case 'dragstart': \n            state = {\n                ...state,\n                is_drag: true,\n                x0: action.x0,\n                y0: action.y0\n            };\n            break;\n        case 'move':\n            state = {\n                ...state,\n                dx: action.dx-state.x0,\n                dy: action.dy-state.y0\n            };\n            break;\n        case 'dragend': \n            state = {\n                ...state,\n                is_drag: false,\n                x0: null,\n                y0: null\n            };\n            break;\n        default: \n            break;\n    }\n\n    return state;\n}\n\nfunction MVModal(props) {\n\n    const [state, dispatch] = useReducer(modalReducer, {\n        dx: 0,\n        dy: 0,\n        x0: null,\n        y0: null,\n        is_drag: false\n    });\n\n    const onAccept = props.onAccept || (() => {});\n    const onClose = props.onClose || (() => {});\n\n    function onTitleMouseDown(e) {\n\n        if (props.draggable && e.button === 0) {\n            dispatch({\n                type: 'dragstart',\n                x0: e.clientX-state.dx,\n                y0: e.clientY-state.dy\n            });\n        }\n    }\n\n    useEffect(() => {\n\n        if (state.is_drag) {\n            document.onmousemove = (e) => {\n                dispatch({\n                    type: 'move',\n                    dx: e.clientX,\n                    dy: e.clientY\n                });                \n            }\n\n            document.onmouseup = (e) => {\n                dispatch({\n                    type: 'dragend'\n                });\n            }\n        }\n        else {\n            document.onmousemove = null;\n            document.onmouseup = null;\n        }\n\n    }, [state.is_drag]);\n\n    const modalStyle = {\n        transform: 'translate(' + state.dx + 'px, ' + state.dy + 'px)'\n    };\n\n    const hasOverlay = props.hasOverlay;\n\n    let modal = (<div className={chainClasses('mv-control mv-modal', props.draggable? 'mv-modal-draggable' : '', \n                                              props.resizable? 'mv-modal-resizable' : '')} style={modalStyle}>\n        <div className='mv-modal-title' onMouseDown={onTitleMouseDown}>\n            {props.title} \n            <IconContext.Provider value={{color: 'var(--fwd-color-1)'}}>\n                <IoClose size={22} onClick={onClose}/>\n            </IconContext.Provider>\n        </div>\n        <div className='mv-modal-content'>\n            {props.children}                \n        </div>\n        <div className='mv-modal-footer'>\n            <MVButton onClick={onAccept}>OK</MVButton>\n            <MVButton onClick={onClose}>Cancel</MVButton>\n        </div>\n    </div>);\n\n    if (hasOverlay) {\n        modal = (<div className={chainClasses('mv-control mv-modal-overlay', props.display? '' : 'mv-modal-hidden')}>\n            {modal}\n        </div>);\n    }\n\n    return modal;\n}\n\nexport default MVModal;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarMS.css';\n\nimport _ from 'lodash';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useMSInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVModal from '../../controls/MVModal';\nimport MVText from '../../controls/MVText';\n\nfunction MVReferenceTable(props) {\n\n    const msint = useMSInterface();\n    const [ refTable, setRefTable ] = useState(msint.referenceTable);\n\n    // We store a copy of the reference list internally; it only gets set on\n    // the interface once we click OK. This is to avoid needless expensive \n    // operations when typing text in the fields, especially if the CS labels\n    // are on.\n    \n    const intRef = useRef();\n    intRef.current = msint;\n\n    useEffect(() => {\n        setRefTable(intRef.current.referenceTable);\n    }, [props.display]);\n\n    const elements = _.keys(refTable).sort();\n\n    function copyAll(v) {\n        setRefTable(_.fromPairs(elements.map((el) => [el, v])));\n    }\n\n    return (\n    <MVModal title='References for chemical shifts, by element (ppm)' display={props.display} hasOverlay={true}\n             onClose={props.close} onAccept={() => { msint.updateReferenceTable(refTable); props.close(); }}>\n        <div className='mv-msref-table'>\n            {elements.map((el, i) => {\n                const ref = refTable[el];\n\n                return (<div key={i} className='mv-msref-table-row'>\n                            <div className='mv-msref-table-el'>{el}</div>\n                            <div className='mv-msref-table-ref'>\n                                <MVText value={ref} onChange={(v) => { setRefTable({...refTable, [el]: v}) }} size={5}/>\n                            </div>\n                            <div className='mv-msref-table-copy'>\n                                <MVButton onClick={() => { copyAll(ref); }}>Apply to all</MVButton>\n                            </div>\n                        </div>);\n            })}\n        </div>\n    </MVModal>);\n}\n\n\nfunction MVSidebarMS(props) {\n\n    const [ state, setState ] = useState({\n        showRefTable: false\n    });\n\n    const msint = useMSInterface();\n\n    console.log('[MVSidebarMS rendered]');\n\n    var has_ms = false;\n    if (props.show) {\n        has_ms = msint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Magnetic Shielding'>\n        <div className={chainClasses('mv-sidebar-block', has_ms? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { msint.hasEllipsoids = v; }} checked={msint.hasEllipsoids}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.01} max={0.5} step={0.005} value={msint.ellipsoidScale}\n                      onChange={(s) => { msint.ellipsoidScale = s; }} disabled={!msint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { msint.ellipsoidScale = 0; }} disabled={!msint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { msint.labelsMode = v; }} selected={msint.labelsMode} name='ms_label_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='cs'>Chemical Shifts (ppm, uses references)</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { msint.colorScaleType = v; }} selected={msint.colorScaleType} disabled={!msint.colorScaleAvailable} name='ms_cscale_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='ms_iso'>Isotropy</MVRadioButton>\n                <MVRadioButton value='ms_cs'>Chemical Shifts (uses references)</MVRadioButton>\n                <MVRadioButton value='ms_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='ms_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVButton onClick={() => { setState({...state, showRefTable: true}) }}>Set References</MVButton>\n             <MVReferenceTable display={state.showRefTable} close={() => { setState({...state, showRefTable: false}) }}/>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_ms? 'hidden': '')}>No MS data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarMS;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEFG.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEFGInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport React from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nfunction MVSidebarEFG(props) {\n\n    const efgint = useEFGInterface();\n\n    console.log('[MVSidebarEFG rendered]');\n\n    var has_efg = false;\n    if (props.show) {\n        has_efg = efgint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Electric Field Gradient'>\n        <div className={chainClasses('mv-sidebar-block', has_efg? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { efgint.hasEllipsoids = v; }} checked={ efgint.hasEllipsoids } color={'var(--efg-color-2)'}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.1} max={10.0} step={0.05} value={efgint.ellipsoidScale} color={'var(--efg-color-2)'}\n                      onChange={(s) => { efgint.ellipsoidScale = s; }} disabled={!efgint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { efgint.ellipsoidScale = 0; }} disabled={!efgint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { efgint.labelsMode = v; }} selected={efgint.labelsMode} name='efg_label_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (au)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='Q'>Quadrupole Coupling (kHz)</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { efgint.colorScaleType = v; }} selected={ efgint.colorScaleType } disabled={!efgint.colorScaleAvailable}\n                           name='efg_cscale_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='efg_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='efg_asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='efg_Q'>Quadrupole Coupling</MVRadioButton>\n             </MVRadioGroup>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_efg? 'hidden' : '')}>No EFG data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEFG;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarDip.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useDipInterface } from '../store';\n\n\nfunction MVSidebarDip(props) {\n\n    const dipint = useDipInterface();\n\n    console.log('[MVSidebarDip rendered]');\n\n    const intRef = useRef();\n    intRef.current = dipint;\n\n    useEffect(() => {\n        let dipint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && dipint.isOn) {\n            dipint.bind();\n        }\n        else {\n            dipint.unbind();\n        }\n\n    }, [props.show, dipint.isOn]);\n\n    return (<MagresViewSidebar show={props.show} title='Dipolar couplings'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.isOn = v; }} checked={ dipint.isOn } >Show dipolar couplings</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-block'>\n            <p>\n                Click on an atom to show all dipolar couplings in a radius.\n                (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n            </p>\n             <MVRange min={1.0} max={20.0} step={0.05} value={dipint.radius} color={'var(--dip-color-3)'}\n                      onChange={(s) => { dipint.radius = s; }}>Selection radius</MVRange>\n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.showSphere = v; }} checked={ dipint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.homonuclearOnly = v; }} checked={ dipint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarDip;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarJCoup.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useJCoupInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\n\nfunction MVSidebarJCoup(props) {\n\n    const jcint = useJCoupInterface();\n\n    console.log('[MVSidebarJCoup rendered]');\n\n    const intRef = useRef();\n    intRef.current = jcint;\n\n    useEffect(() => {\n        let jcint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && jcint.isOn) {\n            jcint.bind();\n        }\n        else {\n            jcint.unbind();\n        }\n\n    }, [props.show, jcint.isOn]);\n\n    var has_jc = false;\n    if (props.show) {\n        has_jc = jcint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='J couplings'>\n        <div className={has_jc? '' : 'hidden'}>\n            <div className='mv-sidebar-block'>\n                <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.isOn = v; }} checked={ jcint.isOn } >Show J couplings</MVCheckBox>\n            </div>\n            <div className='mv-sidebar-block'>\n                <p>\n                    Click on an atom to show all dipolar couplings in a radius.\n                    (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n                </p>\n                 <MVRange min={1.0} max={20.0} step={0.05} value={jcint.radius} color={'var(--jcoup-color-3)'}\n                          onChange={(s) => { jcint.radius = s; }}>Selection radius</MVRange>\n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.showSphere = v; }} checked={ jcint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.homonuclearOnly = v; }} checked={ jcint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n            </div>\n        </div>\n         <div className={chainClasses('mv-warning-noms', has_jc? 'hidden': '')}>No ISC data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarJCoup;","import './MVSwitch.css';\nimport { chainClasses } from '../utils';\n\nfunction MVSwitch(props) {\n\n    const style = {\n        '--color-true': props.colorTrue || 'var(--ok-color-2)',\n        '--color-false': props.colorFalse || 'var(--err-color-2)'\n    };\n\n    const onClick = props.onClick || (() => {});\n\n    return (<div className={chainClasses('mv-control mv-switch', props.on? 'mv-switch-true' : 'mv-switch-false')} \n        style={style} onClick={onClick}>\n        <div className='mv-switch-thumb'></div>\n    </div>);\n}\n\nexport default MVSwitch;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEuler.css';\n\nimport { useRef, useEffect } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEulerInterface } from '../store';\nimport { saveContents, copyContents } from '../../utils';\n\nimport MVSwitch from '../../controls/MVSwitch';\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport { FaCopy } from 'react-icons/fa';\n\nfunction MVSidebarEuler(props) {\n\n    const eulint = useEulerInterface();\n\n    console.log('[MVSidebarEuler rendered]');\n\n    const intRef = useRef();\n    intRef.current = eulint;\n\n    useEffect(() => {\n        let eulint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show) {\n            eulint.bind();\n        }\n        else {\n            eulint.unbind();\n        }\n\n    }, [props.show]);\n\n    const otherTensor = {\n        ms: 'efg',\n        efg: 'ms'\n    };\n\n    // Round values\n    let a = eulint.alpha;\n    let b = eulint.beta;\n    let c = eulint.gamma;\n\n    if (a !== 'N/A') {\n        // It's a number\n        a = a.toFixed(2);\n        b = b.toFixed(2);\n        c = c.toFixed(2);\n    }\n\n    const hasSel = (eulint.atomA && eulint.atomB);\n\n    return (<MagresViewSidebar show={props.show} title='Euler angles'>\n        <p>\n            Left (right) click on atoms to pick atom A (B). Choose with the \n            switches below which NMR tensor you care about for each, and\n            the Euler angles between them will be automatically printed out.\n        </p>\n        <div className='mv-sidebar-block'>\n            <h3>Atom A</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelA}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorA === 'efg' } onClick={() => { eulint.tensorA = otherTensor[eulint.tensorA]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Atom B</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelB}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorB === 'efg' } onClick={() => { eulint.tensorB = otherTensor[eulint.tensorB]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Convention</h3>\n            <MVCustomSelect selected={eulint.convention} onSelect={(v) => { eulint.convention = v; }}>\n                <MVCustomSelectOption value='zyz'>ZYZ</MVCustomSelectOption>\n                <MVCustomSelectOption value='zxz'>ZXZ</MVCustomSelectOption>\n            </MVCustomSelect>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Angles</h3>\n            <table className='mv-eul-results'>\n                <thead>\n                    <tr>\n                        <td>Alpha</td>\n                        <td>Beta</td>\n                        <td>Gamma</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{a}&deg;</td>\n                        <td>{b}&deg;</td>\n                        <td>{c}&deg;</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { copyContents(eulint.txtReport()); }} disabled={!hasSel}><FaCopy />&nbsp;Copy to clipboard</MVButton>            \n        </div>\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { saveContents('data:,' + eulint.txtSelfAngleTable(), 'eulerTable.txt'); }}  disabled={!(eulint.hasMSData && eulint.hasEFGData)}>\n                Download table of MS-to-EFG angles\n            </MVButton>            \n        </div>\n\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEuler;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarFiles.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport MVIcon from '../../icons/MVIcon';\n\nimport { useFilesInterface } from '../store';\nimport { saveContents } from '../../utils';\n\nconst saveFile = (c, fn) => { saveContents('data:,' + c, fn); }\n\nfunction MVSidebarFiles(props) {\n\n    const fileint = useFilesInterface();\n\n    return (<MagresViewSidebar title='Report files' show={props.show}>\n        <div className='mv-sidebar-block'>\n            <h3>File type:</h3>\n            <MVCustomSelect selected={fileint.fileType} onSelect={(v) => { fileint.fileType = v; }}>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>MS table</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>EFG table</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar coupling table</MVCustomSelectOption>\n                <MVCustomSelectOption value='isc' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J coupling table</MVCustomSelectOption>\n            </MVCustomSelect>\n            <MVButton onClick={() => { saveFile(fileint.generateFile(), fileint.fileName); }} disabled={!fileint.fileValid}>Save file</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarFiles;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './themes.css';\nimport '../controls/controls.css';\nimport './MagresViewApp.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { chainClasses } from '../utils';\nimport { useAppInterface } from './store';\n\nimport MagresViewHeader from './MagresViewHeader';\nimport MagresViewScreenshot from './MagresViewScreenshot';\n\nimport MVSidebarLoad from './sidebars/MVSidebarLoad';\nimport MVSidebarSelect from './sidebars/MVSidebarSelect';\nimport MVSidebarMS from './sidebars/MVSidebarMS';\nimport MVSidebarEFG from './sidebars/MVSidebarEFG';\nimport MVSidebarDip from './sidebars/MVSidebarDip';\nimport MVSidebarJCoup from './sidebars/MVSidebarJCoup';\nimport MVSidebarEuler from './sidebars/MVSidebarEuler';\nimport MVSidebarFiles from './sidebars/MVSidebarFiles';\n\n\nfunction MagresViewPage() {\n\n    const [hovered, setHovered] = useState(false);\n\n    let appint = useAppInterface();\n\n    const appRef = useRef(appint);\n\n    useEffect(() => {\n        appRef.current.initialise('#mv-appwindow');\n    }, []);\n\n\n    // Handling the dragging events\n    function handleDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handleDragEnter(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(true);        \n    }\n\n    function handleDragLeave(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(false);        \n    }\n\n    function handleDrop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            appint.load(e.dataTransfer.files)\n            e.dataTransfer.clearData()\n        }        \n        setHovered(false);\n    }\n\n    return (<div className={chainClasses('mv-main-page', 'theme-' + appint.theme, hovered? 'has-drag' : '' )}\n                 onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={handleDrop}>\n                <MagresViewHeader />\n                <MVSidebarLoad show={appint.sidebar === 'load'} />\n                <MVSidebarSelect show={appint.sidebar === 'select'} />\n                <MVSidebarMS show={appint.sidebar === 'ms'} />\n                <MVSidebarEFG show={appint.sidebar === 'efg'} />\n                <MVSidebarDip show={appint.sidebar === 'dip'} />\n                <MVSidebarJCoup show={appint.sidebar === 'jcoup'} />\n                <MVSidebarEuler show={appint.sidebar === 'euler'} />\n                <MVSidebarFiles show={appint.sidebar === 'files'} />\n                <div id='mv-appwindow' className='mv-background'/>\n                <MagresViewScreenshot />\n                <div className='drag-overlay' />\n            </div>);\n}\n\nfunction MagresViewApp() {\n\n    return (\n        <div className='mv-main-app'>\n            <MagresViewPage />\n        </div>\n    );\n}\n\nexport default MagresViewApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport MagresViewApp from './core/MagresViewApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport magresStore from './core/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={magresStore}>\n      <MagresViewApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}