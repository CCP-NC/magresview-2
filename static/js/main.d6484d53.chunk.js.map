{"version":3,"sources":["utils/utils-react.js","utils/utils-generic.js","utils/utils-regexp.js","utils/utils-nmr.js","utils/utils-rotation.js","utils/utils-events.js","core/store/utils.js","core/store/listeners/colors.js","core/store/listeners/ellipsoids.js","core/store/listeners/labels.js","core/store/listeners/links.js","core/store/listeners/euler.js","core/store/listeners/events.js","core/store/listeners/index.js","core/store/listeners/display.js","core/store/listeners/views.js","core/store/listeners/cell.js","core/store/listeners/cscales.js","core/store/interfaces/SelInterface.js","core/store/interfaces/CScaleInterface.js","core/store/interfaces/MSInterface.js","core/store/interfaces/EFGInterface.js","core/store/interfaces/DipInterface.js","core/store/interfaces/JCoupInterface.js","core/store/interfaces/EulerInterface.js","core/store/interfaces/AppInterface.js","core/store/interfaces/FilesInterface.js","core/store/store.js","core/store/index.js","icons/logo.svg","controls/MVCustomSelect.js","icons/ms.svg","icons/efg.svg","icons/dip.svg","icons/jcoup.svg","icons/euler.svg","icons/MVIcon.js","core/MagresViewHeader.js","core/MagresViewScreenshot.js","core/sidebars/MagresViewSidebar.js","controls/MVFile.js","controls/MVBox.js","controls/MVCheckBox.js","controls/MVListSelect.js","core/sidebars/MVSidebarLoad.js","controls/MVButton.js","controls/MVRadioButton.js","controls/MVText.js","core/sidebars/MVSidebarSelect.js","controls/MVRange.js","controls/MVModal.js","core/sidebars/MVSidebarMS.js","core/sidebars/MVSidebarEFG.js","core/sidebars/MVSidebarDip.js","core/sidebars/MVSidebarJCoup.js","controls/MVSwitch.js","core/sidebars/MVSidebarEuler.js","core/sidebars/MVSidebarFiles.js","core/MagresViewApp.js","reportWebVitals.js","index.js"],"names":["chainClasses","_","join","flatten","arguments","useId","prefix","useState","uniqueId","id","CallbackMerger","n","callback","this","_callback","_n","_arg","arg","Error","merge","centerDisplayed","app","pos","mview","positions","map","a","xyz","average","reduce","x","s","v","i","length","averagePosition","displayed","centerCamera","tableRow","values","width","precision","Number","isFinite","isInteger","toFixed","toString","ns","repeat","saveContents","data","filename","download","document","createElement","setAttribute","click","regularExpressions","Map","float","RegExp","int","alpha","alphanumeric","dipolarCoupling","a1","a2","g1","isotopeData","gamma","g2","r1","r","R","Math","sqrt","rnorm","PI","pow","jCoupling","T","getArrayValue","index","e","iscAtomicToHz","isotropy","rotationBetween","axes1","axes2","mjs","eulerFromRotation","convention","cosb","min","max","c","b","acos","abs","atan2","eulerBetweenTensors","T1","T2","ax1","haeberlen_eigenvectors","ax2","ClickHandler","codes","_callbacks","handler","forEach","code","onAtomClick","atom","event","cbacks","name","cback","makeSelector","extras","selector","state","ans","key","startsWith","indexOf","addPrefix","p","getSel","sel","selected","getNMRData","view","datatype","tenstype","reftable","units","tens_units","ms","efg","tensors","anisotropy","asymmetry","span","skew","el","atoms","element","haeberlen_eigenvalues","iD","efgAtomicToHz","Q","BaseInterface","dispatcher","_state","_dispatcher","action","msColor","efgColor","makeEllipsoidListener","color","pre_view","pre_on","pre_scale","app_viewer","current_view","next_view","on","scale","removeEllipsoids","avg","t","sum","eigenvalues","addEllipsoids","scalingFactor","opacity","msEllipsoidListener","efgEllipsoidListener","makeLabelListener","shiftfunc","pre_references","pre_type","label_texts","ref_table","mode","removeLabels","crystLabel","addLabels","shift","radius","height","selLabelListener","msLabelListener","efgLabelListener","makeCalculateLinksListener","pre_ca","pre_r","pre_homo","model","linkview","ghostreqs","sel_ghosts_requests","catom","hn","query","sphere","elements","find","makeDisplayLinksListener","pre_sph","current_link_names","removeGraphics","lname","label","linktype","J","getLinkLabel","addLink","dashed","onOverlay","push","addSphere","showAxes","showCircles","dipCalculateLinksListener","dipDisplayLinksListener","jcCalculateLinksListener","jcDisplayLinksListener","ctable","Events","Array","isArray","fromPairs","Object","defineProperty","get","eventPriority","Set","DISPLAY","SEL_LABELS","CELL","CSCALE","MS_ELLIPSOIDS","MS_LABELS","EFG_ELLIPSOIDS","EFG_LABELS","EUL_ANGLES","DIP_RENDER","JC_RENDER","VIEWS","DIP_LINKS","JC_LINKS","getPriorityOfEvent","has","listeners","toDisplay","app_model_queued","displayModel","app_default_displayed","sel_selected_view","displ","sel_displayed_view","all","hide","show","setProperty","box","visible","sel_show_cell","axes","cscale_view","current_greyed","cscale_displ","next_greyed","cstype","cscale_type","split","xor","cs","shades","colors","colormap","nshades","format","ColorScale","getColorScale","getColor","toHexString","a1A","eul_atom_A","a1B","eul_atom_B","a2A","eul_newatom_A","a2B","eul_newatom_B","tA","eul_tensor_A","tB","eul_tensor_B","conv","eul_convention","nmrA","nmrB","removeLabel","addLabel","hasArray","results","eul_results","makeMasterListener","store","getState","toUpdate","listen_update","maxPriority","P","filter","d","console","warn","nextToUpdate","dispatch","type","LC","CrystVis","LEFT_CLICK","SLC","SHIFT_BUTTON","CLC","CTRL_BUTTON","initialSelState","sel_on","sel_mode","sel_sphere_r","sel_bond_n","sel_hlight","sel_sites_view","sel_sites_labels_type","SelInterface","highlightSelected","value","setSelection","selectionMode","eData","elementData","keys","isotopes","sort","A","iso","is_nmr_active","spin","is_Q_active","is_max_nmr","maxiso_NMR","is_max_Q","maxiso_Q","abundance","options","default_options","selectionSphereR","selectionBondN","selectionOn","selFunc","imgIndex","found","_queryElements","_querySphere","_queryMolecule","_queryBonded","concat","dd","intf","app_click_handler","setCallback","and","or","useSelInterface","useSelector","shallowEqual","useDispatch","initialCScaleState","CScaleInterface","colorScaleType","makeCScaleSelector","initialMSState","ms_view","ms_ellipsoids_on","ms_ellipsoids_scale","ms_labels_type","ms_references","msSetReferences","refs","new_refs","msAction","update","MSInterface","pre","colorScalePrefix","uniq","symbols","function","useMSInterface","initialEFGState","efg_view","efg_ellipsoids_on","efg_ellipsoids_scale","efg_labels_type","efgAction","EFGInterface","useEFGInterface","initialDipState","dip_view","dip_link_names","dip_links_on","dip_central_atom","dip_radius","dip_sphere_show","dip_homonuclear","DipInterface","useDipInterface","initialJCoupState","jc_view","jc_link_names","jc_links_on","jc_central_atom","jc_radius","jc_sphere_show","jc_homonuclear","JCoupInterface","useJCoupInterface","RC","RIGHT_CLICK","initialEulerState","tensorValues","conventionValues","makeCallback","ending","makeEulerAction","EulerInterface","_getAtomLabel","_setTensorType","rad","f","_getResult","report","tensorA","atomLabelA","tensorB","atomLabelB","toUpperCase","beta","alphaRad","betaRad","gammaRad","hasMSData","hasEFGData","targ","table","useEulerInterface","appDisplayModel","m","appDeleteModel","deleteModel","models","modelList","AppInterface","viewer","initialised","model_name","modelName","app_theme","app_sidebar","app_load_as_mol","app_use_nmr_isos","elem","log","vis","files","cbm","params","supercell","molecularCrystal","loadAsMol","useNMRActiveIsotopes","useNMRIsotopes","parseOne","onLoad","contents","extension","success","loadModels","to_display","display","call","reader","FileReader","pop","onload","target","result","readAsText","useAppInterface","FilesInterface","files_seltype","mname","hasISCData","_msMakeTable","_efgMakeTable","_dipMakeTable","_iscMakeTable","aniso","asymm","euler","isotope","Vzz","slice","j","D","useFilesInterface","initialState","magresStore","createStore","args","subscribe","MVCustomSelectOption","props","onClick","className","icon","children","MVCustomSelect","setShow","o","findIndex","onSelect","useEffect","disabled","style","onMouseLeave","title","cloneElement","_excluded","_extends","assign","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMs","_ref","svgRef","titleId","viewBox","xmlns","ref","transform","fill","strokeWidth","strokeLinecap","strokeLinejoin","paintOrder","_defs","ForwardRef","SvgEfg","fillOpacity","InkscapeStroke","SvgDip","SvgJcoup","SvgEuler","stroke","icons","MSIcon","EFGIcon","dip","DipIcon","jcoup","JcoupIcon","EulerIcon","MVIcon","Icon","ThemeSwitcher","appint","other","dark","light","theme","MagresViewHeader","src","logo","alt","sidebar","MagresViewScreenshot","replace","saveImage","getScreenshotData","MagresViewSidebar","MVFile","notext","accept","filetypes","onChange","multiple","MVBox","status_class","status","onClose","size","MVCheckBox","onCheck","checked","htmlFor","MVListSelectOption","MVListSelect","file_formats","MVSidebarLoad","load_message","load_message_status","list_selected","setState","load","msg","err","model_icon","currentModelName","delete","MVButton","MVRadioButton","uid","MVRadioGroup","buttons","labelStyle","MVText","submitted","setSubmitted","waitSubmit","onSubmit","exec","onKeyDown","MVIsotopeSelection","selint","sharedElement","elData","isoConf","selOptions","currentOption","setIsotope","MVSidebarSelect","setR","setN","selRef","useRef","current","showCrystLabels","showCell","MVRange","step","toNumber","parseFloat","round","in_val","text","setText","acceptValue","stateRef","onInput","modalReducer","is_drag","x0","y0","dx","dy","MVModal","useReducer","onAccept","onmousemove","clientX","clientY","onmouseup","modalStyle","hasOverlay","modal","draggable","resizable","onMouseDown","button","Provider","MVReferenceTable","msint","referenceTable","refTable","setRefTable","intRef","close","updateReferenceTable","MVSidebarMS","showRefTable","has_ms","hasData","hasEllipsoids","ellipsoidScale","labelsMode","colorScaleAvailable","MVSidebarEFG","efgint","has_efg","MVSidebarDip","dipint","isOn","bind","unbind","showSphere","homonuclearOnly","MVSidebarJCoup","jcint","has_jc","MVSwitch","colorTrue","colorFalse","MVSidebarEuler","eulint","otherTensor","hasSel","atomA","atomB","txtReport","navigator","clipboard","writeText","txtSelfAngleTable","MVSidebarFiles","fileint","fileType","fn","generateFile","fileName","fileValid","MagresViewPage","hovered","setHovered","appRef","initialise","onDragEnter","preventDefault","stopPropagation","onDragLeave","onDragOver","onDrop","dataTransfer","clearData","MagresViewApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6484d53.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { useState } from 'react';\n\n/**\n * Chain multiple class strings into a single string, useful when passing them\n * to React components' className property\n *\n * @param {String} name1, name2...    Name of the first class, second class, etc.\n * \n * @return {String}                   Chained class names\n */\nfunction chainClasses() {\n    return _.join(_.flatten(arguments), ' ');\n}\n\n/**\n * Generate a memoized unique ID for an element\n * \n * @param  {String} prefix Prefix of the id\n * \n * @return {String}        Unique ID\n */\nfunction useId(prefix='uid') {\n    const [id] = useState(() => (_.uniqueId(prefix)));\n    return id;\n}\n\nexport { chainClasses, useId };","import _ from 'lodash';\nimport colormap from 'colormap';\nimport ColorScale from 'color-scales';\n\n/*\n * Merges together all the outputs of multiple async processes into a single\n * argument to pass to a callback, according the outputs are in Object form.\n */\nclass CallbackMerger {\n    \n    constructor(n, callback) {\n        this._callback = callback;\n        this._n = n;\n\n        this._arg = {};\n    }\n\n    call(arg) {\n        \n        if (this._n <= 0) {\n            throw Error('CallbackMerger has completed its iterations');\n        }\n\n        _.merge(this._arg, arg);\n        this._n -= 1;\n        if (this._n === 0) {\n            this._callback(this._arg);\n        }\n    }\n}\n\n/**\n * A custom class that acts like an Enum type\n */\nclass Enum {\n\n    constructor(values={}) {\n\n        if (Array.isArray(values)) {\n            values = _.fromPairs(values.map((x, i) => [x, i]));\n        }\n\n        for (let key in values) {\n            let v = values[key];\n\n            Object.defineProperty(this, key, {\n                get: () => v\n            });\n        }\n    }\n\n}\n\n/**\n * Average atom position for a ModelView\n * \n * @param  {ModelView} mview    ModelView to compute the average position for\n * \n * @return {float[]}            Average position\n */\nfunction averagePosition(mview) {\n\n    const positions = mview.map((a) => a.xyz);\n    let average = positions.reduce((x, s) => x.map((v, i) => v+s[i]), \n                                   [0, 0, 0]);\n    average = average.map((x) => x/positions.length);\n\n    return average;\n}\n\n\n/**\n * Center the camera on the displayed atoms (with a custom shift)\n * \n * @param  {CrystVis} app   Reference to the visualizer app\n */\nfunction centerDisplayed(app) {\n    const pos = averagePosition(app.displayed);\n    app.centerCamera(pos, [-0.05, 0]);\n}\n\n\nfunction getColorScale(min=0, max=1, scale='jet', shades=10) {\n    \n    let colors = colormap({\n        colormap: scale,\n        nshades: shades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    // If min and max are equal we get an error so fix that\n    max = (max === min)? max+1e-8 : max;\n\n    let cscale = new ColorScale(min, max, colors, 1.0);\n\n    return cscale;\n}\n\n/**\n * Merge the values from an object into another, but without creating\n * new values if they were absent to begin with.\n * \n * @param  {Object} a The object to update\n * @param  {Object} b The object containing the updated values\n * \n * @return {Object}   The updated object\n */\nfunction mergeOnly(a, b) {\n\n    let c = {};\n\n    for (let k in a) {\n        c[k] = (k in b)? b[k] : a[k];\n    }\n\n    return c;\n}\n\n/**\n * Make a single row of an ASCII table with a fixed field width\n * \n * @param  {Array}  values      Values to include in the row\n * @param  {Number} width       Width of each field of the row\n * @param  {Number} precision   Digits used for numerical values\n * \n * @return {String}        Compiled row\n */\nfunction tableRow(values, width=20, precision=5) {\n    return values.reduce((s, v) => {        \n        if (Number.isFinite(v) && !Number.isInteger(v)) {\n            v = v.toFixed(precision);\n        }\n        else {\n            v = v.toString();\n        }\n        const ns = width-v.length;\n        return s + ' '.repeat(ns > 0? ns : 0) + v;\n    }, '') + '\\n';\n}\n\n/**\n * Download a file\n * \n * @param  {String} data     The data content of the file, must be a valid data URL\n * @param  {[type]} filename The name of the file to download\n */\nfunction saveContents(data, filename) {\n\n    const download = document.createElement('a');\n    download.setAttribute('download', filename);\n    download.setAttribute('href', data);\n    download.click();\n}\n\n/**\n * Download a PNG screenshot from data take from a Canvas\n * \n * @param  {String} data     Data URL retrieved with the .toDataURL() method\n * @param  {[type]} filename Filename to save\n */\nfunction saveImage(data, filename='image.png') {\n    data = data.replace('image/png', 'image/octet-stream');\n    saveContents(data, filename);\n}\n\n\n/**\n * Copy something to the clipboard\n * \n * @param  {String} data Content to copy\n */\nfunction copyContents(data) {\n    navigator.clipboard.writeText(data);\n}\n\n\nexport { CallbackMerger, Enum, getColorScale, mergeOnly, \n         saveContents, averagePosition, centerDisplayed,\n         saveImage, copyContents, tableRow };","import { Map } from 'immutable';\n\n// Immutable map makes these entries safe\nconst regularExpressions = Map({\n    float: new RegExp('[0-9]*(?:[.][0-9]*)?'),\n    int: new RegExp('[0-9]*'),\n    alpha: new RegExp('[a-zA-Z]*'),\n    alphanumeric: new RegExp('[0-9a-zA-Z]*')\n});\n\nexport default regularExpressions;","/** \n * Utilities that have to do with computing non-trivial NMR quantities\n */\n\n/**\n * Dipolar coupling constant in Hz between two atoms. Takes into account both\n * distance and the properties of the isotopes.\n * \n * @param  {AtomImage} a1 First atom\n * @param  {AtomImage} a2 Second atom\n * \n * @return {[Number, Array]}    Dipolar coupling in Hz and unit vector connecting\n *                              the two atoms\n */\nfunction dipolarCoupling(a1, a2) {\n\n    const MU0_HBAR_E30 = 1.3252140307214143e-10;\n    const g1 = a1.isotopeData.gamma || 0;\n    const g2 = a2.isotopeData.gamma || 0;\n\n    const r1 = a1.xyz;\n    const r2 = a2.xyz;\n    const r = r2.map((x, i) => x-r1[i]);\n    const R = Math.sqrt(r.reduce((s, x) => s+x*x, 0));\n    const rnorm = r.map((x) => x/R);\n\n    return [-MU0_HBAR_E30*g1*g2/(8*Math.PI*Math.PI*Math.pow(R, 3)), rnorm];    \n}\n\n/**\n * J coupling constant in Hz between two atoms. Will return\n * a value only if the ISC tensor data is available\n * \n * @param  {AtomImage} a1   First atom\n * @param  {AtomImage} a2   Second atom\n * \n * @return {Number}         J-coupling constant in Hz\n */\nfunction jCoupling(a1, a2) {\n\n    let T;\n    // Is it present at all?\n    try {\n        T = a1.getArrayValue('isc')[a2.index];\n    }\n    catch (e) {\n        // Not found\n        return null;\n    }\n\n    if (!T)\n        return null;\n\n    // Convert the tensor\n    let g1 = a1.isotopeData.gamma;\n    let g2 = a2.isotopeData.gamma;\n    T = T.iscAtomicToHz(g1, g2);\n\n    return T.isotropy;\n}\n\nexport { dipolarCoupling, jCoupling };","import * as mjs from 'mathjs';\n\n/**\n * Return a rotation matrix from a set of axes to another. Axes are not checked\n * and must be already orthonormal, with columns corresponding to each axis\n * \n * @param  {Array} axes1 Starting coordinate system\n * @param  {Array} axes2 Ending coordinate system\n\n * @return {Array}       Rotation matrix\n */\nfunction rotationBetween(axes1, axes2) {\n    return mjs.multiply(axes2, mjs.transpose(axes1));\n}\n\n/**\n * Euler angles (in ZYZ or ZXZ convention) from a rotation matrix R\n * \n * @param  {Array}  R           Rotation matrix\n * @param  {String} convention  Convention to use ('zyz' or 'zxz', by default 'zyz')\n * \n * @return {Array}      Euler angles\n */\nfunction eulerFromRotation(R, convention='zyz') {\n\n    /*\n        \n        For the ZYZ convention the rotation matrix is:\n\n        ⎡-sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(α)⋅cos(β)⋅cos(γ) + sin(γ)⋅cos(α)   -sin(β)⋅cos(γ)⎤\n        ⎢                                                                                            ⎥\n        ⎢-sin(α)⋅cos(γ) - sin(γ)⋅cos(α)⋅cos(β)  -sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(β)⋅sin(γ) ⎥\n        ⎢                                                                                            ⎥\n        ⎣            sin(β)⋅cos(α)                          sin(α)⋅sin(β)                  cos(β)    ⎦\n\n        \n        While for the ZXZ convention it is:\n        \n        ⎡-sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(α)⋅cos(γ) + sin(γ)⋅cos(α)⋅cos(β)   sin(β)⋅sin(γ)⎤\n        ⎢                                                                                           ⎥\n        ⎢-sin(α)⋅cos(β)⋅cos(γ) - sin(γ)⋅cos(α)  -sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(β)⋅cos(γ)⎥\n        ⎢                                                                                           ⎥\n        ⎣            sin(α)⋅sin(β)                         -sin(β)⋅cos(α)                 cos(β)    ⎦\n\n\n        The math is identical for the beta angle as well as the gimbal lock case. In the general case, \n        there's some changes in signs.\n\n     */\n\n\n    let cosb = R[2][2];\n    // Fix for the occasional numerical error\n    cosb = Math.min(Math.max(cosb, -1), 1);\n\n    let a;\n    let b = Math.acos(cosb);\n    let c;\n\n    if (Math.abs(cosb) === 1) {\n        // Special case, gimbal lock\n        c = 0;\n        a = Math.atan2(R[0][1], R[0][0]);\n    }\n    else {\n        // General case\n        switch (convention) {\n            case 'zyz':\n                a = Math.atan2(R[2][1],  R[2][0]);\n                c = Math.atan2(R[1][2], -R[0][2]);\n                break;\n            case 'zxz':\n                a = Math.atan2(R[2][0], -R[2][1]);\n                c = Math.atan2(R[0][2],  R[1][2]);\n                break;\n            default:\n                throw Error('Unrecognised Euler angles convention');\n        }\n    }\n\n    return [a, b, c];\n}\n\n/**\n * Rotation matrix from ZYZ Euler angles\n * \n * @param  {Number} alpha \n * @param  {Number} beta \n * @param  {Number} gamma \n * \n * @return {Array}   Rotation matrix\n */\nfunction rotationMatrixFromZYZ(alpha, beta, gamma) {\n\n    const sa = Math.sin(alpha);\n    const ca = Math.cos(alpha);\n    const sb = Math.sin(beta);\n    const cb = Math.cos(beta);\n    const sg = Math.sin(gamma);\n    const cg = Math.cos(gamma);\n\n    return [\n        [ca*cb*cg-sa*sg, sa*cb*cg+ca*sg, -sb*cg], \n        [-ca*cb*sg,      -sa*cb*sg+ca*cg, sb*sg],\n        [ca*sb,          sa*sb,           cb]\n    ];\n\n}\n\n/**\n * Euler angles between the Haeberlen eigenvectors of two NMR tensors\n * \n * @param  {CrystVis.TensorData}    T1          First tensor\n * @param  {CrystVis.TensorData}    T2          Second tensor\n * @param  {String}                 convention  Euler angles convention\n * \n * @return {Array}                              Euler angles\n */\nfunction eulerBetweenTensors(T1, T2, convention='zyz') {\n    const ax1 = T1.haeberlen_eigenvectors;\n    const ax2 = T2.haeberlen_eigenvectors;\n    return eulerFromRotation(rotationBetween(ax1, ax2), convention);\n}\n\nexport { rotationBetween, eulerFromRotation, eulerBetweenTensors, \n         rotationMatrixFromZYZ };","/**\n * A class to manage more conveniently click events sent to the CrystVis app.\n * It helps sorting out possible conflicts between different components trying\n * to each set their own handler.\n */\nclass ClickHandler {\n\n    constructor(app, codes=[]) {\n\n        this._callbacks = {};\n        const handler = this;\n\n        codes.forEach((code) => {\n\n            handler._callbacks[code] = {};\n\n            // Handler\n            function handleClick(atom, event) {\n                const cbacks = handler._callbacks[code];\n\n                for (let n in cbacks) {\n                    cbacks[n](atom, event);\n                }\n            }\n\n            app.onAtomClick(handleClick, code);\n        });\n    }\n\n    setCallback(name, code, cback=null) {\n\n        if (!(code in this._callbacks)) {\n            throw Error('Invalid callback code; unsupported event type');\n        }\n\n        if (!cback) {\n            delete(this._callbacks[code][name]);\n        }\n        else {\n            this._callbacks[code][name] = cback;            \n        }\n\n    }\n\n}\n\nexport { ClickHandler };","import _ from 'lodash';\nimport { dipolarCoupling, jCoupling } from '../../utils';\n\nfunction makeSelector(prefix, extras=[]) {\n    // Creates and returns a selector function for a given prefix\n    function selector(state) {\n        let ans = {};\n\n        for (let key in state) {\n            if (!_.startsWith(key, prefix) && extras.indexOf(key) === -1)\n                continue;\n            ans[key] = state[key];\n        }\n\n        return ans;\n    }\n\n    return selector;\n}\n\nconst addPrefix = (p, n) => p + '_' + n;\n\nfunction getSel(app) {\n    let sel = app.selected;\n    if (sel) {\n        return sel.length > 0? sel : app.displayed;\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getNMRData(view, datatype, tenstype='ms', reftable=null) {\n\n    let units = '';\n    let tens_units = {\n        ms: 'ppm',\n        efg: 'au'\n    }[tenstype];\n    let values = null;\n    let tensors = view.map((a) => (a.getArrayValue(tenstype)));\n\n    switch(datatype) {\n        case 'iso': \n            values = tensors.map((T) => T.isotropy);\n            units = tens_units;\n            break;\n        case 'aniso':\n            values = tensors.map((T) => T.anisotropy);\n            units = tens_units;\n            break;            \n        case 'asymm':\n            values = tensors.map((T) => T.asymmetry);\n            break;\n        case 'span':\n            values = tensors.map((T) => T.span);\n            break;\n        case 'skew':\n            values = tensors.map((T) => T.skew);\n            break;\n        case 'cs':\n            if (!reftable) {\n                throw Error('Can not compute chemical shifts without a reference table');\n            }\n            values = tensors.map((T, i) => {\n                let el = view.atoms[i].element;\n                let ref = reftable[el] || 0.0;\n                return ref-T.isotropy;\n            });\n            units = tens_units;\n            break;\n        case 'e_x':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[0]);\n            break;\n        case 'e_y':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[1]);\n            break;\n        case 'e_z':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[2]);\n            break;\n        case 'Q':\n            values = tensors.map((T, i) => {\n                let iD = view.atoms[i].isotopeData;\n                return T.efgAtomicToHz(iD.Q).haeberlen_eigenvalues[2]/1e3;\n            });\n            units = 'kHz';\n            break;\n        default:\n            break;\n    }\n\n    return [units, values];\n}\n\nfunction getLinkLabel(a1, a2, linktype) {\n\n    switch (linktype) {\n        case 'dip':\n            const D = dipolarCoupling(a1, a2)[0];\n            return (D/1e3).toFixed(2) + ' kHz';\n        case 'jc':\n            const J = jCoupling(a1, a2);\n            if (J === null) {\n                return '';\n            }\n            return J.toFixed(2) + ' Hz';\n        default:\n            return '';\n    }\n}\n\n\nclass BaseInterface {\n\n    constructor(state, dispatcher) {\n        this._state = state;\n        this._dispatcher = dispatcher;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    dispatch(action) {\n        this._dispatcher(action);\n    }\n\n}\n\nexport { \n    makeSelector, \n    addPrefix,\n    getSel,\n    getNMRData,\n    getLinkLabel,\n    BaseInterface \n};","/**\n * Colors used in ellipsoids, labels, etc.\n *\n * This isn't the best place to insert them, but they will stay here until\n * I can find a working way to have interoperability between JS and CSS on this.\n */\n\nconst selColor = 0xffffff; // Used for crystallographic labels\nconst msColor = 0xff8000;\nconst efgColor = 0x0080ff;\nconst dipColor = 0x00ff80;\nconst jcColor = 0xff0080;\n\nexport {\n    selColor,\n    msColor,\n    efgColor,\n    dipColor,\n    jcColor\n};","/**\n * Listeners for the rendering of ellipsoids\n */\n\nimport _ from 'lodash';\nimport { addPrefix, getSel } from '../utils';\nimport { msColor, efgColor } from './colors';\n\nfunction makeEllipsoidListener(name, color) {\n    // Factory for a listener that will be used for both MS and EFG ellipsoids\n    // with minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_on = addPrefix(name, 'ellipsoids_on');\n    const pre_scale = addPrefix(name, 'ellipsoids_scale');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases for convenience\n        const on = state[pre_on];\n        let scale = state[pre_scale];\n\n\n        if (current_view && (current_view !== next_view || !on)) {\n            // Something's changing. Remove old ellipsoids!\n            current_view.removeEllipsoids(name);\n        }\n\n        // Now for the new view and data\n        if (on) {\n\n            const data = next_view.map((a) => a.getArrayValue(name));\n\n            if (scale === 0) {\n                // Auto scale needed\n                let avg = data.map((t) => _.sum(t.eigenvalues.map(Math.abs))/3.0);\n                avg = _.sum(avg)/data.length;\n                scale = 2.0/avg;\n            }\n\n            next_view.addEllipsoids(data, name, {scalingFactor: scale, color: color, opacity: 0.125});\n        }\n\n        return {\n            [pre_view]: next_view,\n            [pre_scale]: scale\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst msEllipsoidListener = makeEllipsoidListener('ms', msColor);\nconst efgEllipsoidListener = makeEllipsoidListener('efg', efgColor);\n\nexport { msEllipsoidListener, efgEllipsoidListener };","/**\n * Listeners for the rendering of labels\n */\n\nimport { addPrefix, getSel, getNMRData } from '../utils';\nimport { selColor, msColor, efgColor } from './colors';\n\nfunction makeLabelListener(name, color, shiftfunc) {\n    // Factory for a function that will be used for both MS and EFG with\n    // minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_references = addPrefix(name, 'references');\n    const pre_type = addPrefix(name, 'labels_type');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n        let ref_table = state[pre_references];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases\n        const mode = state[pre_type];\n\n        if (current_view && (current_view !== next_view || mode === 'none')) {\n            // Remove old labels\n            current_view.removeLabels(name);\n        }\n\n        let label_texts;\n        if (mode !== 'none') {\n\n            if (name !== 'sel_sites') {\n                let [units, values] = getNMRData(next_view, mode, name, ref_table);\n                label_texts = values.map((v) => v.toFixed(2) + ' ' + units);                \n            }\n            else {\n                // Non-NMR labels\n                label_texts = next_view.map((a) => a.crystLabel);\n            }\n\n            next_view.addLabels(label_texts, name, (a, i) => ({ \n                color: color,  \n                shift: shiftfunc(a.radius),\n                height: 0.02\n            }));\n        }\n\n        return {\n            [pre_view]: next_view,\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst selLabelListener = makeLabelListener('sel_sites', selColor, (r) => ([r, r, 0]));\nconst msLabelListener = makeLabelListener('ms', msColor, (r) => ([1.414*r, 0.0, 0.0]));\nconst efgLabelListener = makeLabelListener('efg', efgColor, (r) => ([r, -r, 0.0]));\n\nexport { selLabelListener, msLabelListener, efgLabelListener };","import { addPrefix } from '../utils';\n\nimport { dipColor, jcColor } from './colors';\nimport { getLinkLabel } from '../utils';\n\n\nfunction makeCalculateLinksListener(name) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of calculating which atoms are the\n    // 'targets' to which we're drawing links to. Must precede a call to \n    // updateViews so that the ghosts get visualised or hidden as needed\n    \n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_homo = addPrefix(name, 'homonuclear');\n\n    const pre_view = addPrefix(name, 'view');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let model = app.model;\n\n        if (!model) {\n            // Can happen if we're running with an empty visualiser.\n            return {};\n        }\n\n        let ghostreqs = {\n            ...state.sel_ghosts_requests\n        };\n\n        // Targets?\n        const on = state[pre_on];\n        const catom = state[pre_ca];\n        const r = state[pre_r];\n        const hn = state[pre_homo];\n\n        let linkview;\n\n        if (on && catom) {\n\n            let query = { sphere: [catom, r] };\n            if (hn) {\n                query = {\n                    '$and': [\n                        query,\n                        { elements: [catom.element] }\n                    ]\n                };\n            }\n\n\n            linkview = model.find(query);\n            ghostreqs[name] = linkview;\n        }        \n        else {\n            linkview = model.view([]);\n            // Cancel previous ghosts, if present\n            delete(ghostreqs[name]);\n        }\n\n        return {\n            [pre_view]: linkview,\n            sel_ghosts_requests: ghostreqs\n        };\n    }\n\n    return listener;\n\n}\n\nfunction makeDisplayLinksListener(name, color) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of actually drawing the links  \n\n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_sph = addPrefix(name, 'sphere_show');\n\n    const pre_view = addPrefix(name, 'view');\n\n    // These we keep inside this enclosed variable, as a way to keep track for\n    // when we delete them\n    let current_link_names = [];\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let linkview = state[pre_view];\n\n        const catom = state[pre_ca];\n        const radius = state[pre_r];\n        const on = state[pre_on];\n        const sphere = state[pre_sph];\n\n        const model = app.model;\n\n\n        if (!model) {\n            // Nothing to do\n            return {};\n        }\n\n        // First, cleaning up old visualisation\n        current_link_names.forEach((name) => { model.removeGraphics(name); });\n\n        // Now creating a new one\n        current_link_names = [];\n        if (on && catom && linkview) {\n            linkview.atoms.forEach((a2, i) => {\n\n                if (a2 === catom)\n                    return;\n\n                const lname = name + '_link_' + i;\n                const label = getLinkLabel(catom, a2, name);\n\n                if (label === '') {\n                    // No coupling found\n                    return;\n                }\n\n                model.addLink(catom, a2, lname, label, {\n                    color: color,\n                    dashed: true,\n                    onOverlay: true\n                });\n                current_link_names.push(lname);\n            });\n        }\n\n        // Now the sphere\n        if (on && catom && sphere) {\n            model.addSphere(catom.xyz, radius, name + '_sphere', {\n                opacity: 0.25,\n                showAxes: false,\n                showCircles: true\n            });\n        }\n        else {\n            model.removeGraphics(name + '_sphere');\n        }\n\n        return {};\n    }\n\n    return listener;\n\n}\n\nconst dipCalculateLinksListener = makeCalculateLinksListener('dip');\nconst dipDisplayLinksListener = makeDisplayLinksListener('dip', dipColor);\n\nconst jcCalculateLinksListener = makeCalculateLinksListener('jc');\nconst jcDisplayLinksListener = makeDisplayLinksListener('jc', jcColor);\n\n\nexport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener, jcDisplayLinksListener };","/**\n * Listeners for Euler angles\n */\n\nimport { msColor, efgColor } from './colors';\nimport { eulerBetweenTensors } from '../../../utils';\n\nconst ctable = {\n    'ms': msColor,\n    'efg': efgColor\n};\n\nfunction eulerAngleListener(state) {\n\n    const a1A = state.eul_atom_A;\n    const a1B = state.eul_atom_B;\n\n    const a2A = state.eul_newatom_A;\n    const a2B = state.eul_newatom_B;\n\n    const tA = state.eul_tensor_A;\n    const tB = state.eul_tensor_B;\n\n    const conv = state.eul_convention;\n\n    let nmrA = null;\n    let nmrB = null;\n\n    if (a1A) {\n        a1A.removeLabel('eulA');\n    }\n\n    if (a2A) {\n        let r = a2A.radius;\n        a2A.addLabel('A', 'eulA', {\n            shift: [0, 0.25*r, 0],\n            color: ctable[tA],\n            onOverlay: true,\n            height: 0.04\n        });\n\n        // Now get the tensor value\n        if (a2A.model.hasArray(tA)) {\n            nmrA = a2A.getArrayValue(tA);\n        }\n    }\n\n    if (a1B) {\n        a1B.removeLabel('eulB');\n    }\n\n    if (a2B) {\n        let r = a2B.radius;\n        a2B.addLabel('B', 'eulB', {\n            shift: [0, -0.5*r, 0],\n            color: ctable[tB],\n            onOverlay: true\n        });\n\n        // Now get the tensor value\n        if (a2B.model.hasArray(tB)) {\n            nmrB = a2B.getArrayValue(tB);\n        }\n    }\n\n    let results = null;\n\n    if (nmrA && nmrB) {\n        // Get the eigenvectors\n        results = eulerBetweenTensors(nmrA, nmrB, conv);\n    }\n\n    return {\n        eul_atom_A: a2A,\n        eul_atom_B: a2B,\n        eul_results: results\n    };\n}\n\nexport { eulerAngleListener };","// Events used to trigger listeners\nimport { Enum } from '../../../utils';\n\nconst Events = new Enum([\n    'DISPLAY',\n    'VIEWS',\n    'SEL_LABELS',\n    'CELL',\n    'CSCALE',\n    'MS_ELLIPSOIDS',\n    'MS_LABELS',\n    'EFG_ELLIPSOIDS',\n    'EFG_LABELS',\n    'EUL_ANGLES',\n    'DIP_LINKS',                // Links require two events, one before a VIEWS update, the other after\n    'DIP_RENDER',\n    'JC_LINKS',\n    'JC_RENDER'\n]);\n\n// Event priority ranking. Events with higher priority fire first, and are\n// followed by all the ones of lower priority. Example: a change in Views\n// (priority 1) inevitably triggers all events of priority 0.\nconst eventPriority = {\n    0: new Set([Events.DISPLAY]),                               // Called last. If we need to change displayed model\n    1: new Set([Events.SEL_LABELS, Events.CELL,                 // All events having to do with rendering something that\n                Events.CSCALE,                                  // is affected by displayed/selected atoms\n                Events.MS_ELLIPSOIDS, Events.MS_LABELS,         \n                Events.EFG_ELLIPSOIDS, Events.EFG_LABELS,\n                Events.EUL_ANGLES, \n                Events.DIP_RENDER, Events.JC_RENDER]),\n    2: new Set([Events.VIEWS]),                                 // Changing displayed/selected atoms\n    3: new Set([Events.DIP_LINKS, Events.JC_LINKS])             // Computing links and required ghosts (which changes displayed atoms)\n};\n\nfunction getPriorityOfEvent(event) {\n\n    for (let p in eventPriority) {\n        let eset = eventPriority[p];\n        if (eset.has(event)) {\n            return p;\n        }\n    }\n\n    return 0; // Default value\n}\n\nfunction getEventsWithPriority(priority) {\n    return eventPriority[priority];\n}\n\n\nexport default Events;\nexport { getPriorityOfEvent, getEventsWithPriority };","/**\n * This file contains the master function for controlling the listener system.\n * Listeners are subscribed to the magresStore and fire whenever the state\n * changes. Since it could get too expensive to check which parts of the state\n * have changed at any time, listeners must be invoked EXPLICITLY by a method\n * making a dispatch by adding their names to the listen_update Array.\n *\n * A listener must have the following interface:\n *\n * function exampleListener(state) {\n *\n *      // ...do something...\n *\n *      return [new_data, new_listeners];\n * \n * }\n *\n * where new_data is a dictionary that will be directly used to update the\n * state while new_listeners is a list of any new listeners that should be\n * queued for update next. The process will stop only once that listen_update = []\n * at the end of a run through the current queue, (so be wary of creating infinite loops!).\n */\n\nimport { displayListener } from './display';\nimport { viewsListener } from './views';\nimport { msEllipsoidListener, efgEllipsoidListener } from './ellipsoids';\nimport { selLabelListener, msLabelListener, efgLabelListener } from './labels';\nimport { colorScaleListener } from './cscales';\nimport { cellListener } from './cell';\nimport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener,  jcDisplayLinksListener } from './links';\nimport { eulerAngleListener } from './euler';\nimport Events, { getPriorityOfEvent, getEventsWithPriority } from './events';\n\nconst initialListenerState = {\n    listen_update: []\n};\n\nconst listeners = {\n    [Events.DISPLAY]:           displayListener,\n    [Events.VIEWS]:             viewsListener,\n    [Events.SEL_LABELS]:        selLabelListener,\n    [Events.CELL]:              cellListener,\n    [Events.CSCALE]:            colorScaleListener,\n    [Events.MS_ELLIPSOIDS]:     msEllipsoidListener,\n    [Events.MS_LABELS]:         msLabelListener,\n    [Events.EFG_ELLIPSOIDS]:    efgEllipsoidListener,\n    [Events.EFG_LABELS]:        efgLabelListener,\n    [Events.EUL_ANGLES]:        eulerAngleListener,\n    [Events.DIP_LINKS]:         dipCalculateLinksListener,\n    [Events.DIP_RENDER]:        dipDisplayLinksListener,\n    [Events.JC_LINKS]:          jcCalculateLinksListener,\n    [Events.JC_RENDER]:         jcDisplayLinksListener\n};\n\nfunction makeMasterListener(store) {\n\n    function listener() {\n\n        let state = store.getState();\n        let toUpdate = state.listen_update;\n\n        if (toUpdate && toUpdate.length > 0) {\n\n            let data = {};\n\n            // Find max priority\n            let maxPriority = toUpdate.reduce((P, e) => {\n                let p = getPriorityOfEvent(e);\n                return p > P? p : P;\n            }, -1);\n\n            toUpdate = toUpdate.filter((e) => {\n                return getPriorityOfEvent(e) === maxPriority;\n            });\n\n            toUpdate = new Set(toUpdate); // Avoid duplicates\n\n            toUpdate.forEach((lname) => {\n\n                if (!(lname in listeners))\n                    return;\n\n                try {\n                    let d = listeners[lname](state);\n                \n                    data = {\n                        ...data,\n                        ...d\n                    };\n                }\n                catch (e) {\n                    // Can happen if the listener e.g. relies on there being\n                    // a model, and we don't have one loaded. Tolerated with a\n                    // warning.\n                    console.warn(e);\n                }\n\n            });\n\n            // Next do all the lower priority\n            let nextToUpdate = [];\n            if (maxPriority > 0) {\n                nextToUpdate = [...getEventsWithPriority(maxPriority-1)];\n            }\n            data.listen_update = nextToUpdate;\n\n            store.dispatch({\n                type: 'update',\n                data: data\n            });\n        }\n    }\n\n    return listener;\n}\n\nexport { initialListenerState, Events };\nexport default makeMasterListener;","import { centerDisplayed } from '../../../utils';\n\nfunction displayListener(state) {\n\n    const app = state.app_viewer;\n    const toDisplay = state.app_model_queued;\n\n    let data = {};\n\n    if (app && toDisplay) {\n        app.displayModel(toDisplay);\n        data = {\n            app_default_displayed: app.displayed,\n            app_model_queued: null\n        };\n\n        // Center model\n        centerDisplayed(app);\n    }\n\n    return data;\n}\n\nexport { displayListener };","import { centerDisplayed } from '../../../utils';\n\nfunction viewsListener(state) {\n\n    let app = state.app_viewer;\n    let model = app.model;\n\n    if (!model) {\n        return {};\n    }\n\n    // Aliases\n    let sel = state.sel_selected_view;\n    let displ = state.sel_displayed_view? state.sel_displayed_view : state.app_default_displayed;\n\n    // Assign new selection\n    if (sel && sel !== app.selected)\n        app.selected = sel;\n\n    if (model)\n        model.all.hide();\n\n    // Deal with ghosts\n    Object.values(state.sel_ghosts_requests).forEach((s, i) => {\n        // Make each of these visible but translucent\n        s.show();\n        s.setProperty('opacity', 0.5);\n    });\n    \n    // Doing this after the ghosts means any overlap will be fixed here\n    app.displayed = displ;\n    displ.setProperty('opacity', 1.0);\n\n    // Center model\n    centerDisplayed(app);\n\n    // We now update all visualizations that may be changed as a result of this\n    return  {};\n}\n\nexport { viewsListener };","/** \n * Listener for when cell/axes visibility is changed\n */\n\nfunction cellListener(state) {\n    const app = state.app_viewer;\n\n    if (app) { \n        const model = app.model;\n        if (model) {\n            model.box.visible = state.sel_show_cell;\n            model.axes.visible = state.sel_show_cell;\n        }\n    }\n\n    return {};\n}\n\nexport { cellListener };","/**\n * Listeners for color scales\n */\n\nimport _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\nimport { getColorScale } from '../../../utils';\n\nfunction colorScaleListener(state) {\n\n    let app = state.app_viewer;\n    let current_view = state.cscale_view;\n    let current_greyed = state.cscale_displ;\n    let displayed = app.displayed;\n\n    let next_view = getSel(app);\n    let next_greyed = null;\n\n    const cstype = state.cscale_type;\n\n    // Restore color to the grayed out atoms\n    if (current_greyed) {\n        current_greyed.setProperty('color', null);\n    }\n\n    if (cstype !== 'none') {\n\n        // Split in prefix and mode\n        const [prefix, mode] = cstype.split('_', 2);\n        const ref_table = state[prefix + '_references'];\n\n        next_greyed = displayed.xor(next_view);\n\n        const nmrdata = getNMRData(next_view, mode, prefix, ref_table);\n        const values = nmrdata[1];\n\n        let minv = _.min(values);\n        let maxv = _.max(values);\n        let cs = getColorScale(minv, maxv, 'portland');\n        let colors = values.map((v) => cs.getColor(v).toHexString());\n\n        next_view.setProperty('color', colors);\n        next_greyed.setProperty('color', 0x888888);\n    }\n    else {\n        if (current_view)\n            current_view.setProperty('color', null);\n    }\n\n    return {\n        cscale_view: next_view,\n        cscale_displ: next_greyed\n    };\n}\n\nexport { colorScaleListener };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst SLC = CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON;\nconst CLC = CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON;\n\nconst initialSelState = {\n    sel_selected_view: null,\n    sel_displayed_view: null,\n    sel_ghosts_requests: {},\n    sel_on: false,\n    sel_mode: 'atom',\n    sel_sphere_r: 2.0,\n    sel_bond_n: 1,\n    sel_hlight: true,\n    sel_sites_view: null,\n    sel_sites_labels_type: 'none',\n    sel_show_cell: true\n};\n\nclass SelInterface extends BaseInterface {\n\n    get app() {\n        return this.state.app_viewer;\n    }\n\n    get selected() {\n        return this.state.sel_selected_view;\n    }\n\n    set selected(v) {\n        if (!v) {\n            let model = this.state.app_viewer.model;\n            if (model) {\n                v = model.view([]);\n            }\n        }\n\n        this.dispatch({\n            type: 'update', \n            data: {\n                sel_selected_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get displayed() {\n        return this.state.sel_displayed_view || this.state.app_default_displayed;\n    }\n\n    set displayed(v) {\n        if (!v) {\n            v = this.state.app_default_displayed;\n            if (!v) {\n                // Then there's just no model at all\n                return;\n            }\n        }\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_displayed_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get defaultDisplayed() {\n        return this.state.app_default_displayed;\n    }\n\n    get highlightSelected() {\n        return this.state.sel_hlight;\n    }\n\n    set highlightSelected(v) {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        app.highlightSelected = v;\n        this.dispatch({\n            type: 'set',\n            key: 'sel_hlight',\n            value: v\n        });\n    }\n\n    get showCrystLabels() {\n        return this.state.sel_sites_labels_type === 'labels';\n    }\n\n    set showCrystLabels(v) {\n        v = v? 'labels' : 'none';\n\n        this.dispatch({\n            type: 'update',\n            data: { sel_sites_labels_type: v, listen_update: [Events.SEL_LABELS]}\n        });\n    }\n\n    get showCell() {\n        return this.state.sel_show_cell;\n    }\n\n    set showCell(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_show_cell: v,\n                listen_update: [Events.CELL]\n            }\n        });\n    }\n\n    get selectionOn() {\n        return this.state.sel_on;\n    }\n\n    set selectionOn(v) {\n        this.setSelection(this.selectionMode, {on: v});\n    }\n\n    get selectionMode() {\n        return this.state.sel_mode;\n    }\n\n    set selectionMode(v) {\n        this.setSelection(v);\n    }\n\n    get selectionSphereR() {\n        return this.state.sel_sphere_r;\n    }\n\n    set selectionSphereR(v) {\n        this.setSelection(this.selectionMode, {r: v});\n    }\n\n    get selectionBondN() {\n        return this.state.sel_bond_n;\n    }\n\n    set selectionBondN(v) {\n        this.setSelection(this.selectionMode, {n: v});\n    }\n\n    get isotopeChoices() {\n        // Find which isotopes are available for the currently selected atoms\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        let elements = sel.map((a, i) => a.element);\n        // Are they all the same?\n        let el = elements[0];\n        if (!elements.reduce((s, x) => (s && x === el), true)) {\n            return null;\n        }\n\n        // Get the isotope information\n        let eData = sel.atoms[0].elementData;\n\n        let iKeys = Object.keys(eData.isotopes).sort();\n        let iData = iKeys.map((A, i) => {\n            let iso = eData.isotopes[A];\n            return {\n                A: A,\n                is_nmr_active: iso.spin !== 0,\n                is_Q_active: iso.Q !== 0,\n                is_max_nmr: A === eData.maxiso_NMR,\n                is_max_Q: A === eData.maxiso_Q,\n                abundance: iso.abundance\n            };\n        });\n\n        return iData;\n    }\n\n    setIsotope(A) {\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        sel.setProperty('isotope', A);\n\n        // Must update everything that depends on isotope properties\n        this.dispatch({\n            type: 'update',\n            data: {\n                listen_update: [Events.EFG_LABELS, Events.CSCALE, \n                                Events.DIP_RENDER, Events.JC_RENDER]\n            }\n        });\n    }\n\n    setSelection(mode, options={}) {\n        // Set the selection for a certain mode and options\n\n        let app = this.state.app_viewer;\n        if (!app) \n            return;\n\n        let default_options = {\n            r: this.selectionSphereR,\n            n: this.selectionBondN,\n            on: this.selectionOn\n        };\n\n        options = {\n            ...default_options,\n            ...options\n        };\n\n        // Selector functions\n        let selFunc = null;\n\n        if (options.on) {\n            switch(mode) {\n                case 'atom':\n                    selFunc = ((a, e) => {\n                        return app.model.view([a.imgIndex]); // Just the one\n                    });\n                    break;\n                case 'element':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryElements(a.element);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'sphere':\n                    const r = options.r;\n                    selFunc = ((a, e) => {\n                        var found = app.model._querySphere(a, r); \n                        return app.model.view(found);\n                    });\n                    break;\n                case 'molecule': \n                    selFunc = ((a, e) => {\n                        var found = app.model._queryMolecule(a);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'bonds':\n                    const n = options.n;\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryBonded(a, n, false);\n                        found = found.concat([a.imgIndex]); // Crystvis excludes the original atom\n                        return app.model.view(found);\n                    });\n                    break;\n                default:\n                    // No selection at all\n                    break;\n            }\n        }\n\n        // We use this to guarantee that the selection still doesn't go out of\n        // the default display (e.g. the main cell). Everything else remains\n        // hidden or can be used as ghost for other purposes\n        const dd = this.state.app_default_displayed;\n        const intf = this;\n        const handler = this.state.app_click_handler;\n\n        if (selFunc) {\n            handler.setCallback('sel', LC, (a, e) => { intf.selected = dd.and(selFunc(a, e)); });\n            handler.setCallback('sel', SLC, (a, e) => { intf.selected = dd.and(app.selected.or(selFunc(a, e))); });\n            handler.setCallback('sel', CLC, (a, e) => { intf.selected = dd.and(app.selected.xor(selFunc(a, e))); });\n        }\n        else {\n            // Free the events\n            handler.setCallback('sel', LC);\n            handler.setCallback('sel', SLC);\n            handler.setCallback('sel', CLC);\n        }\n\n        this.dispatch({type: 'update', data: {\n            sel_mode: mode,\n            sel_sphere_r: options.r,\n            sel_bond_n: options.n,\n            sel_on: options.on\n        }});\n    }\n\n}\n\n// Hook for interface\nfunction useSelInterface() {\n    let state = useSelector(makeSelector('sel', ['app_viewer', 'app_click_handler', 'app_default_displayed']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new SelInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default useSelInterface;\nexport { initialSelState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\n\nconst initialCScaleState = {\n    cscale_view: null,\n    cscale_displ: null,\n    cscale_type: 'none'\n};\n\n// A base class not meant to be used directly, but inherited by all interfaces\n// that make use of color scales. \n// \n// Must be used in conjuction with makeCScaleSelector!\nclass CScaleInterface extends BaseInterface {\n\n    get colorScaleType() {\n        return this.state.cscale_type;\n    }\n\n    set colorScaleType(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_type: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    get colorScalePrefix() {\n        return this.colorScaleType.split('_', 2)[0];\n    }\n\n}\n\nfunction makeCScaleSelector(prefix, extras=[]) {\n    extras = extras.concat(Object.keys(initialCScaleState));\n\n    return makeSelector(prefix, extras);\n}\n\nexport default CScaleInterface;\nexport { initialCScaleState, makeCScaleSelector };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialMSState = {\n    ms_view: null,\n    ms_ellipsoids_on: false,\n    ms_ellipsoids_scale: 0.05,\n    ms_labels_type: 'none',\n    ms_references: {}\n};\n\n// Update any new references for chemical shifts\nfunction msSetReferences(state, refs=null) {\n\n    let new_refs = {};\n\n    // Default behaviour if refs is null is to clear everything,\n    // otherwise we update the existing table.\n    if (refs) {\n        new_refs = {\n            ...state.ms_references,\n            ...refs\n        };\n    }\n\n    // We then update the state and refresh the ms labels, in case any changes\n    // are needed\n    return {\n        ms_references: new_refs,\n        listen_update: [Events.MS_LABELS, Events.CSCALE]\n    };\n}\n\n// Action creator\nconst msAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass MSInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.ms_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(msAction({ ms_ellipsoids_on: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.ms_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(msAction({ ms_ellipsoids_scale: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.ms_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(msAction({ 'ms_labels_type': v }, [Events.MS_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'ms');\n    }\n\n    get referenceTable() {\n\n        if (!this.state.app_viewer || !this.state.app_viewer.model)\n            return [];\n\n        // Find the elements, then return the respective references as pairs\n        const elements = _.uniq(this.state.app_viewer.model.symbols);\n        const refs = this.state.ms_references;\n        return _.fromPairs(elements.map((el) => [el, refs[el] || 0]));\n    }\n\n    updateReferenceTable(data) {\n        this.dispatch({\n            type: 'call',\n            function: msSetReferences,\n            arguments: [data]\n        });\n    }\n\n    getReference(el) {\n        return this.state.ms_references[el] || 0.0;\n    }\n\n}\n\nfunction useMSInterface() {\n    let state = useSelector(makeCScaleSelector('ms', ['app_viewer', 'efg_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new MSInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useMSInterface;\nexport { initialMSState, msSetReferences };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialEFGState = {\n    efg_view: null,\n    efg_ellipsoids_on: false,\n    efg_ellipsoids_scale: 0.1,\n    efg_labels_type: 'none'\n};\n\n// Action creator\nconst efgAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass EFGInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.efg_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_on: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.efg_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_scale: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.efg_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(efgAction({ efg_labels_type: v }, [Events.EFG_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'efg');\n    }\n\n}\n\nfunction useEFGInterface() {\n    let state = useSelector(makeCScaleSelector('efg', ['app_viewer', 'ms_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EFGInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEFGInterface;\nexport { initialEFGState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialDipState = {\n    dip_view: null,\n    dip_link_names: [],\n    dip_links_on: false,\n    dip_central_atom: null,\n    dip_radius: 1.0,\n    dip_sphere_show: true,\n    dip_homonuclear: false\n};\n\n\nclass DipInterface extends BaseInterface {\n\n    get isOn() {\n        return this.state.dip_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            dip_links_on: v,\n            listen_update: [ Events.DIP_LINKS ]\n        };\n\n        if (!v) \n            data.dip_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.dip_central_atom;\n    }\n\n    get radius() {\n        return this.state.dip_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.dip_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_homonuclear: v,\n                listen_update: [ Events.DIP_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.dip_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_sphere_show: v,\n                listen_update: [ Events.DIP_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('dip', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        dip_central_atom: a,\n                        listen_update: [ Events.DIP_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('dip', LC); \n    }\n\n}\n\nfunction useDipInterface() {\n    let state = useSelector(makeSelector('dip', ['app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new DipInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useDipInterface;\nexport { initialDipState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialJCoupState = {\n    jc_view: null,\n    jc_link_names: [],\n    jc_links_on: false,\n    jc_central_atom: null,\n    jc_radius: 1.0,\n    jc_sphere_show: true,\n    jc_homonuclear: false\n};\n\n\nclass JCoupInterface extends BaseInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    get isOn() {\n        return this.state.jc_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            jc_links_on: v,\n            listen_update: [ Events.JC_LINKS ]\n        };\n\n        if (!v) \n            data.jc_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.jc_central_atom;\n    }\n\n    get radius() {\n        return this.state.jc_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.jc_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_homonuclear: v,\n                listen_update: [ Events.JC_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.jc_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_sphere_show: v,\n                listen_update: [ Events.JC_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('jc', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        jc_central_atom: a,\n                        listen_update: [ Events.JC_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('jc', LC); \n    }\n\n}\n\nfunction useJCoupInterface() {\n    let state = useSelector(makeSelector('jc', ['app_click_handler', 'app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new JCoupInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useJCoupInterface;\nexport { initialJCoupState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { eulerBetweenTensors } from '../../../utils';\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst RC = CrystVis.RIGHT_CLICK;\n\nconst initialEulerState = {\n    eul_atom_A: null,\n    eul_newatom_A: null,\n    eul_tensor_A: 'ms',\n    eul_atom_B: null,\n    eul_newatom_B: null,\n    eul_tensor_B: 'ms',\n    eul_convention: 'zyz',\n    eul_results: null\n};\n\nconst tensorValues = new Set(['ms', 'efg']);\nconst conventionValues = new Set(['zyz', 'zxz']);\n\nfunction makeCallback(dispatch, ending='A') {    \n\n    function cback(a, e) {\n        dispatch({\n            type: 'update',\n            data: {\n                ['eul_newatom_' + ending]: a,\n                listen_update: [Events.EUL_ANGLES]\n            }\n        });\n    }\n\n    return cback;\n}\n\nfunction makeEulerAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.EUL_ANGLES]\n        }\n    };\n}\n\nclass EulerInterface extends BaseInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get convention() {\n        return this.state.eul_convention;\n    }\n\n    set convention(v) {\n        if (!conventionValues.has(v))\n            throw Error('Invalid Euler angles convention');\n        this.dispatch(makeEulerAction({eul_convention: v}));\n    }\n\n    _getAtomLabel(ending='A') {\n        let a = this.state['eul_atom_' + ending];\n        if (a)\n            return a.crystLabel\n        else\n            return 'Not selected'        \n    }\n\n    _setTensorType(v, ending='A') {\n        if (!tensorValues.has(v))\n            throw Error('Invalid NMR tensor for Euler angles');\n        this.dispatch(makeEulerAction({['eul_tensor_' + ending]: v}));\n    }\n\n    get atomA() {\n        return this.state.eul_atom_A;\n    }\n\n    get atomLabelA() {\n        return this._getAtomLabel('A');\n    }\n\n    get atomB() {\n        return this.state.eul_atom_B;\n    }\n\n    get atomLabelB() {\n        return this._getAtomLabel('B');\n    }\n\n    get tensorA() {\n        return this.state.eul_tensor_A;\n    }\n\n    set tensorA(v) {\n        this._setTensorType(v, 'A');\n    }\n\n    get tensorB() {\n        return this.state.eul_tensor_B;\n    }\n\n    set tensorB(v) {\n        this._setTensorType(v, 'B');        \n    }\n\n    _getResult(i, rad=false) {\n        let f = rad? 1.0 : 180/Math.PI;\n        let r = this.state.eul_results;\n        return r? (r[i]*f) : 'N/A';        \n    }\n\n    get alpha() {\n        return this._getResult(0);\n    }\n\n    get beta() {\n        return this._getResult(1);\n    }\n\n    get gamma() {\n        return this._getResult(2);\n    }\n\n    get alphaRad() {\n        return this._getResult(0, true);\n    }\n\n    get betaRad() {\n        return this._getResult(1, true);\n    }\n\n    get gammaRad() {\n        return this._getResult(2, true);\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC, makeCallback(dispatch, 'A'));\n        handler.setCallback('eul', RC, makeCallback(dispatch, 'B'));\n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC);\n        handler.setCallback('eul', RC);\n\n        this.dispatch(makeEulerAction({\n            eul_newatom_A: null,\n            eul_newatom_B: null\n        }));\n    }\n\n    txtReport() {\n        let report = 'Euler angles between tensors:\\n';\n\n        report += `${this.tensorA} on ${this.atomLabelA}\\nand\\n`;\n        report += `${this.tensorB} on ${this.atomLabelB}\\n\\n`;\n\n        report += `Convention: ${this.convention.toUpperCase()}\\n\\n`;\n\n        report += `Degrees:\\n${this.alpha}    ${this.beta}    ${this.gamma}\\n\\n`;\n        report += `Radiants:\\n${this.alphaRad}     ${this.betaRad}     ${this.gammaRad}`;\n\n        return report;\n    }\n\n    txtSelfAngleTable() {\n        // Return a full table of MS-to-EFG tensor angles for each atom\n        if (!(this.hasMSData && this.hasEFGData)) {\n            // Pointless\n            throw Error('Both MS and EFG tensors are needed to compute the table');\n        }\n\n        // Selection if available, otherwise displayed atoms\n        let targ = this.state.app_viewer.selected;\n        targ = (targ.length > 0)? targ : this.state.app_viewer.displayed;\n\n        const data = targ.map((a, i) => {\n            return [a.crystLabel, a.getArrayValue('ms'), a.getArrayValue('efg')];\n        });\n\n        let table = `Euler angles between MS and EFG tensors in radiants, convention: ${this.convention.toUpperCase()}\\n`;\n        let conv = this.convention;\n\n        data.forEach((d, i) => {\n\n            let [label, ms, efg] = d;\n\n\n            let [alpha, beta, gamma] = eulerBetweenTensors(ms, efg, conv);\n\n            table += `${label}    ${alpha}    ${beta}    ${gamma}\\n`;\n        });\n\n        return table;\n    }\n}\n\nfunction useEulerInterface() {\n    let state = useSelector(makeSelector('eul', ['app_viewer', 'app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EulerInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEulerInterface;\nexport { initialEulerState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { CallbackMerger, ClickHandler } from '../../../utils';\n\nimport { initialSelState } from './SelInterface';\nimport { initialCScaleState } from './CScaleInterface';\nimport { initialMSState } from './MSInterface';\nimport { initialEFGState } from './EFGInterface';\nimport { initialDipState } from './DipInterface';\nimport { initialJCoupState } from './JCoupInterface';\nimport { initialEulerState } from './EulerInterface';\n\nimport { Events } from '../listeners';\n\nimport CrystVis from 'crystvis-js';\n\n\nconst initialAppState = {\n    app_viewer: null,\n    app_click_handler: null,\n    app_theme: 'dark',\n    app_sidebar: 'load',\n    app_default_displayed: null,\n    app_model_queued: null,\n    app_load_as_mol: false,\n    app_use_nmr_isos: true\n};\n\n// Functions meant to operate on the app alone.\n// These exist outside of the AppInterface because they will be invoked\n// directly from inside the reducer as special actions\nfunction appDisplayModel(state, m) {\n    let app = state.app_viewer;\n    let cm = app.model;\n\n    let data = {};\n    if (cm) {\n        // We turn visualizations off\n        data = {\n            ...initialSelState,\n            ...initialCScaleState,\n            ...initialMSState,\n            ...initialEFGState,\n            ...initialDipState,\n            ...initialJCoupState,\n            ...initialEulerState\n        };\n    }\n\n    // Return data for dispatch\n    return {\n        ...data,\n        app_model_queued: m,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS, Events.JC_LINKS]\n    };\n}\n\nfunction appDeleteModel(state, m) {\n    \n    let app = state.app_viewer;\n    let data = {};\n\n    // Delete a model\n    app.deleteModel(m);\n\n    let models = app.modelList;\n\n    if (!app.model && models.length > 0) {\n        // Let's display a different one\n        data = appDisplayModel(state, models[0]);\n    }\n\n    return data;\n}\n\nclass AppInterface extends BaseInterface {\n\n    get initialised() {\n        return this.viewer !== null;\n    }\n\n    get viewer() {\n        return this.state.app_viewer;\n    }\n\n    get models() {\n        let models = [];\n\n        if (this.initialised) {\n            models = this.viewer.modelList;\n        }\n\n        return models;\n    }\n\n    get currentModel() {\n        let model = null;\n\n        if (this.initialised) {\n            model = this.viewer.model;\n        }\n\n        return model;\n    }\n\n    get currentModelName() {\n        let model_name = null;\n\n        if (this.initialised) {\n            model_name = this.viewer.modelName;\n        }\n\n        return model_name;\n    }\n\n    get theme() {\n        return this.state.app_theme;\n    }\n\n    set theme(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_theme',\n            value: v\n        });\n    }\n\n    get sidebar() {\n        return this.state.app_sidebar;\n    }\n\n    set sidebar(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_sidebar',\n            value: v\n        });\n    }\n\n    get loadAsMol() {\n        return this.state.app_load_as_mol;\n    }\n\n    set loadAsMol(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_load_as_mol',\n            value: v\n        });\n    }\n\n    get useNMRIsotopes() {\n        return this.state.app_use_nmr_isos;\n    }\n\n    set useNMRIsotopes(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_use_nmr_isos',\n            value: v\n        });\n    }\n\n    initialise(elem) {\n        console.log('Initialising CrystVis app on element ' + elem);\n        // Initialise app but only if it's not already there\n        const vis = new CrystVis(elem);\n        vis.highlightSelected = true; // Our default\n        \n        const handler = new ClickHandler(vis, [\n            CrystVis.LEFT_CLICK,\n            CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON,\n            CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON,\n            CrystVis.RIGHT_CLICK\n        ]);\n\n        if (!this.initialised) {\n            this.dispatch({\n                type: 'update',\n                data: {\n                    app_viewer: vis,\n                    app_click_handler: handler\n                }\n            });\n        }\n    }\n\n    load(files, cback=null) {\n\n        /* Load from a list of files, running a callback with the aggregate\n        dictionary that reports the success for each of them */\n\n        if (!this.initialised) {\n            return;\n        }\n\n        let cbm = new CallbackMerger(files.length, cback);\n        let app = this.viewer;\n        let intf = this;\n        let params = {\n            supercell: [3, 3, 3],\n            molecularCrystal: this.loadAsMol,\n            useNMRActiveIsotopes: this.useNMRIsotopes\n        };\n\n        // Callback for each file after the FileReader is done\n        function onLoad(contents, name, extension) {\n            var success = app.loadModels(contents, extension, name, params);\n\n            // Find a valid one to load\n            var to_display = null;\n            _.map(success, (v, n) => {\n                if (v === 0) {                 \n                    to_display = n;\n                }\n            });\n\n            if (to_display) {\n                intf.display(to_display);\n            }\n\n            if (cback) {\n                cbm.call(success);\n            }\n        }\n\n        // Function that loads each individual file\n        function parseOne(f) {\n            \n            let reader = new FileReader();\n            // Extension and file name\n            let name = f.name.split('.')[0];\n            let extension = f.name.split('.').pop();\n\n            reader.onload = ((e) => { onLoad(e.target.result, name, extension) });\n            reader.readAsText(f);\n        }\n\n        _.forEach(files, parseOne);\n    }\n\n    display(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDisplayModel,\n            arguments: [m]\n        });\n    }\n\n    delete(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDeleteModel,\n            arguments: [m]\n        });\n    }\n\n}\n\n// Hook for interface\nfunction useAppInterface() {\n    let state = useSelector(makeSelector('app'), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new AppInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useAppInterface;\nexport { initialAppState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface, getSel, getNMRData } from '../utils';\nimport { tableRow, eulerFromRotation, dipolarCoupling, jCoupling } from '../../../utils';\n\nconst initialFilesState = {\n    files_seltype: 'ms'\n};\n\nclass FilesInterface extends BaseInterface {\n\n    get fileType() {\n        return this.state.files_seltype;\n    }\n\n    set fileType(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'files_seltype',\n            value: v\n        });\n    }\n\n    get fileName() {\n        let app = this.state.app_viewer;\n        let mname = app.modelName;\n        let type = this.state.files_seltype;\n\n        if (mname) {\n            return `mvtable_${mname}_${type}.txt`;\n        }\n        else {\n            return 'N/A';\n        }\n    }\n\n    get fileValid() {\n        // Can we generate a file with these parameters?\n        let app = this.state.app_viewer;\n        if (!app || !app.model)\n            return false;\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                return this.hasMSData;\n            case 'efg':\n                return this.hasEFGData;\n            case 'isc':\n                return this.hasISCData;\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    generateFile() {\n\n        let contents = '';\n\n        // What are the atoms?\n        const app = this.state.app_viewer;\n        let view = null;\n\n        if (app && app.model) {\n            view = getSel(app);\n        }\n\n        if (!view) {\n            return null;\n        }\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                contents = this._msMakeTable(view);\n                break;\n            case 'efg':\n                contents = this._efgMakeTable(view);\n                break;\n            case 'dip':\n                contents = this._dipMakeTable(view);\n                break;\n            case 'isc':\n                contents = this._iscMakeTable(view);\n                break;\n            default:\n                return null;\n        }\n\n        return contents;\n    }\n\n    // Table generators\n    _msMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'MS Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Isotropy (ppm)', \n                           'Anisotropy (ppm)', 'Asymmetry', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const iso = getNMRData(view, 'iso', 'ms')[1];\n        const aniso = getNMRData(view, 'aniso', 'ms')[1];\n        const asymm = getNMRData(view, 'asymm', 'ms')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('ms');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                iso[i],\n                aniso[i],\n                asymm[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _efgMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'EFG Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Vzz (au)', 'Anisotropy (au)', \n                           'Asymmetry', 'Q (kHz)', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const Vzz = getNMRData(view, 'e_z', 'efg')[1];\n        const aniso = getNMRData(view, 'aniso', 'efg')[1];\n        const asymm = getNMRData(view, 'asymm', 'efg')[1];\n        const Q = getNMRData(view, 'Q', 'efg')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('efg');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                Vzz[i],\n                aniso[i],\n                asymm[i],\n                Q[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _dipMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'Dipolar coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'D (kHz)', 'r_x (Ang)', 'r_y (Ang)', 'r_z (Ang)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const [D, r] = dipolarCoupling(a1, a2);\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    D,\n                    r[0], r[1], r[2]\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n\n    _iscMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'J coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'J (Hz)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const J = jCoupling(a1, a2);\n\n                if(!J)\n                    return; // No data\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    J\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n}\n\n// Hook for interface\nfunction useFilesInterface() {\n    let state = useSelector(makeSelector('files', ['app_viewer', \n                                                   'app_default_displayed', \n                                                   'eul_convention']), \n                            shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new FilesInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useFilesInterface;\nexport { initialFilesState };","import { createStore } from 'redux';\n\n// Initial state, merged from segments\nimport { initialAppState } from './interfaces/AppInterface';\nimport { initialSelState } from './interfaces/SelInterface';\nimport { initialCScaleState } from './interfaces/CScaleInterface';\nimport { initialMSState } from './interfaces/MSInterface';\nimport { initialEFGState } from './interfaces/EFGInterface';\nimport { initialDipState } from './interfaces/DipInterface';\nimport { initialJCoupState } from './interfaces/JCoupInterface';\nimport { initialEulerState } from './interfaces/EulerInterface';\nimport { initialFilesState } from './interfaces/FilesInterface';\nimport makeMasterListener, { initialListenerState } from './listeners';\n\n// Merging together\nconst initialState = {\n    ...initialAppState,\n    ...initialSelState,\n    ...initialCScaleState,\n    ...initialMSState,\n    ...initialEFGState,\n    ...initialDipState,\n    ...initialJCoupState,\n    ...initialEulerState,\n    ...initialFilesState,\n    ...initialListenerState\n};\n\n// Reducer\nfunction storeReducer(state=initialState, action={type: 'none'}) {\n    switch(action.type) {\n        case 'set':\n            // Set a single value\n            state = {\n                ...state,\n                [action.key]: action.value,\n            };\n            break;\n        case 'update':\n            // Set multiple values\n            state = {\n                ...state,\n                ...action.data\n            };\n            break;\n        case 'call':\n            // Do complex stuff with state\n            let args = [state].concat(action.arguments);\n            let data = action.function(...args);\n            state = {\n                ...state,\n                ...data\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nconst magresStore = createStore(storeReducer);\nmagresStore.subscribe(makeMasterListener(magresStore));\n\nexport default magresStore;","import magresStore from './store';\nimport useAppInterface from './interfaces/AppInterface';\nimport useSelInterface from './interfaces/SelInterface';\nimport useMSInterface from './interfaces/MSInterface';\nimport useEFGInterface from './interfaces/EFGInterface';\nimport useDipInterface from './interfaces/DipInterface';\nimport useEulerInterface from './interfaces/EulerInterface';\nimport useJCoupInterface from './interfaces/JCoupInterface';\nimport useFilesInterface from './interfaces/FilesInterface';\n\nexport default magresStore;\n\nexport { \n    useAppInterface, \n    useSelInterface, \n    useMSInterface, \n    useEFGInterface,\n    useDipInterface,\n    useJCoupInterface,\n    useEulerInterface,\n    useFilesInterface\n};","export default __webpack_public_path__ + \"static/media/logo.3a5b963a.svg\";","import './controls.css';\nimport './MVCustomSelect.css';\n\nimport React, { useState, cloneElement, useEffect } from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\n\nimport { chainClasses } from '../utils';\n\nfunction MVCustomSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className='mv-control mv-cselect-opt' onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVCustomSelect(props) {\n\n    const [ show, setShow ] = useState(false);\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVCustomSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    // Translation?\n    let tstyle = {};    \n    \n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    // If disabled while open, must close\n    useEffect(() => {\n        if (props.disabled)\n            setShow(false);\n    }, [props.disabled]);\n\n    return (\n        <div style={tstyle} className={chainClasses('mv-control', 'mv-cselect', show? null : 'mv-cselect-closed', \n                                                    props.disabled? 'mv-cselect-disabled' : null )} \n            onMouseLeave={(e) => { setShow(false); }} title={props.title}>\n            <div className='mv-control mv-cselect-main' onClick={() => { setShow(true && (!props.disabled)); }}>\n                {options[selected]}\n                <span className='mv-cselect-main-caret'><FaCaretDown /></span>\n            </div>\n            <div className='mv-control mv-cselect-ddown'>\n                {options.map((o, i) => {\n                    return cloneElement(o, {key: i, onClick: () => { setShow(false); onSelect(values[i]); }});\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport { MVCustomSelectOption };\nexport default MVCustomSelect;","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg47\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-18.293285,-29.905846)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path31-3\",\n    style: {\n      fill: \"#ffffff\",\n      strokeWidth: 0.113242,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 20.409953,29.969924 a 2.0525921,2.0525921 0 0 0 -2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,-2.052588 2.0525921,2.0525921 0 0 0 -2.052588,-2.052588 z m 0,0.304891 a 1.7477165,1.7477165 0 0 1 1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,-1.747697 1.7477165,1.7477165 0 0 1 1.747697,-1.747697 z m 0,0.981852 a 0.76590603,0.76590603 0 0 0 -0.765845,0.765845 0.76590603,0.76590603 0 0 0 0.765845,0.765844 0.76590603,0.76590603 0 0 0 0.765844,-0.765844 0.76590603,0.76590603 0 0 0 -0.765844,-0.765845 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMs);\nexport default __webpack_public_path__ + \"static/media/ms.f07fad56.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEfg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379\",\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"M 2.5730992,0.53564415 C 2.0763787,1.0247144 2.1174995,2.1158593 2.1174995,2.1158593 c 0,0 1.090811,0.040787 1.5798807,-0.4559341 C 4.1697678,1.1801491 3.9991355,0.77827206 3.7271516,0.50620724 3.4550908,0.23406562 3.0528756,0.06325682 2.5730992,0.53564415 Z\",\n    id: \"path949\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"m 3.2382813,0.12109375 c -0.2336518,-0.021225 -0.4928561,0.0749413 -0.75,0.328125 C 2.2066461,0.72651627 2.0927766,1.1440416 2.0390625,1.4902344 1.9853484,1.8364272 1.9960938,2.1210938 1.9960937,2.1210938 L 2,2.2324219 l 0.1132813,0.00391 c 0,0 0.2827996,0.010832 0.6289062,-0.042969 C 3.0882941,2.1395587 3.5059251,2.0257566 3.7832031,1.7441406 4.0363717,1.4870123 4.1324787,1.2277171 4.1113281,0.99414063 4.0901775,0.7605642 3.9606182,0.56808419 3.8125,0.41992188 3.6643293,0.27170718 3.471933,0.14231875 3.2382813,0.12109375 Z m -0.021484,0.2421875 C 3.3722117,0.37739918 3.5167352,0.46787023 3.640625,0.59179687 3.7644904,0.71569911 3.8570292,0.86030307 3.8710938,1.015625 3.8851583,1.1709469 3.8305467,1.3515714 3.6113281,1.5742187 3.399537,1.7893233 3.0266438,1.9050922 2.7050781,1.9550781 c -0.251685,0.039123 -0.3754283,0.03197 -0.4570312,0.03125 -7.728e-4,-0.080876 -0.00797,-0.2062232 0.03125,-0.4589844 0.049905,-0.3216465 0.1638213,-0.69447771 0.3789062,-0.90624995 0.222632,-0.21920321 0.403179,-0.27193043 0.5585938,-0.2578125 z\",\n    id: \"path951\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 1.6602402,3.6976978 C 2.1569607,3.2086275 2.11584,2.1174825 2.11584,2.1174825 c 0,0 -1.0908111,-0.040787 -1.57988078,0.4559342 -0.4723876,0.4797762 -0.3017553,0.8816532 -0.0297709,1.153718 C 0.7782491,3.9992763 1.1804642,4.1700851 1.6602402,3.6976978 Z\",\n    id: \"path957\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1210938,1.9960937 c 0,0 -0.2847528,-0.010832 -0.6308594,0.042969 -0.3461066,0.053801 -0.76373761,0.1676027 -1.04101565,0.4492188 -0.25316852,0.2571283 -0.34927569,0.5164235 -0.328125,0.75 C 0.14224444,3.4718577 0.27180335,3.6643377 0.41992188,3.8125 0.56809254,3.9607147 0.76048898,4.0901031 0.99414063,4.1113281 1.2277923,4.1325531 1.48895,4.0363868 1.7460937,3.7832031 2.0277289,3.5059056 2.1396453,3.0883803 2.1933594,2.7421875 2.2470735,2.3959947 2.2363281,2.1132813 2.2363281,2.1132813 L 2.2324219,2 Z M 1.9863281,2.2480469 c 7.439e-4,0.081628 0.00781,0.2052829 -0.03125,0.4570312 C 1.9051725,3.0267247 1.7912568,3.3995559 1.5761719,3.6113281 1.3535401,3.8305313 1.1710397,3.8852117 1.015625,3.8710938 0.86021029,3.8569758 0.71568671,3.7645516 0.59179687,3.640625 0.46793127,3.5167228 0.37734588,3.3721188 0.36328125,3.2167969 0.34921662,3.061475 0.40382827,2.8808505 0.62304687,2.6582031 0.83483802,2.4430985 1.2057781,2.3292828 1.5273437,2.2792969 1.7800414,2.2400162 1.905477,2.2472982 1.9863281,2.2480469 Z\",\n    id: \"path959\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 2.1132813,1.9960937 2,2 1.9960937,2.1132813 c 0,0 -0.010745,0.2827134 0.042969,0.6289062 0.053714,0.3461928 0.1675836,0.7637181 0.4492188,1.0410156 0.2571437,0.2531837 0.5163483,0.34935 0.75,0.328125 C 3.4719329,4.0901031 3.6643293,3.9607147 3.8125,3.8125 3.9606185,3.6643377 4.0901775,3.4718577 4.1113281,3.2382813 4.1324788,3.0047048 4.0363716,2.7454096 3.7832031,2.4882813 3.5059251,2.2066652 3.0882941,2.0928632 2.7421875,2.0390625 2.3960809,1.9852618 2.1132812,1.9960937 2.1132813,1.9960937 Z m 0.1347656,0.2519532 c 0.081645,-7.179e-4 0.2054038,-0.00786 0.4570312,0.03125 0.3215657,0.049986 0.6944589,0.1638016 0.90625,0.3789062 C 3.8305467,2.8808505 3.8851584,3.061475 3.8710938,3.2167969 3.8570291,3.3721188 3.7644906,3.5167228 3.640625,3.640625 3.5167352,3.7645516 3.3722116,3.8569758 3.2167969,3.8710938 3.0613821,3.8852117 2.8808349,3.8305313 2.6582031,3.6113281 2.4431182,3.3995559 2.3292024,3.0267247 2.2792969,2.7050781 2.2402454,2.4533874 2.2473047,2.3297177 2.2480469,2.2480469 Z\",\n    id: \"path4379-8-7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 0.99414063,0.12304687 C 0.76052273,0.14426881 0.56808207,0.27367078 0.41992188,0.421875 0.27181384,0.57002685 0.14224137,0.76255105 0.12109375,0.99609375 0.09994613,1.2296364 0.19606487,1.4889803 0.44921875,1.7460937 0.72646854,2.0276811 1.1441384,2.1415134 1.4902344,2.1953125 c 0.346096,0.053799 0.6308594,0.042969 0.6308594,0.042969 l 0.1113281,-0.00391 0.00391,-0.1132812 c 0,0 0.010744,-0.2827241 -0.042969,-0.6289063 C 2.1396469,1.1460053 2.0277002,0.72844112 1.7460937,0.45117188 1.4889649,0.19800288 1.2277585,0.10182494 0.99414063,0.12304687 Z M 1.015625,0.36328125 c 0.1554485,-0.014121 0.3379002,0.0405478 0.5605469,0.25976562 0.2151136,0.21180052 0.328999,0.58459283 0.3789062,0.90625003 0.039228,0.2528276 0.032025,0.3781486 0.03125,0.4589843 -0.08081,7.505e-4 -0.2062203,0.00804 -0.4589844,-0.03125 C 1.2057675,1.9070437 0.83486627,1.7913052 0.62304687,1.5761719 0.40381362,1.3535096 0.34921357,1.1729338 0.36328125,1.0175781 0.37734893,0.86222244 0.46792083,0.71766269 0.59179687,0.59375 0.71569719,0.46981287 0.86017652,0.37740225 1.015625,0.36328125 Z\",\n    id: \"path4379-8-7-9\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEfg);\nexport default __webpack_public_path__ + \"static/media/efg.dd4cc518.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDip(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path1204\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffb\",\n      strokeWidth: 0.214,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 4.089079,2.0563225 c 0,1.0289629 -0.8331367,1.8631023 -1.3433946,1.8631023 -0.5102579,-10e-8 -0.5044128,-0.8341394 -0.5044128,-1.8631023 0,-1.0289628 -0.00584,-1.86310211 0.5044128,-1.86310221 0.5102579,0 1.3433946,0.83413931 1.3433946,1.86310221 z\",\n    id: \"path1994\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 2.7460938,0.0859375 c -0.1567163,3e-8 -0.2914586,0.07367204 -0.3789063,0.18945313 C 2.2797398,0.39117171 2.2300544,0.54136545 2.1972656,0.71875 c -0.065577,0.3547691 -0.0625,0.8236122 -0.0625,1.3378906 0,0.5142784 -0.00308,0.9811683 0.0625,1.3359375 0.032788,0.1773846 0.082474,0.3295313 0.1699219,0.4453125 0.087448,0.1157812 0.2221891,0.1894531 0.3789063,0.1894531 0.3134343,0 0.6597622,-0.2320725 0.9453125,-0.5859374 0.2855502,-0.353865 0.5039062,-0.841406 0.5039062,-1.3847657 0,-0.5433597 -0.218356,-1.0309007 -0.5039062,-1.3847656 C 3.405856,0.31801006 3.0595281,0.0859375 2.7460938,0.0859375 Z m 0,0.21484375 c 0.196823,0 0.5207148,0.18541461 0.7792968,0.50585938 0.258582,0.32044477 0.4570313,0.76439787 0.4570313,1.24999997 0,0.4856022 -0.1984493,0.9295552 -0.4570313,1.25 C 3.2668086,3.6270854 2.9429167,3.8125 2.7460938,3.8125 2.6476822,3.8125 2.5920753,3.7817592 2.5371094,3.7089844 2.4821435,3.6362095 2.4377356,3.5132859 2.4082031,3.3535156 2.3491381,3.0339751 2.3476563,2.5713242 2.3476563,2.0566406 c 0,-0.5146833 0.00148,-0.9792875 0.060547,-1.2988281 0.029533,-0.1597703 0.07394,-0.28074067 0.1289063,-0.35351562 0.054966,-0.072775 0.1105744,-0.10351561 0.2089844,-0.10351563 z\",\n    id: \"path1996\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 1.4882812,0.09765625 c -0.3134344,0 -0.66171528,0.23207255 -0.94726558,0.5859375 C 0.25546533,1.0374587 0.03710938,1.5249996 0.03710937,2.0683594 c 0,0.5433597 0.21835596,1.0309007 0.50390625,1.3847656 0.2855503,0.3538649 0.63383118,0.5839844 0.94726558,0.5839844 0.1567172,-1e-7 0.2914583,-0.071719 0.3789063,-0.1875 0.087448,-0.1157812 0.1371335,-0.2679279 0.1699219,-0.4453125 0.065577,-0.3547692 0.0625,-0.8216592 0.0625,-1.3359375 0,-0.5142785 0.00308,-0.9831215 -0.0625,-1.33789065 C 2.0043206,0.5530842 1.9546352,0.40289046 1.8671875,0.28710938 1.7797398,0.17132829 1.6449975,0.09765628 1.4882812,0.09765625 Z m 0,0.21484375 c 0.09841,2e-8 0.1540186,0.0307407 0.2089844,0.10351563 0.054966,0.0727749 0.099374,0.19374531 0.1289063,0.35351562 0.059066,0.31954065 0.058594,0.78414475 0.058594,1.29882815 0,0.5146835 4.713e-4,0.9773345 -0.058594,1.296875 -0.029532,0.1597702 -0.07394,0.2826939 -0.1289063,0.3554687 -0.054966,0.072775 -0.1105728,0.1035156 -0.2089844,0.1035157 -0.196823,0 -0.52266797,-0.1854147 -0.78124995,-0.5058594 -0.25858198,-0.3204448 -0.45507812,-0.7643979 -0.45507812,-1.25 0,-0.4856022 0.19649614,-0.9295553 0.45507812,-1.25000002 C 0.96561323,0.4979146 1.2914582,0.3125 1.4882812,0.3125 Z\",\n    id: \"path1204-3\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDip);\nexport default __webpack_public_path__ + \"static/media/dip.4ab1e1ee.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgJcoup(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g2792\",\n    transform: \"translate(-0.12942697,-0.24771585)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 0.86132813,2.609375 a 0.25,0.25 0 0 0 -0.25000001,0.25 c 0,0.4485824 0.23846935,0.8635994 0.62695308,1.0878906 0.3884838,0.2242913 0.8693287,0.2242912 1.2578126,0 C 2.8845776,3.7229744 3.125,3.3079575 3.125,2.859375 a 0.25,0.25 0 0 0 -0.25,-0.25 0.25,0.25 0 0 0 -0.25,0.25 c 0,0.2707514 -0.1444286,0.5208743 -0.3789062,0.65625 -0.2344777,0.1353757 -0.523335,0.1353757 -0.7578126,0 C 1.2538037,3.3802493 1.1113281,3.1301264 1.1113281,2.859375 a 0.25,0.25 0 0 0 -0.24999997,-0.25 z\",\n    id: \"path2096\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 V 2.859375 a 0.25,0.25 0 0 0 0.25,0.25 0.25,0.25 0 0 0 0.25,-0.25 V 0.86328125 a 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1171875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 0.25,0.25 0 0 0 0.25,0.24999995 h 1.5136719 a 0.25,0.25 0 0 0 0.25,-0.24999995 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453-6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJcoup);\nexport default __webpack_public_path__ + \"static/media/jcoup.2bc45a9a.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEuler(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g23220\",\n    transform: \"translate(-0.12438843,0.37954715)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.70134777,2.576951 H 3.7807629 V 3.0747627 H 0.70134777 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247-3\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    transform: \"rotate(-45)\",\n    d: \"M -1.5022547,2.2452056 H 1.5771604 V 2.7430173 H -1.5022547 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.95025361,2.8258569 A 0.24890584,0.24890584 0 0 1 0.70134777,3.0747628 0.24890584,0.24890584 0 0 1 0.45244193,2.8258569 0.24890584,0.24890584 0 0 1 0.70134777,2.5769511 0.24890584,0.24890584 0 0 1 0.95025361,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 3.1277298,0.64838237 A 0.24890584,0.24890584 0 0 1 2.878824,0.8972882 0.24890584,0.24890584 0 0 1 2.6299182,0.64838237 0.24890584,0.24890584 0 0 1 2.878824,0.39947653 0.24890584,0.24890584 0 0 1 3.1277298,0.64838237 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5-6\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 4.0296685,2.8258569 A 0.24890584,0.24890584 0 0 1 3.7807627,3.0747628 0.24890584,0.24890584 0 0 1 3.5318568,2.8258569 0.24890584,0.24890584 0 0 1 3.7807627,2.5769511 0.24890584,0.24890584 0 0 1 4.0296685,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-6\",\n    style: {\n      fill: \"#505050\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: 8.64555,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 2.0206488,1.4219955 1.735275,1.725696 A 1.5092943,1.5092943 0 0 1 2.2104616,2.811338 L 2.6276135,2.807408 A 1.9264272,1.9264272 0 0 0 2.0206488,1.4219955 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEuler);\nexport default __webpack_public_path__ + \"static/media/euler.04feefb4.svg\";\nexport { ForwardRef as ReactComponent };","import './MVIcon.css';\n\nimport React from 'react';\n\nimport { ReactComponent as MSIcon } from './ms.svg';\nimport { ReactComponent as EFGIcon } from './efg.svg';\nimport { ReactComponent as DipIcon } from './dip.svg';\nimport { ReactComponent as JcoupIcon } from './jcoup.svg';\nimport { ReactComponent as EulerIcon } from './euler.svg';\n\nconst icons = {\n    ms: MSIcon,\n    efg: EFGIcon,\n    dip: DipIcon,\n    jcoup: JcoupIcon,\n    euler: EulerIcon\n};\n\nfunction MVIcon(props) {\n\n    if (!(props.icon in icons)) {\n        throw new Error('Invalid icon in MVIcon');\n    }\n\n    const Icon = icons[props.icon];\n    const color = (props.color || '#ffffff');\n\n    return (\n        <Icon className='mv-icon' style={{'--path-fill': color}} {...props}/>\n        );\n}\n\nexport default MVIcon;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewHeader.css';\nimport logo from '../icons/logo.svg';\nimport { FaSun, FaMoon, FaRegFolderOpen, FaMousePointer, FaFile, FaBan } from 'react-icons/fa';\n\nimport React from 'react';\nimport MVCustomSelect, { MVCustomSelectOption } from '../controls/MVCustomSelect';\nimport MVIcon from '../icons/MVIcon';\nimport { useAppInterface } from './store';\n\nfunction ThemeSwitcher() {\n\n    const appint = useAppInterface();\n\n    const other = {\n        dark: 'light',\n        light: 'dark'\n    };\n\n    return (<div id='mv-themeswitch' onClick={() => { appint.theme = other[appint.theme]; }}>\n        <div id='mv-themeicons' className={appint.theme}>\n            <FaMoon id='mv-themedark'/>\n            <FaSun id='mv-themelight'/>\n        </div>\n    </div>);\n}\n\nfunction MagresViewHeader() {\n\n    const appint = useAppInterface();\n\n    return (<header className='mv-header'>\n        <div className='mv-header-left'>\n            <img src={logo} alt='MagresView logo' id='mv-header-logo'></img>\n            <h3 id='mv-header-title'>\n                <span style={{color: 'var(--ms-color-2)'}}>M</span>agres<span style={{color: 'var(--efg-color-2)'}}>V</span>iew 2.0\n            </h3>\n        </div>\n        <div className='mv-header-right'>\n            <MVCustomSelect onSelect={(v) => { appint.sidebar = v; }} selected={appint.sidebar}>\n                <MVCustomSelectOption value='load' icon={<FaRegFolderOpen />}>Load file</MVCustomSelectOption>\n                <MVCustomSelectOption value='select' icon={<FaMousePointer />}>Select and display</MVCustomSelectOption>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>Magnetic Shielding</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>Electric Field Gradient</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='jcoup' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='euler' icon={<MVIcon icon='euler' color='var(--bkg-color-3)'/>}>Euler Angles</MVCustomSelectOption>\n                <MVCustomSelectOption value='files' icon={<FaFile />}>Report files</MVCustomSelectOption>\n                <MVCustomSelectOption value='none' icon={<FaBan />}>No sidebar</MVCustomSelectOption>\n            </MVCustomSelect>            \n            <span className='mv-hor-sep-3'></span>\n            <ThemeSwitcher />\n        </div>\n    </header>);\n}\n\nexport default MagresViewHeader;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewScreenshot.css';\n\nimport { FaCamera } from 'react-icons/fa';\nimport useAppInterface from './store/interfaces/AppInterface';\nimport { saveImage } from '../utils';\n\n\nfunction MagresViewScreenshot(props) {\n\n    const appint = useAppInterface();\n\n    function takeScreenshot() {\n        let data = appint.viewer.getScreenshotData();\n        saveImage(data, 'MagresViewScreenshot.png');\n    }\n\n    return (<div className='mv-sshot' onClick={takeScreenshot}>\n        <FaCamera />\n        <div className='mv-sshot-text'>\n            Take a screenshot\n        </div>\n    </div>);\n}\n\nexport default MagresViewScreenshot;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewSidebar.css';\n\nimport React from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\n\nimport { chainClasses } from '../../utils';\nimport { useAppInterface } from '../store';\n\nfunction MagresViewSidebar(props) {\n\n    const appint = useAppInterface();\n\n    return (<div className={chainClasses('mv-sidebar', props.show? 'open' : '')}>\n        <div className='mv-sidebar-title'>\n            {props.title? <h2>{props.title}</h2> : null}            \n            <FaAngleDoubleRight className='mv-sidebar-hide' onClick={() => { appint.sidebar = 'none'; }} />\n        </div>\n        {props.children}\n    </div>);\n}\n\nexport default MagresViewSidebar;","import './MVFile.css';\nimport { chainClasses } from '../utils';\n\nimport React from 'react';\n\nfunction MVFile(props) {\n\n    function onChange(e) {\n        if (props.onSelect) {\n            var files = e.target.files;\n            if (files.length > 0) {\n                props.onSelect(files);\n            }\n        }\n        e.target.value = null;\n    }\n\n    return (\n        <input className={chainClasses('mv-control', 'mv-file', props.notext? 'hide-text' : null)} type='file' \n            accept={props.filetypes} \n            onChange={onChange} \n            multiple={props.multiple}\n        />\n    );\n}\n\nexport default MVFile;","import './MVBox.css';\nimport React from 'react';\nimport { GrFormClose } from 'react-icons/gr';\n\nimport { chainClasses } from '../utils';\n\nfunction MVBox(props) {\n\n    const status_class = (props.status)? 'mv-box-' + props.status : '';\n    const onClose = props.onClose || (() => {});\n\n    return (<div className={chainClasses('mv-control', 'mv-box', status_class)}>\n        <div className='mv-box-header'><GrFormClose onClick={onClose} size={22}/></div>\n        {props.children}\n    </div>);\n}\n\nexport default MVBox;","import './MVCheckBox.css';\n\nimport React from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVCheckBox(props) {\n\n    const id = useId('checkbox');\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    const onCheck = props.onCheck || (() => {});\n\n    return (\n        <span className='mv-control mv-checkbox' style={style} title={props.title}>\n            <input id={id} type='checkbox' checked={props.checked} onChange={(e) => onCheck(e.target.checked)}/>\n            <label htmlFor={id}/>{props.children}\n        </span>\n    );\n}\n\nexport default MVCheckBox;","import './controls.css';\nimport './MVListSelect.css';\n\nimport React, { cloneElement } from 'react';\n\nimport { chainClasses } from '../utils';\n\nfunction MVListSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className={chainClasses('mv-control', 'mv-lselect-opt', props.selected? 'mv-lselected': null)} \n             onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVListSelect(props) {\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVListSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    return (\n        <div className='mv-control mv-lselect' title={props.title}>\n            {options.map((o, i) => {\n                return cloneElement(o, {key: i, selected: (i === selected),\n                                        onClick: () => { onSelect(values[i]); }});\n            })}\n        </div>\n    );\n}\n\n\nexport { MVListSelectOption };\nexport default MVListSelect;","import MagresViewSidebar from './MagresViewSidebar';\n\nimport { AiFillEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { MdDeleteForever } from 'react-icons/md';\n\nimport MVFile from '../../controls/MVFile';\nimport MVBox from '../../controls/MVBox';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVListSelect, { MVListSelectOption } from '../../controls/MVListSelect';\nimport { useAppInterface } from '../store';\n\nimport React, { useState } from 'react';\n/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\n// Accepted file formats\nconst file_formats = ['.cif', '.xyz', '.magres', '.cell'];\n\nfunction MVSidebarLoad(props) {\n\n    const [ state, setState ] = useState({\n        load_message: '',\n        load_message_status: null,\n        list_selected: ''\n    });\n\n    const appint = useAppInterface();\n    const models = appint.models;\n\n    console.log('[MVSidebarLoad rendered]');\n\n    // Methods\n    function loadModel(f) {\n\n        appint.load(f, (success) => {\n            // Check success\n            let msg = '';\n            let err = false;\n            _.map(success, (v, n) => {\n                if (v !== 0) {\n                    msg += 'Error parsing file ' + n + ': ' + v + '\\n';\n                    err = true;\n                }\n            });\n            if (msg === '') {\n                msg = 'All files parsed successfully!'\n            }\n\n            setState({\n                ...state,\n                load_message: msg, \n                load_message_status: err? 'error' : 'success'\n            });\n        });\n    }\n\n    function makeModelOption(m, i) {\n\n        let model_icon;        \n        if (m === appint.currentModelName) {\n            model_icon = <AiFillEye size={22}/>;\n        }\n        else {\n            model_icon = <AiOutlineEyeInvisible size={22} onClick={() => { appint.display(m); }} />\n        }\n\n        return (<MVListSelectOption key={i} value={m} icon={model_icon}>\n            {m}\n            <MdDeleteForever style={{color: 'var(--err-color-2)'}} size={22} onClick={() => { appint.delete(m); }} />\n        </MVListSelectOption>);\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Load file'>\n        <div className='mv-sidebar-block'>\n            <MVFile filetypes={file_formats.join(',')} onSelect={loadModel} notext={true} multiple={true}/>\n            <MVCheckBox onCheck={(v) => { appint.loadAsMol = v }} checked={appint.loadAsMol}>Load as molecular crystal</MVCheckBox>\n            <MVCheckBox onCheck={(v) => { appint.useNMRIsotopes = v }} checked={appint.useNMRIsotopes}>Use only NMR active isotopes</MVCheckBox>\n        </div>\n        <h4>Models:</h4>\n        <MVListSelect selected={state.list_selected} onSelect={(v) => { setState({...state, list_selected: v}); }}>\n            {models.map(makeModelOption)}\n        </MVListSelect>\n        <span className='sep-1' />\n        <MVBox status={state.load_message_status} onClose={() => {setState({...state, load_message_status: ''})}}>\n            {state.load_message}\n        </MVBox>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarLoad;","import './MVButton.css';\nimport React from 'react';\n\nfunction MVButton(props) {\n    return (\n    <div className='mv-control'>\n        <button {...props} className='mv-control mv-button'>\n            {props.children}\n        </button>\n    </div>);\n}\n\nexport default MVButton;","import './MVRadioButton.css';\nimport _ from 'lodash';\n\nimport React, { cloneElement } from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVRadioButton(props) {\n\n    const uid = useId('radiobutton');\n\n    return (<span className='mv-control mv-radio' title={props.title}>\n        <input id={uid} name={props.name} type=\"radio\" checked={props.checked} onChange={props.onChange}/>\n        <label htmlFor={uid}></label>{props.children}\n    </span>);\n}\n\nfunction MVRadioGroup(props) {\n\n    // Which children are buttons?\n    const buttons = _.filter(props.children, (c) => c.type === MVRadioButton);\n    const values = buttons.map((b) => b.props.value);\n\n    // Find the index of the one we want selected\n    const selected = values.findIndex((v) => v === props.selected);\n    const onChange = props.onSelect? props.onSelect : (() => {});\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    return(<span className='mv-control mv-radiogroup' style={style} title={props.title}>\n        {props.label? <span className=\"mv-radiogroup-label\" style={props.labelStyle}>{props.label}</span> : null}\n        {buttons.map((b, i) => {\n            return cloneElement(b, {key: i, \n                index: i, \n                checked: (i === selected), \n                name: props.name, \n                onChange: (e) => { onChange(b.props.value); }\n            });\n        })}\n    </span>);\n}\n\nexport { MVRadioGroup };\nexport default MVRadioButton;","import './MVText.css';\n\nimport React, { useState } from 'react';\n\nimport { chainClasses, useId } from '../utils';\n\nfunction MVText(props) {\n\n    const [submitted, setSubmitted] = useState(true);\n    const id = useId('text');\n\n    var filter = null;\n    if (props.filter)\n        filter = new RegExp(props.filter);\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n    }\n\n    const waitSubmit = (props.onSubmit && !submitted);\n\n    function onChange(e) {\n        var v = e.target.value;\n        if (filter) {\n            let m = filter.exec(v)\n            v = m? m[0] : props.value;\n        }\n        setSubmitted(false);\n        if(props.onChange)\n            props.onChange(v);\n    }\n\n    function onKeyDown(e) {\n        if (e.key === 'Enter') {\n            if (waitSubmit)\n                props.onSubmit(props.value);\n            setSubmitted(true);\n        }\n    }\n\n    return (\n    <span className='mv-text' style={style} title={props.title}>\n        {props.children? <label htmlFor={id} className='mv-textlabel'>{props.children}</label> : <></>}\n        <input type='text' id={id} className={chainClasses('mv-control mv-textfield', waitSubmit? 'mv-submit-wait' : '')} \n            size={props.size} value={props.value}\n            onChange={onChange} onKeyDown={onKeyDown}\n            disabled={props.disabled}\n        />\n    </span>);\n}\n\nexport default MVText;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarSelect.css';\n\nimport _ from 'lodash';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useSelInterface } from '../store';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVText from '../../controls/MVText';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\n\nfunction sharedElement(sel) {\n    if (sel == null || sel.atoms.length === 0) {\n        return null;\n    }\n\n    let atoms = sel.atoms;\n    let el = atoms[0].element;\n\n    if (atoms.slice(1).reduce((s, a) => (s && a.element === el), true)) {\n        return el;\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction MVIsotopeSelection(props) {\n\n    // Actually unnecessary; we only use it to trigger a re-render\n    const [ state, setState ] = useState(1);\n\n    const selint = useSelInterface();\n    const selected = selint.selected;\n    const el = sharedElement(selected);\n\n    let elData = null;\n    let isoConf = null;\n    let selOptions = [];\n    let currentOption = 0;\n\n    if (el) {\n        // Information about that element?\n        elData = selected.atoms[0].elementData;\n        isoConf = selected.atoms.map((a) => a.isotope);\n\n        // Are they all the same?\n        currentOption = isoConf[0].toString();\n        if (!isoConf.reduce((s, x) => s && x === isoConf[0], true)) {\n            // If not, then we have to add a special option that reproduces this last\n            // configuration\n            selOptions = [<MVCustomSelectOption key={-1} value={isoConf}>\n                {_.join(_.uniq(isoConf))}\n            </MVCustomSelectOption>];\n            currentOption = isoConf;\n        }\n\n        // Generate options\n        let keys = Object.keys(elData.isotopes).sort();\n        selOptions = selOptions.concat(keys.map((A, i) => (<MVCustomSelectOption key={i} value={A}>\n                {A}\n            </MVCustomSelectOption>))\n        );\n    }\n    else {\n        selOptions = [<MVCustomSelectOption key={0} value={0}>N/A</MVCustomSelectOption>];\n    }\n\n    // This component handles specifically just the selection of isotopes\n    return (<>\n        <h3>Isotope selection</h3>\n        <MVCustomSelect disabled={!el} onSelect={(A) => { selint.setIsotope(A); setState(-state); }} selected={currentOption}>{selOptions}</MVCustomSelect>\n    </>);\n}\n\n\nfunction MVSidebarSelect(props) {\n\n    const selint = useSelInterface();\n\n    console.log('[MVSidebarSelect rendered]');\n\n    function selectMode(v) {\n        selint.selectionMode = v;\n    }\n\n    function setR(v) {\n        selint.selectionSphereR = v;\n    }\n\n    function setN(v) {\n        selint.selectionBondN = v;\n    }\n\n    const selRef = useRef();\n    selRef.current = selint;\n\n    useEffect(() => {\n        console.log('Binding select clicks');\n        let selint = selRef.current;\n        selint.selectionOn = props.show;\n    }, [props.show, selint.app]); // The dependency on app guarantees this is executed AFTER the app itself is loaded\n\n    return (<MagresViewSidebar show={props.show} title='Select and display'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={selint.showCrystLabels} onCheck={(v) => { selint.showCrystLabels = v }}>Show crystallographic labels</MVCheckBox>        \n            <MVCheckBox checked={selint.highlightSelected} onCheck={(v) => { selint.highlightSelected = v }}>Highlight selected</MVCheckBox>        \n            <MVCheckBox checked={selint.showCell} onCheck={(v) => { selint.showCell = v }}>Show unit cell</MVCheckBox>        \n            <span className='sep-1' />\n            <MVRadioGroup label='Selection mode' onSelect={selectMode} selected={selint.selectionMode} name='selec_mode_radio'>\n                <MVRadioButton value='atom'>Atom</MVRadioButton>\n                <MVRadioButton value='element'>Element</MVRadioButton>\n                <MVRadioButton value='sphere'>Sphere, radius =&nbsp;\n                    <MVText size='5' value={selint.selectionSphereR} filter='[0-9]*(?:\\.[0-9]*)?' onChange={setR} onSubmit={setR} />&nbsp;  &#8491;\n                </MVRadioButton>\n                <MVRadioButton value='molecule'>Molecule</MVRadioButton>\n                <MVRadioButton value='bonds'>Bonds, max distance = &nbsp;\n                    <MVText size='3' value={ selint.selectionBondN } filter='[0-9]*' onChange={setN} onSubmit={setN} />\n                </MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <div className='mv-sidebar-grid'>\n                <MVButton onClick={() => { selint.selected = selint.displayed }}>Select visible</MVButton>\n                <MVButton onClick={() => { selint.selected = null }}>Select none</MVButton>                \n                <MVButton onClick={() => { selint.displayed = selint.selected }}>Display selected</MVButton>\n                <MVButton onClick={() => { selint.displayed = null }}>Reset displayed</MVButton>                \n            </div>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVIsotopeSelection />\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Selection controls:</h3>\n            <ul>\n                <li><tt>CLICK</tt> to select an atom/element/etc.</li>\n                <li><tt>SHIFT+CLICK</tt> to add to the current selection</li>\n                <li><tt>CTRL+CLICK</tt> to add or remove (XOR) from the current selection</li>\n            </ul>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarSelect;","import './MVRange.css';\nimport './MVText.css'; \n\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { regularExpressions, useId } from '../utils';\nimport MVText from './MVText';\n\nfunction MVRange(props) {\n\n    // Range definition\n    const min = 'min' in props? props.min : 0;\n    const max = 'max' in props? props.max : 100;\n    const step = 'step' in props? props.step : 1;\n\n    function toNumber(v) {\n        v = parseFloat(v);\n        v = Math.min(v, max);\n        v = Math.max(v, min);\n        v = Math.round(v/step)*step;\n        return v;\n    }\n\n    const in_val = (props.value != null? toNumber(props.value) : min);\n    const id = useId('range');\n\n    const [text, setText] = useState(in_val.toString());\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n        style['--thumb-color'] = props.color;\n    }\n\n    function acceptValue(v) {\n        v = toNumber(v);\n\n        if (props.onChange)\n            props.onChange(v);\n    }\n\n    let stateRef = useRef();\n    stateRef.current = [text, setText];\n\n    // Update the text value if the props one changed and if necessary\n    useEffect(() => {\n        const [text, setText] = stateRef.current;\n\n        if (parseFloat(text) !== in_val)\n            setText(in_val.toString());\n    }, [in_val]);\n\n\n    return (\n        <div className='mv-control'>\n            {props.children? <label htmlFor={id} className='mv-rangelabel'>{props.children}</label> : <></>}            \n            <span className='mv-control mv-range' style={style}>\n                <input className='mv-range-slider' type='range' id={id} onInput={(e) => { acceptValue(e.target.value); }}\n                 min={min} max={max} step={step} value={in_val} disabled={props.disabled}/>\n                <MVText size={4} filter={regularExpressions.float} value={text} onChange={setText} onSubmit={acceptValue} disabled={props.disabled}/>\n            </span>\n        </div>);\n}\n\nexport default MVRange;","import './controls.css';\nimport './MVModal.css';\n\nimport React, { useEffect, useReducer } from 'react';\nimport { IconContext } from 'react-icons';\nimport { IoClose } from 'react-icons/io5';\n\nimport { chainClasses } from '../utils';\n\nimport MVButton from './MVButton';\n\nfunction modalReducer(state, action={}) {\n    switch(action.type) {\n        case 'dragstart': \n            state = {\n                ...state,\n                is_drag: true,\n                x0: action.x0,\n                y0: action.y0\n            };\n            break;\n        case 'move':\n            state = {\n                ...state,\n                dx: action.dx-state.x0,\n                dy: action.dy-state.y0\n            };\n            break;\n        case 'dragend': \n            state = {\n                ...state,\n                is_drag: false,\n                x0: null,\n                y0: null\n            };\n            break;\n        default: \n            break;\n    }\n\n    return state;\n}\n\nfunction MVModal(props) {\n\n    const [state, dispatch] = useReducer(modalReducer, {\n        dx: 0,\n        dy: 0,\n        x0: null,\n        y0: null,\n        is_drag: false\n    });\n\n    const onAccept = props.onAccept || (() => {});\n    const onClose = props.onClose || (() => {});\n\n    function onTitleMouseDown(e) {\n\n        if (props.draggable && e.button === 0) {\n            dispatch({\n                type: 'dragstart',\n                x0: e.clientX-state.dx,\n                y0: e.clientY-state.dy\n            });\n        }\n    }\n\n    useEffect(() => {\n\n        if (state.is_drag) {\n            document.onmousemove = (e) => {\n                dispatch({\n                    type: 'move',\n                    dx: e.clientX,\n                    dy: e.clientY\n                });                \n            }\n\n            document.onmouseup = (e) => {\n                dispatch({\n                    type: 'dragend'\n                });\n            }\n        }\n        else {\n            document.onmousemove = null;\n            document.onmouseup = null;\n        }\n\n    }, [state.is_drag]);\n\n    const modalStyle = {\n        transform: 'translate(' + state.dx + 'px, ' + state.dy + 'px)'\n    };\n\n    const hasOverlay = props.hasOverlay;\n\n    let modal = (<div className={chainClasses('mv-control mv-modal', props.draggable? 'mv-modal-draggable' : '', \n                                              props.resizable? 'mv-modal-resizable' : '')} style={modalStyle}>\n        <div className='mv-modal-title' onMouseDown={onTitleMouseDown}>\n            {props.title} \n            <IconContext.Provider value={{color: 'var(--fwd-color-1)'}}>\n                <IoClose size={22} onClick={onClose}/>\n            </IconContext.Provider>\n        </div>\n        <div className='mv-modal-content'>\n            {props.children}                \n        </div>\n        <div className='mv-modal-footer'>\n            <MVButton onClick={onAccept}>OK</MVButton>\n            <MVButton onClick={onClose}>Cancel</MVButton>\n        </div>\n    </div>);\n\n    if (hasOverlay) {\n        modal = (<div className={chainClasses('mv-control mv-modal-overlay', props.display? '' : 'mv-modal-hidden')}>\n            {modal}\n        </div>);\n    }\n\n    return modal;\n}\n\nexport default MVModal;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarMS.css';\n\nimport _ from 'lodash';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useMSInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVModal from '../../controls/MVModal';\nimport MVText from '../../controls/MVText';\n\nfunction MVReferenceTable(props) {\n\n    const msint = useMSInterface();\n    const [ refTable, setRefTable ] = useState(msint.referenceTable);\n\n    // We store a copy of the reference list internally; it only gets set on\n    // the interface once we click OK. This is to avoid needless expensive \n    // operations when typing text in the fields, especially if the CS labels\n    // are on.\n    \n    const intRef = useRef();\n    intRef.current = msint;\n\n    useEffect(() => {\n        setRefTable(intRef.current.referenceTable);\n    }, [props.display]);\n\n    const elements = _.keys(refTable).sort();\n\n    function copyAll(v) {\n        setRefTable(_.fromPairs(elements.map((el) => [el, v])));\n    }\n\n    return (\n    <MVModal title='References for chemical shifts, by element (ppm)' display={props.display} hasOverlay={true}\n             onClose={props.close} onAccept={() => { msint.updateReferenceTable(refTable); props.close(); }}>\n        <div className='mv-msref-table'>\n            {elements.map((el, i) => {\n                const ref = refTable[el];\n\n                return (<div key={i} className='mv-msref-table-row'>\n                            <div className='mv-msref-table-el'>{el}</div>\n                            <div className='mv-msref-table-ref'>\n                                <MVText value={ref} onChange={(v) => { setRefTable({...refTable, [el]: v}) }} size={5}/>\n                            </div>\n                            <div className='mv-msref-table-copy'>\n                                <MVButton onClick={() => { copyAll(ref); }}>Apply to all</MVButton>\n                            </div>\n                        </div>);\n            })}\n        </div>\n    </MVModal>);\n}\n\n\nfunction MVSidebarMS(props) {\n\n    const [ state, setState ] = useState({\n        showRefTable: false\n    });\n\n    const msint = useMSInterface();\n\n    console.log('[MVSidebarMS rendered]');\n\n    var has_ms = false;\n    if (props.show) {\n        has_ms = msint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Magnetic Shielding'>\n        <div className={chainClasses('mv-sidebar-block', has_ms? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { msint.hasEllipsoids = v; }} checked={msint.hasEllipsoids}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.01} max={0.5} step={0.005} value={msint.ellipsoidScale}\n                      onChange={(s) => { msint.ellipsoidScale = s; }} disabled={!msint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { msint.ellipsoidScale = 0; }} disabled={!msint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { msint.labelsMode = v; }} selected={msint.labelsMode} name='ms_label_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='cs'>Chemical Shifts (ppm, uses references)</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { msint.colorScaleType = v; }} selected={msint.colorScaleType} disabled={!msint.colorScaleAvailable} name='ms_cscale_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='ms_iso'>Isotropy</MVRadioButton>\n                <MVRadioButton value='ms_cs'>Chemical Shifts (uses references)</MVRadioButton>\n                <MVRadioButton value='ms_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='ms_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVButton onClick={() => { setState({...state, showRefTable: true}) }}>Set References</MVButton>\n             <MVReferenceTable display={state.showRefTable} close={() => { setState({...state, showRefTable: false}) }}/>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_ms? 'hidden': '')}>No MS data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarMS;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEFG.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEFGInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport React from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nfunction MVSidebarEFG(props) {\n\n    const efgint = useEFGInterface();\n\n    console.log('[MVSidebarEFG rendered]');\n\n    var has_efg = false;\n    if (props.show) {\n        has_efg = efgint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Electric Field Gradient'>\n        <div className={chainClasses('mv-sidebar-block', has_efg? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { efgint.hasEllipsoids = v; }} checked={ efgint.hasEllipsoids } color={'var(--efg-color-2)'}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.1} max={10.0} step={0.05} value={efgint.ellipsoidScale} color={'var(--efg-color-2)'}\n                      onChange={(s) => { efgint.ellipsoidScale = s; }} disabled={!efgint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { efgint.ellipsoidScale = 0; }} disabled={!efgint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { efgint.labelsMode = v; }} selected={efgint.labelsMode} name='efg_label_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (au)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='Q'>Quadrupole Coupling (kHz)</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { efgint.colorScaleType = v; }} selected={ efgint.colorScaleType } disabled={!efgint.colorScaleAvailable}\n                           name='efg_cscale_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='efg_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='efg_asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='efg_Q'>Quadrupole Coupling</MVRadioButton>\n             </MVRadioGroup>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_efg? 'hidden' : '')}>No EFG data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEFG;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarDip.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useDipInterface } from '../store';\n\n\nfunction MVSidebarDip(props) {\n\n    const dipint = useDipInterface();\n\n    console.log('[MVSidebarDip rendered]');\n\n    const intRef = useRef();\n    intRef.current = dipint;\n\n    useEffect(() => {\n        let dipint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && dipint.isOn) {\n            dipint.bind();\n        }\n        else {\n            dipint.unbind();\n        }\n\n    }, [props.show, dipint.isOn]);\n\n    return (<MagresViewSidebar show={props.show} title='Dipolar couplings'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.isOn = v; }} checked={ dipint.isOn } >Show dipolar couplings</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-block'>\n            <p>\n                Click on an atom to show all dipolar couplings in a radius.\n                (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n            </p>\n             <MVRange min={1.0} max={20.0} step={0.05} value={dipint.radius} color={'var(--dip-color-3)'}\n                      onChange={(s) => { dipint.radius = s; }}>Selection radius</MVRange>\n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.showSphere = v; }} checked={ dipint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.homonuclearOnly = v; }} checked={ dipint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarDip;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarJCoup.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useJCoupInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\n\nfunction MVSidebarJCoup(props) {\n\n    const jcint = useJCoupInterface();\n\n    console.log('[MVSidebarJCoup rendered]');\n\n    const intRef = useRef();\n    intRef.current = jcint;\n\n    useEffect(() => {\n        let jcint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && jcint.isOn) {\n            jcint.bind();\n        }\n        else {\n            jcint.unbind();\n        }\n\n    }, [props.show, jcint.isOn]);\n\n    var has_jc = false;\n    if (props.show) {\n        has_jc = jcint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='J couplings'>\n        <div className={has_jc? '' : 'hidden'}>\n            <div className='mv-sidebar-block'>\n                <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.isOn = v; }} checked={ jcint.isOn } >Show J couplings</MVCheckBox>\n            </div>\n            <div className='mv-sidebar-block'>\n                <p>\n                    Click on an atom to show all dipolar couplings in a radius.\n                    (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n                </p>\n                 <MVRange min={1.0} max={20.0} step={0.05} value={jcint.radius} color={'var(--jcoup-color-3)'}\n                          onChange={(s) => { jcint.radius = s; }}>Selection radius</MVRange>\n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.showSphere = v; }} checked={ jcint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.homonuclearOnly = v; }} checked={ jcint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n            </div>\n        </div>\n         <div className={chainClasses('mv-warning-noms', has_jc? 'hidden': '')}>No ISC data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarJCoup;","import './MVSwitch.css';\nimport { chainClasses } from '../utils';\n\nfunction MVSwitch(props) {\n\n    const style = {\n        '--color-true': props.colorTrue || 'var(--ok-color-2)',\n        '--color-false': props.colorFalse || 'var(--err-color-2)'\n    };\n\n    const onClick = props.onClick || (() => {});\n\n    return (<div className={chainClasses('mv-control mv-switch', props.on? 'mv-switch-true' : 'mv-switch-false')} \n        style={style} onClick={onClick}>\n        <div className='mv-switch-thumb'></div>\n    </div>);\n}\n\nexport default MVSwitch;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEuler.css';\n\nimport { useRef, useEffect } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEulerInterface } from '../store';\nimport { saveContents, copyContents } from '../../utils';\n\nimport MVSwitch from '../../controls/MVSwitch';\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport { FaCopy } from 'react-icons/fa';\n\nfunction MVSidebarEuler(props) {\n\n    const eulint = useEulerInterface();\n\n    console.log('[MVSidebarEuler rendered]');\n\n    const intRef = useRef();\n    intRef.current = eulint;\n\n    useEffect(() => {\n        let eulint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show) {\n            eulint.bind();\n        }\n        else {\n            eulint.unbind();\n        }\n\n    }, [props.show]);\n\n    const otherTensor = {\n        ms: 'efg',\n        efg: 'ms'\n    };\n\n    // Round values\n    let a = eulint.alpha;\n    let b = eulint.beta;\n    let c = eulint.gamma;\n\n    if (a !== 'N/A') {\n        // It's a number\n        a = a.toFixed(2);\n        b = b.toFixed(2);\n        c = c.toFixed(2);\n    }\n\n    const hasSel = (eulint.atomA && eulint.atomB);\n\n    return (<MagresViewSidebar show={props.show} title='Euler angles'>\n        <p>\n            Left (right) click on atoms to pick atom A (B). Choose with the \n            switches below which NMR tensor you care about for each, and\n            the Euler angles between them will be automatically printed out.\n        </p>\n        <div className='mv-sidebar-block'>\n            <h3>Atom A</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelA}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorA === 'efg' } onClick={() => { eulint.tensorA = otherTensor[eulint.tensorA]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Atom B</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelB}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorB === 'efg' } onClick={() => { eulint.tensorB = otherTensor[eulint.tensorB]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Convention</h3>\n            <MVCustomSelect selected={eulint.convention} onSelect={(v) => { eulint.convention = v; }}>\n                <MVCustomSelectOption value='zyz'>ZYZ</MVCustomSelectOption>\n                <MVCustomSelectOption value='zxz'>ZXZ</MVCustomSelectOption>\n            </MVCustomSelect>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Angles</h3>\n            <table className='mv-eul-results'>\n                <thead>\n                    <tr>\n                        <td>Alpha</td>\n                        <td>Beta</td>\n                        <td>Gamma</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{a}&deg;</td>\n                        <td>{b}&deg;</td>\n                        <td>{c}&deg;</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { copyContents(eulint.txtReport()); }} disabled={!hasSel}><FaCopy />&nbsp;Copy to clipboard</MVButton>            \n        </div>\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { saveContents('data:,' + eulint.txtSelfAngleTable(), 'eulerTable.txt'); }}  disabled={!(eulint.hasMSData && eulint.hasEFGData)}>\n                Download table of MS-to-EFG angles\n            </MVButton>            \n        </div>\n\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEuler;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarFiles.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport MVIcon from '../../icons/MVIcon';\n\nimport { useFilesInterface } from '../store';\nimport { saveContents } from '../../utils';\n\nconst saveFile = (c, fn) => { saveContents('data:,' + c, fn); }\n\nfunction MVSidebarFiles(props) {\n\n    const fileint = useFilesInterface();\n\n    return (<MagresViewSidebar title='Report files' show={props.show}>\n        <div className='mv-sidebar-block'>\n            <h3>File type:</h3>\n            <MVCustomSelect selected={fileint.fileType} onSelect={(v) => { fileint.fileType = v; }}>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>MS table</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>EFG table</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar coupling table</MVCustomSelectOption>\n                <MVCustomSelectOption value='isc' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J coupling table</MVCustomSelectOption>\n            </MVCustomSelect>\n            <MVButton onClick={() => { saveFile(fileint.generateFile(), fileint.fileName); }} disabled={!fileint.fileValid}>Save file</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarFiles;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './themes.css';\nimport '../controls/controls.css';\nimport './MagresViewApp.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { chainClasses } from '../utils';\nimport { useAppInterface } from './store';\n\nimport MagresViewHeader from './MagresViewHeader';\nimport MagresViewScreenshot from './MagresViewScreenshot';\n\nimport MVSidebarLoad from './sidebars/MVSidebarLoad';\nimport MVSidebarSelect from './sidebars/MVSidebarSelect';\nimport MVSidebarMS from './sidebars/MVSidebarMS';\nimport MVSidebarEFG from './sidebars/MVSidebarEFG';\nimport MVSidebarDip from './sidebars/MVSidebarDip';\nimport MVSidebarJCoup from './sidebars/MVSidebarJCoup';\nimport MVSidebarEuler from './sidebars/MVSidebarEuler';\nimport MVSidebarFiles from './sidebars/MVSidebarFiles';\n\n\nfunction MagresViewPage() {\n\n    const [hovered, setHovered] = useState(false);\n\n    let appint = useAppInterface();\n\n    const appRef = useRef(appint);\n\n    useEffect(() => {\n        appRef.current.initialise('#mv-appwindow');\n    }, []);\n\n\n    // Handling the dragging events\n    function handleDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handleDragEnter(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(true);        \n    }\n\n    function handleDragLeave(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(false);        \n    }\n\n    function handleDrop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            appint.load(e.dataTransfer.files)\n            e.dataTransfer.clearData()\n        }        \n        setHovered(false);\n    }\n\n    return (<div className={chainClasses('mv-main-page', 'theme-' + appint.theme, hovered? 'has-drag' : '' )}\n                 onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={handleDrop}>\n                <MagresViewHeader />\n                <MVSidebarLoad show={appint.sidebar === 'load'} />\n                <MVSidebarSelect show={appint.sidebar === 'select'} />\n                <MVSidebarMS show={appint.sidebar === 'ms'} />\n                <MVSidebarEFG show={appint.sidebar === 'efg'} />\n                <MVSidebarDip show={appint.sidebar === 'dip'} />\n                <MVSidebarJCoup show={appint.sidebar === 'jcoup'} />\n                <MVSidebarEuler show={appint.sidebar === 'euler'} />\n                <MVSidebarFiles show={appint.sidebar === 'files'} />\n                <div id='mv-appwindow' className='mv-background'/>\n                <MagresViewScreenshot />\n                <div className='drag-overlay' />\n            </div>);\n}\n\nfunction MagresViewApp() {\n\n    return (\n        <div className='mv-main-app'>\n            <MagresViewPage />\n        </div>\n    );\n}\n\nexport default MagresViewApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport MagresViewApp from './core/MagresViewApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport magresStore from './core/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={magresStore}>\n      <MagresViewApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}