{"version":3,"sources":["utils/utils-react.js","utils/utils-generic.js","utils/utils-regexp.js","utils/utils-nmr.js","utils/utils-rotation.js","utils/utils-events.js","core/store/utils.js","core/store/listeners/colors.js","core/store/listeners/ellipsoids.js","core/store/listeners/labels.js","core/store/listeners/links.js","core/store/listeners/euler.js","core/store/listeners/events.js","core/store/listeners/index.js","core/store/listeners/display.js","core/store/listeners/views.js","core/store/listeners/cell.js","core/store/listeners/cscales.js","core/store/listeners/plots.js","core/store/interfaces/SelInterface.js","core/store/interfaces/CScaleInterface.js","core/store/interfaces/MSInterface.js","core/store/interfaces/EFGInterface.js","core/store/interfaces/DipInterface.js","core/store/interfaces/JCoupInterface.js","core/store/interfaces/EulerInterface.js","core/store/interfaces/AppInterface.js","core/store/interfaces/PlotsInterface.js","core/store/interfaces/FilesInterface.js","core/store/store.js","core/store/index.js","icons/logo.svg","controls/MVCustomSelect.js","icons/ms.svg","icons/efg.svg","icons/dip.svg","icons/jcoup.svg","icons/euler.svg","icons/MVIcon.js","core/MagresViewHeader.js","core/MagresViewScreenshot.js","core/sidebars/MagresViewSidebar.js","controls/MVFile.js","controls/MVBox.js","controls/MVCheckBox.js","controls/MVListSelect.js","core/sidebars/MVSidebarLoad.js","controls/MVButton.js","controls/MVRadioButton.js","controls/MVText.js","core/sidebars/MVSidebarSelect.js","controls/MVRange.js","controls/MVModal.js","core/sidebars/MVSidebarMS.js","core/sidebars/MVSidebarEFG.js","core/sidebars/MVSidebarDip.js","core/sidebars/MVSidebarJCoup.js","controls/MVSwitch.js","core/sidebars/MVSidebarEuler.js","core/sidebars/MVSidebarPlots.js","core/sidebars/MVSidebarFiles.js","core/plot/ImageLayer.js","core/plot/MVPlot1D.js","core/MagresViewApp.js","reportWebVitals.js","index.js"],"names":["chainClasses","_","join","flatten","arguments","useId","prefix","useState","uniqueId","id","CallbackMerger","n","callback","this","_callback","_n","_arg","arg","Error","merge","centerDisplayed","app","pos","mview","positions","map","a","xyz","average","reduce","x","s","v","i","length","averagePosition","displayed","centerCamera","tableRow","values","width","precision","Number","isFinite","isInteger","toFixed","toString","ns","repeat","saveContents","data","filename","download","document","createElement","setAttribute","click","regularExpressions","Map","float","RegExp","int","alpha","alphanumeric","dipolarCoupling","a1","a2","g1","isotopeData","gamma","g2","r1","r","R","Math","sqrt","rnorm","PI","pow","jCoupling","T","getArrayValue","index","e","iscAtomicToHz","isotropy","rotationBetween","axes1","axes2","mjs","eulerFromRotation","convention","cosb","min","max","c","b","acos","abs","atan2","eulerBetweenTensors","T1","T2","ax1","haeberlen_eigenvectors","ax2","ClickHandler","codes","_callbacks","handler","forEach","code","onAtomClick","atom","event","cbacks","name","cback","makeSelector","extras","selector","state","ans","key","startsWith","indexOf","addPrefix","p","getSel","sel","selected","getNMRData","view","datatype","tenstype","reftable","units","tens_units","ms","efg","tensors","anisotropy","asymmetry","span","skew","el","atoms","element","haeberlen_eigenvalues","iD","efgAtomicToHz","Q","BaseInterface","dispatcher","_state","_dispatcher","action","DataCheckInterface","app_viewer","model","hasArray","msColor","efgColor","makeEllipsoidListener","color","pre_view","pre_on","pre_scale","current_view","next_view","on","scale","removeEllipsoids","avg","t","sum","eigenvalues","addEllipsoids","scalingFactor","opacity","msEllipsoidListener","efgEllipsoidListener","makeLabelListener","shiftfunc","pre_references","pre_type","label_texts","ref_table","mode","removeLabels","crystLabel","addLabels","shift","radius","height","selLabelListener","msLabelListener","efgLabelListener","makeCalculateLinksListener","pre_ca","pre_r","pre_homo","linkview","ghostreqs","sel_ghosts_requests","catom","hn","query","sphere","elements","find","makeDisplayLinksListener","pre_sph","current_link_names","removeGraphics","lname","label","linktype","J","getLinkLabel","addLink","dashed","onOverlay","push","addSphere","showAxes","showCircles","dipCalculateLinksListener","dipDisplayLinksListener","jcCalculateLinksListener","jcDisplayLinksListener","ctable","Events","Array","isArray","fromPairs","Object","defineProperty","get","eventPriority","Set","DISPLAY","SEL_LABELS","CELL","CSCALE","MS_ELLIPSOIDS","MS_LABELS","EFG_ELLIPSOIDS","EFG_LABELS","EUL_ANGLES","PLOTS_RECALC","DIP_RENDER","JC_RENDER","VIEWS","DIP_LINKS","JC_LINKS","getPriorityOfEvent","has","listeners","toDisplay","app_model_queued","displayModel","app_default_displayed","sel_selected_view","displ","sel_displayed_view","all","hide","show","setProperty","box","visible","sel_show_cell","axes","cscale_view","current_greyed","cscale_displ","next_greyed","cstype","cscale_type","split","xor","cs","shades","colors","colormap","nshades","format","ColorScale","getColorScale","getColor","toHexString","a1A","eul_atom_A","a1B","eul_atom_B","a2A","eul_newatom_A","a2B","eul_newatom_B","tA","eul_tensor_A","tB","eul_tensor_B","conv","eul_convention","nmrA","nmrB","removeLabel","addLabel","results","eul_results","minx","parseFloat","plots_min_x","maxx","plots_max_x","miny","plots_min_y","maxy","plots_max_y","ms_references","nmr_mode","plots_use_refs","noplot","isNaN","plots_mode","plots_data","xaxis","yaxis","w","plots_peak_width","parseInt","plots_x_steps","rangepeaks","filter","lorentzian","x0","range","y","makeMasterListener","store","getState","toUpdate","listen_update","maxPriority","P","d","console","warn","nextToUpdate","dispatch","type","LC","CrystVis","LEFT_CLICK","SLC","SHIFT_BUTTON","CLC","CTRL_BUTTON","initialSelState","sel_on","sel_mode","sel_sphere_r","sel_bond_n","sel_hlight","sel_sites_view","sel_sites_labels_type","SelInterface","highlightSelected","value","setSelection","selectionMode","eData","elementData","keys","isotopes","sort","A","iso","is_nmr_active","spin","is_Q_active","is_max_nmr","maxiso_NMR","is_max_Q","maxiso_Q","abundance","options","default_options","selectionSphereR","selectionBondN","selectionOn","selFunc","imgIndex","found","_queryElements","_querySphere","_queryMolecule","_queryBonded","concat","dd","intf","app_click_handler","setCallback","and","or","useSelInterface","useSelector","shallowEqual","useDispatch","initialCScaleState","CScaleInterface","colorScaleType","makeCScaleSelector","initialMSState","ms_view","ms_ellipsoids_on","ms_ellipsoids_scale","ms_labels_type","msSetReferences","refs","new_refs","msAction","update","MSInterface","pre","colorScalePrefix","uniq","symbols","function","useMSInterface","initialEFGState","efg_view","efg_ellipsoids_on","efg_ellipsoids_scale","efg_labels_type","efgAction","EFGInterface","useEFGInterface","initialDipState","dip_view","dip_link_names","dip_links_on","dip_central_atom","dip_radius","dip_sphere_show","dip_homonuclear","DipInterface","useDipInterface","initialJCoupState","jc_view","jc_link_names","jc_links_on","jc_central_atom","jc_radius","jc_sphere_show","jc_homonuclear","JCoupInterface","useJCoupInterface","RC","RIGHT_CLICK","initialEulerState","tensorValues","conventionValues","makeCallback","ending","makeEulerAction","EulerInterface","_getAtomLabel","_setTensorType","rad","f","_getResult","report","tensorA","atomLabelA","tensorB","atomLabelB","toUpperCase","beta","alphaRad","betaRad","gammaRad","hasMSData","hasEFGData","targ","table","useEulerInterface","appDisplayModel","m","appDeleteModel","deleteModel","models","modelList","AppInterface","viewer","initialised","model_name","modelName","app_theme","app_sidebar","app_load_as_mol","app_use_nmr_isos","elem","log","vis","files","cbm","params","supercell","molecularCrystal","loadAsMol","useNMRActiveIsotopes","useNMRIsotopes","parseOne","onLoad","contents","extension","success","loadModels","to_display","display","call","reader","FileReader","pop","onload","target","result","readAsText","useAppInterface","makePlotAction","PlotsInterface","plots_q2_shifts","plots_show_axes","plots_show_grid","xmin","xmax","ymin","ymax","vmin","vmax","axis","plots_bkg_img_url","url","plots_bkg_img_w","plots_bkg_img_h","file","Promise","resolve","reject","img","Image","src","decode","then","readAsDataURL","loadImage","naturalWidth","naturalHeight","usePlotsInterface","FilesInterface","files_seltype","mname","hasISCData","_msMakeTable","_efgMakeTable","_dipMakeTable","_iscMakeTable","aniso","asymm","euler","isotope","Vzz","slice","j","D","useFilesInterface","initialState","magresStore","createStore","args","subscribe","MVCustomSelectOption","props","onClick","className","icon","children","MVCustomSelect","setShow","o","findIndex","onSelect","useEffect","disabled","style","onMouseLeave","title","cloneElement","_excluded","_extends","assign","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMs","_ref","svgRef","titleId","viewBox","xmlns","ref","transform","fill","strokeWidth","strokeLinecap","strokeLinejoin","paintOrder","_defs","ForwardRef","SvgEfg","fillOpacity","InkscapeStroke","SvgDip","SvgJcoup","SvgEuler","stroke","icons","MSIcon","EFGIcon","dip","DipIcon","jcoup","JcoupIcon","EulerIcon","MVIcon","Icon","ThemeSwitcher","appint","other","dark","light","theme","MagresViewHeader","logo","alt","sidebar","MagresViewScreenshot","replace","saveImage","getScreenshotData","MagresViewSidebar","MVFile","notext","accept","filetypes","onChange","multiple","MVBox","status_class","status","onClose","size","MVCheckBox","onCheck","checked","htmlFor","MVListSelectOption","MVListSelect","file_formats","MVSidebarLoad","load_message","load_message_status","list_selected","setState","load","msg","err","model_icon","currentModelName","delete","MVButton","MVRadioButton","uid","MVRadioGroup","buttons","labelStyle","MVText","submitted","setSubmitted","waitSubmit","onSubmit","exec","onKeyDown","MVIsotopeSelection","selint","sharedElement","elData","isoConf","selOptions","currentOption","setIsotope","MVSidebarSelect","setR","setN","selRef","useRef","current","showCrystLabels","showCell","MVRange","step","toNumber","round","in_val","text","setText","acceptValue","stateRef","onInput","modalReducer","is_drag","y0","dx","dy","MVModal","useReducer","onAccept","onmousemove","clientX","clientY","onmouseup","modalStyle","hasOverlay","modal","draggable","resizable","onMouseDown","button","Provider","noFooter","MVReferenceTable","msint","referenceTable","refTable","setRefTable","intRef","close","updateReferenceTable","MVSidebarMS","showRefTable","has_ms","hasData","hasEllipsoids","ellipsoidScale","labelsMode","colorScaleAvailable","MVSidebarEFG","efgint","has_efg","MVSidebarDip","dipint","isOn","bind","unbind","showSphere","homonuclearOnly","MVSidebarJCoup","jcint","has_jc","MVSwitch","colorTrue","colorFalse","MVSidebarEuler","eulint","otherTensor","hasSel","atomA","atomB","txtReport","navigator","clipboard","writeText","txtSelfAngleTable","MVSidebarPlots","pltint","useRefTable","loadBkgImage","clearBkgImage","showGrid","alignItems","rangeX","setRange","rangeY","peakW","MVSidebarFiles","fileint","fileType","fn","generateFile","fileName","fileValid","mH","mR2","ImageLayer","margins","image","indPos","left","bottom","top","right","setMargins","selind","nodeName","brect","getBoundingClientRect","iPx","iPy","cname","parentElement","baseVal","trim","href","MVPlot1D","bkgImage","layers","without","lineprops","enablePoints","pointSymbol","borderColor","borderWidth","pointLabelYOffset","lineWidth","backgroundColor","scheme","margin","xScale","floatRangeX","yScale","floatRangeY","MagresViewPage","hovered","setHovered","appRef","initialise","onDragEnter","preventDefault","stopPropagation","onDragLeave","onDragOver","onDrop","dataTransfer","clearData","MagresViewApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.651f62f2.chunk.js","sourcesContent":["import _ from 'lodash';\nimport { useState } from 'react';\n\n/**\n * Chain multiple class strings into a single string, useful when passing them\n * to React components' className property\n *\n * @param {String} name1, name2...    Name of the first class, second class, etc.\n * \n * @return {String}                   Chained class names\n */\nfunction chainClasses() {\n    return _.join(_.flatten(arguments), ' ');\n}\n\n/**\n * Generate a memoized unique ID for an element\n * \n * @param  {String} prefix Prefix of the id\n * \n * @return {String}        Unique ID\n */\nfunction useId(prefix='uid') {\n    const [id] = useState(() => (_.uniqueId(prefix)));\n    return id;\n}\n\nexport { chainClasses, useId };","import _ from 'lodash';\nimport colormap from 'colormap';\nimport ColorScale from 'color-scales';\n\n/*\n * Merges together all the outputs of multiple async processes into a single\n * argument to pass to a callback, according the outputs are in Object form.\n */\nclass CallbackMerger {\n    \n    constructor(n, callback) {\n        this._callback = callback;\n        this._n = n;\n\n        this._arg = {};\n    }\n\n    call(arg) {\n        \n        if (this._n <= 0) {\n            throw Error('CallbackMerger has completed its iterations');\n        }\n\n        _.merge(this._arg, arg);\n        this._n -= 1;\n        if (this._n === 0) {\n            this._callback(this._arg);\n        }\n    }\n}\n\n/**\n * A custom class that acts like an Enum type\n */\nclass Enum {\n\n    constructor(values={}) {\n\n        if (Array.isArray(values)) {\n            values = _.fromPairs(values.map((x, i) => [x, i]));\n        }\n\n        for (let key in values) {\n            let v = values[key];\n\n            Object.defineProperty(this, key, {\n                get: () => v\n            });\n        }\n    }\n\n}\n\n/**\n * Average atom position for a ModelView\n * \n * @param  {ModelView} mview    ModelView to compute the average position for\n * \n * @return {float[]}            Average position\n */\nfunction averagePosition(mview) {\n\n    const positions = mview.map((a) => a.xyz);\n    let average = positions.reduce((x, s) => x.map((v, i) => v+s[i]), \n                                   [0, 0, 0]);\n    average = average.map((x) => x/positions.length);\n\n    return average;\n}\n\n\n/**\n * Center the camera on the displayed atoms (with a custom shift)\n * \n * @param  {CrystVis} app   Reference to the visualizer app\n */\nfunction centerDisplayed(app) {\n    const pos = averagePosition(app.displayed);\n    app.centerCamera(pos, [-0.05, 0]);\n}\n\n/**\n * Return a color scale with a specified map and number of intermediate\n * shades\n * \n * @param  {Number} min    Smallest value of the range mapping to the color scale\n * @param  {Number} max    Largest value of the range\n * @param  {String} scale  Name of the scale (from package colormap; default is 'jet')\n * @param  {Number} shades Number of shades\n * \n * @return {ColorScale}    Color scale\n */\nfunction getColorScale(min=0, max=1, scale='jet', shades=10) {\n    \n    let colors = colormap({\n        colormap: scale,\n        nshades: shades,\n        format: 'hex',\n        alpha: 1\n    });\n\n    // If min and max are equal we get an error so fix that\n    max = (max === min)? max+1e-8 : max;\n\n    let cscale = new ColorScale(min, max, colors, 1.0);\n\n    return cscale;\n}\n\n/**\n * Merge the values from an object into another, but without creating\n * new values if they were absent to begin with.\n * \n * @param  {Object} a The object to update\n * @param  {Object} b The object containing the updated values\n * \n * @return {Object}   The updated object\n */\nfunction mergeOnly(a, b) {\n\n    let c = {};\n\n    for (let k in a) {\n        c[k] = (k in b)? b[k] : a[k];\n    }\n\n    return c;\n}\n\n/**\n * Make a single row of an ASCII table with a fixed field width\n * \n * @param  {Array}  values      Values to include in the row\n * @param  {Number} width       Width of each field of the row\n * @param  {Number} precision   Digits used for numerical values\n * \n * @return {String}        Compiled row\n */\nfunction tableRow(values, width=20, precision=5) {\n    return values.reduce((s, v) => {        \n        if (Number.isFinite(v) && !Number.isInteger(v)) {\n            v = v.toFixed(precision);\n        }\n        else {\n            v = v.toString();\n        }\n        const ns = width-v.length;\n        return s + ' '.repeat(ns > 0? ns : 0) + v;\n    }, '') + '\\n';\n}\n\n/**\n * Download a file\n * \n * @param  {String} data     The data content of the file, must be a valid data URL\n * @param  {[type]} filename The name of the file to download\n */\nfunction saveContents(data, filename) {\n\n    const download = document.createElement('a');\n    download.setAttribute('download', filename);\n    download.setAttribute('href', data);\n    download.click();\n}\n\n/**\n * Download a PNG screenshot from data take from a Canvas\n * \n * @param  {String} data     Data URL retrieved with the .toDataURL() method\n * @param  {[type]} filename Filename to save\n */\nfunction saveImage(data, filename='image.png') {\n    data = data.replace('image/png', 'image/octet-stream');\n    saveContents(data, filename);\n}\n\n/**\n * Load an image from a file, return a promise\n * \n * @param  {File}   file    File with the image to load\n * \n * @return {Promise}        Promise that gets fulfilled once the image is loaded; resolves with an HTMLImageElement containing the image\n */\nfunction loadImage(file) {\n\n    let reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        reader.onload = ((e) => { \n            // Make it into a data URL\n            var img = new Image();\n            img.src = e.target.result;\n            img.decode().then(() => {\n                resolve(img);\n            });\n        });\n        reader.readAsDataURL(file);\n    });\n}\n\n/**\n * Copy something to the clipboard\n * \n * @param  {String} data Content to copy\n */\nfunction copyContents(data) {\n    navigator.clipboard.writeText(data);\n}\n\n\nexport { CallbackMerger, Enum, getColorScale, mergeOnly, \n         averagePosition, centerDisplayed,\n         saveImage, loadImage, saveContents, copyContents, tableRow };\n","import { Map } from 'immutable';\n\n// Immutable map makes these entries safe\nconst regularExpressions = Map({\n    float: new RegExp('[0-9]*(?:[.][0-9]*)?'),\n    int: new RegExp('[0-9]*'),\n    alpha: new RegExp('[a-zA-Z]*'),\n    alphanumeric: new RegExp('[0-9a-zA-Z]*')\n});\n\nexport default regularExpressions;","/** \n * Utilities that have to do with computing non-trivial NMR quantities\n */\n\n/**\n * Dipolar coupling constant in Hz between two atoms. Takes into account both\n * distance and the properties of the isotopes.\n * \n * @param  {AtomImage} a1 First atom\n * @param  {AtomImage} a2 Second atom\n * \n * @return {[Number, Array]}    Dipolar coupling in Hz and unit vector connecting\n *                              the two atoms\n */\nfunction dipolarCoupling(a1, a2) {\n\n    const MU0_HBAR_E30 = 1.3252140307214143e-10;\n    const g1 = a1.isotopeData.gamma || 0;\n    const g2 = a2.isotopeData.gamma || 0;\n\n    const r1 = a1.xyz;\n    const r2 = a2.xyz;\n    const r = r2.map((x, i) => x-r1[i]);\n    const R = Math.sqrt(r.reduce((s, x) => s+x*x, 0));\n    const rnorm = r.map((x) => x/R);\n\n    return [-MU0_HBAR_E30*g1*g2/(8*Math.PI*Math.PI*Math.pow(R, 3)), rnorm];    \n}\n\n/**\n * J coupling constant in Hz between two atoms. Will return\n * a value only if the ISC tensor data is available\n * \n * @param  {AtomImage} a1   First atom\n * @param  {AtomImage} a2   Second atom\n * \n * @return {Number}         J-coupling constant in Hz\n */\nfunction jCoupling(a1, a2) {\n\n    let T;\n    // Is it present at all?\n    try {\n        T = a1.getArrayValue('isc')[a2.index];\n    }\n    catch (e) {\n        // Not found\n        return null;\n    }\n\n    if (!T)\n        return null;\n\n    // Convert the tensor\n    let g1 = a1.isotopeData.gamma;\n    let g2 = a2.isotopeData.gamma;\n    T = T.iscAtomicToHz(g1, g2);\n\n    return T.isotropy;\n}\n\nexport { dipolarCoupling, jCoupling };","import * as mjs from 'mathjs';\n\n/**\n * Return a rotation matrix from a set of axes to another. Axes are not checked\n * and must be already orthonormal, with columns corresponding to each axis\n * \n * @param  {Array} axes1 Starting coordinate system\n * @param  {Array} axes2 Ending coordinate system\n\n * @return {Array}       Rotation matrix\n */\nfunction rotationBetween(axes1, axes2) {\n    return mjs.multiply(axes2, mjs.transpose(axes1));\n}\n\n/**\n * Euler angles (in ZYZ or ZXZ convention) from a rotation matrix R\n * \n * @param  {Array}  R           Rotation matrix\n * @param  {String} convention  Convention to use ('zyz' or 'zxz', by default 'zyz')\n * \n * @return {Array}      Euler angles\n */\nfunction eulerFromRotation(R, convention='zyz') {\n\n    /*\n        \n        For the ZYZ convention the rotation matrix is:\n\n        ⎡-sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(α)⋅cos(β)⋅cos(γ) + sin(γ)⋅cos(α)   -sin(β)⋅cos(γ)⎤\n        ⎢                                                                                            ⎥\n        ⎢-sin(α)⋅cos(γ) - sin(γ)⋅cos(α)⋅cos(β)  -sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(β)⋅sin(γ) ⎥\n        ⎢                                                                                            ⎥\n        ⎣            sin(β)⋅cos(α)                          sin(α)⋅sin(β)                  cos(β)    ⎦\n\n        \n        While for the ZXZ convention it is:\n        \n        ⎡-sin(α)⋅sin(γ)⋅cos(β) + cos(α)⋅cos(γ)  sin(α)⋅cos(γ) + sin(γ)⋅cos(α)⋅cos(β)   sin(β)⋅sin(γ)⎤\n        ⎢                                                                                           ⎥\n        ⎢-sin(α)⋅cos(β)⋅cos(γ) - sin(γ)⋅cos(α)  -sin(α)⋅sin(γ) + cos(α)⋅cos(β)⋅cos(γ)  sin(β)⋅cos(γ)⎥\n        ⎢                                                                                           ⎥\n        ⎣            sin(α)⋅sin(β)                         -sin(β)⋅cos(α)                 cos(β)    ⎦\n\n\n        The math is identical for the beta angle as well as the gimbal lock case. In the general case, \n        there's some changes in signs.\n\n     */\n\n\n    let cosb = R[2][2];\n    // Fix for the occasional numerical error\n    cosb = Math.min(Math.max(cosb, -1), 1);\n\n    let a;\n    let b = Math.acos(cosb);\n    let c;\n\n    if (Math.abs(cosb) === 1) {\n        // Special case, gimbal lock\n        c = 0;\n        a = Math.atan2(R[0][1], R[0][0]);\n    }\n    else {\n        // General case\n        switch (convention) {\n            case 'zyz':\n                a = Math.atan2(R[2][1],  R[2][0]);\n                c = Math.atan2(R[1][2], -R[0][2]);\n                break;\n            case 'zxz':\n                a = Math.atan2(R[2][0], -R[2][1]);\n                c = Math.atan2(R[0][2],  R[1][2]);\n                break;\n            default:\n                throw Error('Unrecognised Euler angles convention');\n        }\n    }\n\n    return [a, b, c];\n}\n\n/**\n * Rotation matrix from ZYZ Euler angles\n * \n * @param  {Number} alpha \n * @param  {Number} beta \n * @param  {Number} gamma \n * \n * @return {Array}   Rotation matrix\n */\nfunction rotationMatrixFromZYZ(alpha, beta, gamma) {\n\n    const sa = Math.sin(alpha);\n    const ca = Math.cos(alpha);\n    const sb = Math.sin(beta);\n    const cb = Math.cos(beta);\n    const sg = Math.sin(gamma);\n    const cg = Math.cos(gamma);\n\n    return [\n        [ca*cb*cg-sa*sg, sa*cb*cg+ca*sg, -sb*cg], \n        [-ca*cb*sg,      -sa*cb*sg+ca*cg, sb*sg],\n        [ca*sb,          sa*sb,           cb]\n    ];\n\n}\n\n/**\n * Euler angles between the Haeberlen eigenvectors of two NMR tensors\n * \n * @param  {CrystVis.TensorData}    T1          First tensor\n * @param  {CrystVis.TensorData}    T2          Second tensor\n * @param  {String}                 convention  Euler angles convention\n * \n * @return {Array}                              Euler angles\n */\nfunction eulerBetweenTensors(T1, T2, convention='zyz') {\n    const ax1 = T1.haeberlen_eigenvectors;\n    const ax2 = T2.haeberlen_eigenvectors;\n    return eulerFromRotation(rotationBetween(ax1, ax2), convention);\n}\n\nexport { rotationBetween, eulerFromRotation, eulerBetweenTensors, \n         rotationMatrixFromZYZ };","/**\n * A class to manage more conveniently click events sent to the CrystVis app.\n * It helps sorting out possible conflicts between different components trying\n * to each set their own handler.\n */\nclass ClickHandler {\n\n    constructor(app, codes=[]) {\n\n        this._callbacks = {};\n        const handler = this;\n\n        codes.forEach((code) => {\n\n            handler._callbacks[code] = {};\n\n            // Handler\n            function handleClick(atom, event) {\n                const cbacks = handler._callbacks[code];\n\n                for (let n in cbacks) {\n                    cbacks[n](atom, event);\n                }\n            }\n\n            app.onAtomClick(handleClick, code);\n        });\n    }\n\n    setCallback(name, code, cback=null) {\n\n        if (!(code in this._callbacks)) {\n            throw Error('Invalid callback code; unsupported event type');\n        }\n\n        if (!cback) {\n            delete(this._callbacks[code][name]);\n        }\n        else {\n            this._callbacks[code][name] = cback;            \n        }\n\n    }\n\n}\n\nexport { ClickHandler };","import _ from 'lodash';\nimport { dipolarCoupling, jCoupling } from '../../utils';\n\nfunction makeSelector(prefix, extras=[]) {\n    // Creates and returns a selector function for a given prefix\n    function selector(state) {\n        let ans = {};\n\n        for (let key in state) {\n            if (!_.startsWith(key, prefix) && extras.indexOf(key) === -1)\n                continue;\n            ans[key] = state[key];\n        }\n\n        return ans;\n    }\n\n    return selector;\n}\n\nconst addPrefix = (p, n) => p + '_' + n;\n\nfunction getSel(app) {\n    let sel = app.selected;\n    if (sel) {\n        return sel.length > 0? sel : app.displayed;\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getNMRData(view, datatype, tenstype='ms', reftable=null) {\n\n    let units = '';\n    let tens_units = {\n        ms: 'ppm',\n        efg: 'au'\n    }[tenstype];\n    let values = null;\n    let tensors = view.map((a) => (a.getArrayValue(tenstype)));\n\n    switch(datatype) {\n        case 'iso': \n            values = tensors.map((T) => T.isotropy);\n            units = tens_units;\n            break;\n        case 'aniso':\n            values = tensors.map((T) => T.anisotropy);\n            units = tens_units;\n            break;            \n        case 'asymm':\n            values = tensors.map((T) => T.asymmetry);\n            break;\n        case 'span':\n            values = tensors.map((T) => T.span);\n            break;\n        case 'skew':\n            values = tensors.map((T) => T.skew);\n            break;\n        case 'cs':\n            if (!reftable) {\n                throw Error('Can not compute chemical shifts without a reference table');\n            }\n            values = tensors.map((T, i) => {\n                let el = view.atoms[i].element;\n                let ref = reftable[el] || 0.0;\n                return ref-T.isotropy;\n            });\n            units = tens_units;\n            break;\n        case 'e_x':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[0]);\n            break;\n        case 'e_y':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[1]);\n            break;\n        case 'e_z':\n            values = tensors.map((T) => T.haeberlen_eigenvalues[2]);\n            break;\n        case 'Q':\n            values = tensors.map((T, i) => {\n                let iD = view.atoms[i].isotopeData;\n                return T.efgAtomicToHz(iD.Q).haeberlen_eigenvalues[2]/1e3;\n            });\n            units = 'kHz';\n            break;\n        default:\n            break;\n    }\n\n    return [units, values];\n}\n\nfunction getLinkLabel(a1, a2, linktype) {\n\n    switch (linktype) {\n        case 'dip':\n            const D = dipolarCoupling(a1, a2)[0];\n            return (D/1e3).toFixed(2) + ' kHz';\n        case 'jc':\n            const J = jCoupling(a1, a2);\n            if (J === null) {\n                return '';\n            }\n            return J.toFixed(2) + ' Hz';\n        default:\n            return '';\n    }\n}\n\n\nclass BaseInterface {\n\n    constructor(state, dispatcher) {\n        this._state = state;\n        this._dispatcher = dispatcher;\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    dispatch(action) {\n        this._dispatcher(action);\n    }\n\n}\n\nclass DataCheckInterface extends BaseInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));            \n    }\n\n}\n\nexport { \n    makeSelector, \n    addPrefix,\n    getSel,\n    getNMRData,\n    getLinkLabel,\n    BaseInterface,\n    DataCheckInterface\n};","/**\n * Colors used in ellipsoids, labels, etc.\n *\n * This isn't the best place to insert them, but they will stay here until\n * I can find a working way to have interoperability between JS and CSS on this.\n */\n\nconst selColor = 0xffffff; // Used for crystallographic labels\nconst msColor = 0xff8000;\nconst efgColor = 0x0080ff;\nconst dipColor = 0x00ff80;\nconst jcColor = 0xff0080;\n\nexport {\n    selColor,\n    msColor,\n    efgColor,\n    dipColor,\n    jcColor\n};","/**\n * Listeners for the rendering of ellipsoids\n */\n\nimport _ from 'lodash';\nimport { addPrefix, getSel } from '../utils';\nimport { msColor, efgColor } from './colors';\n\nfunction makeEllipsoidListener(name, color) {\n    // Factory for a listener that will be used for both MS and EFG ellipsoids\n    // with minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_on = addPrefix(name, 'ellipsoids_on');\n    const pre_scale = addPrefix(name, 'ellipsoids_scale');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases for convenience\n        const on = state[pre_on];\n        let scale = state[pre_scale];\n\n\n        if (current_view && (current_view !== next_view || !on)) {\n            // Something's changing. Remove old ellipsoids!\n            current_view.removeEllipsoids(name);\n        }\n\n        // Now for the new view and data\n        if (on) {\n\n            const data = next_view.map((a) => a.getArrayValue(name));\n\n            if (scale === 0) {\n                // Auto scale needed\n                let avg = data.map((t) => _.sum(t.eigenvalues.map(Math.abs))/3.0);\n                avg = _.sum(avg)/data.length;\n                scale = 2.0/avg;\n            }\n\n            next_view.addEllipsoids(data, name, {scalingFactor: scale, color: color, opacity: 0.125});\n        }\n\n        return {\n            [pre_view]: next_view,\n            [pre_scale]: scale\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst msEllipsoidListener = makeEllipsoidListener('ms', msColor);\nconst efgEllipsoidListener = makeEllipsoidListener('efg', efgColor);\n\nexport { msEllipsoidListener, efgEllipsoidListener };","/**\n * Listeners for the rendering of labels\n */\n\nimport { addPrefix, getSel, getNMRData } from '../utils';\nimport { selColor, msColor, efgColor } from './colors';\n\nfunction makeLabelListener(name, color, shiftfunc) {\n    // Factory for a function that will be used for both MS and EFG with\n    // minimal differences\n    \n    const pre_view = addPrefix(name, 'view');\n    const pre_references = addPrefix(name, 'references');\n    const pre_type = addPrefix(name, 'labels_type');\n\n    function listener(state) {\n\n        let app = state.app_viewer;\n        let current_view = state[pre_view];\n        let ref_table = state[pre_references];\n\n        // Current view holds the LAST one used; we need to update that\n        // What would be the \"new\" view?\n        let next_view = getSel(app);\n\n        // Aliases\n        const mode = state[pre_type];\n\n        if (current_view && (current_view !== next_view || mode === 'none')) {\n            // Remove old labels\n            current_view.removeLabels(name);\n        }\n\n        let label_texts;\n        if (mode !== 'none') {\n\n            if (name !== 'sel_sites') {\n                let [units, values] = getNMRData(next_view, mode, name, ref_table);\n                label_texts = values.map((v) => v.toFixed(2) + ' ' + units);                \n            }\n            else {\n                // Non-NMR labels\n                label_texts = next_view.map((a) => a.crystLabel);\n            }\n\n            next_view.addLabels(label_texts, name, (a, i) => ({ \n                color: color,  \n                shift: shiftfunc(a.radius),\n                height: 0.02\n            }));\n        }\n\n        return {\n            [pre_view]: next_view,\n        };\n    }\n\n    return listener;\n}\n\n// Make specific instances of the listener\nconst selLabelListener = makeLabelListener('sel_sites', selColor, (r) => ([r, r, 0]));\nconst msLabelListener = makeLabelListener('ms', msColor, (r) => ([1.414*r, 0.0, 0.0]));\nconst efgLabelListener = makeLabelListener('efg', efgColor, (r) => ([r, -r, 0.0]));\n\nexport { selLabelListener, msLabelListener, efgLabelListener };","import { addPrefix } from '../utils';\n\nimport { dipColor, jcColor } from './colors';\nimport { getLinkLabel } from '../utils';\n\n\nfunction makeCalculateLinksListener(name) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of calculating which atoms are the\n    // 'targets' to which we're drawing links to. Must precede a call to \n    // updateViews so that the ghosts get visualised or hidden as needed\n    \n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_homo = addPrefix(name, 'homonuclear');\n\n    const pre_view = addPrefix(name, 'view');\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let model = app.model;\n\n        if (!model) {\n            // Can happen if we're running with an empty visualiser.\n            return {};\n        }\n\n        let ghostreqs = {\n            ...state.sel_ghosts_requests\n        };\n\n        // Targets?\n        const on = state[pre_on];\n        const catom = state[pre_ca];\n        const r = state[pre_r];\n        const hn = state[pre_homo];\n\n        let linkview;\n\n        if (on && catom) {\n\n            let query = { sphere: [catom, r] };\n            if (hn) {\n                query = {\n                    '$and': [\n                        query,\n                        { elements: [catom.element] }\n                    ]\n                };\n            }\n\n\n            linkview = model.find(query);\n            ghostreqs[name] = linkview;\n        }        \n        else {\n            linkview = model.view([]);\n            // Cancel previous ghosts, if present\n            delete(ghostreqs[name]);\n        }\n\n        return {\n            [pre_view]: linkview,\n            sel_ghosts_requests: ghostreqs\n        };\n    }\n\n    return listener;\n\n}\n\nfunction makeDisplayLinksListener(name, color) {\n\n    // Factory for a function that will be used for both DIP and JCOUP with\n    // minimal differences, with the goal of actually drawing the links  \n\n    const pre_on = addPrefix(name, 'links_on');\n    const pre_ca = addPrefix(name, 'central_atom');\n    const pre_r = addPrefix(name, 'radius');\n    const pre_sph = addPrefix(name, 'sphere_show');\n\n    const pre_view = addPrefix(name, 'view');\n\n    // These we keep inside this enclosed variable, as a way to keep track for\n    // when we delete them\n    let current_link_names = [];\n    \n    function listener(state) {\n\n        let app = state.app_viewer;\n        let linkview = state[pre_view];\n\n        const catom = state[pre_ca];\n        const radius = state[pre_r];\n        const on = state[pre_on];\n        const sphere = state[pre_sph];\n\n        const model = app.model;\n\n\n        if (!model) {\n            // Nothing to do\n            return {};\n        }\n\n        // First, cleaning up old visualisation\n        current_link_names.forEach((name) => { model.removeGraphics(name); });\n\n        // Now creating a new one\n        current_link_names = [];\n        if (on && catom && linkview) {\n            linkview.atoms.forEach((a2, i) => {\n\n                if (a2 === catom)\n                    return;\n\n                const lname = name + '_link_' + i;\n                const label = getLinkLabel(catom, a2, name);\n\n                if (label === '') {\n                    // No coupling found\n                    return;\n                }\n\n                model.addLink(catom, a2, lname, label, {\n                    color: color,\n                    dashed: true,\n                    onOverlay: true\n                });\n                current_link_names.push(lname);\n            });\n        }\n\n        // Now the sphere\n        if (on && catom && sphere) {\n            model.addSphere(catom.xyz, radius, name + '_sphere', {\n                opacity: 0.25,\n                showAxes: false,\n                showCircles: true\n            });\n        }\n        else {\n            model.removeGraphics(name + '_sphere');\n        }\n\n        return {};\n    }\n\n    return listener;\n\n}\n\nconst dipCalculateLinksListener = makeCalculateLinksListener('dip');\nconst dipDisplayLinksListener = makeDisplayLinksListener('dip', dipColor);\n\nconst jcCalculateLinksListener = makeCalculateLinksListener('jc');\nconst jcDisplayLinksListener = makeDisplayLinksListener('jc', jcColor);\n\n\nexport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener, jcDisplayLinksListener };","/**\n * Listeners for Euler angles\n */\n\nimport { msColor, efgColor } from './colors';\nimport { eulerBetweenTensors } from '../../../utils';\n\nconst ctable = {\n    'ms': msColor,\n    'efg': efgColor\n};\n\nfunction eulerAngleListener(state) {\n\n    const a1A = state.eul_atom_A;\n    const a1B = state.eul_atom_B;\n\n    const a2A = state.eul_newatom_A;\n    const a2B = state.eul_newatom_B;\n\n    const tA = state.eul_tensor_A;\n    const tB = state.eul_tensor_B;\n\n    const conv = state.eul_convention;\n\n    let nmrA = null;\n    let nmrB = null;\n\n    if (a1A) {\n        a1A.removeLabel('eulA');\n    }\n\n    if (a2A) {\n        let r = a2A.radius;\n        a2A.addLabel('A', 'eulA', {\n            shift: [0, 0.25*r, 0],\n            color: ctable[tA],\n            onOverlay: true,\n            height: 0.04\n        });\n\n        // Now get the tensor value\n        if (a2A.model.hasArray(tA)) {\n            nmrA = a2A.getArrayValue(tA);\n        }\n    }\n\n    if (a1B) {\n        a1B.removeLabel('eulB');\n    }\n\n    if (a2B) {\n        let r = a2B.radius;\n        a2B.addLabel('B', 'eulB', {\n            shift: [0, -0.5*r, 0],\n            color: ctable[tB],\n            onOverlay: true\n        });\n\n        // Now get the tensor value\n        if (a2B.model.hasArray(tB)) {\n            nmrB = a2B.getArrayValue(tB);\n        }\n    }\n\n    let results = null;\n\n    if (nmrA && nmrB) {\n        // Get the eigenvectors\n        results = eulerBetweenTensors(nmrA, nmrB, conv);\n    }\n\n    return {\n        eul_atom_A: a2A,\n        eul_atom_B: a2B,\n        eul_results: results\n    };\n}\n\nexport { eulerAngleListener };","// Events used to trigger listeners\nimport { Enum } from '../../../utils';\n\nconst Events = new Enum([\n    'DISPLAY',\n    'VIEWS',\n    'SEL_LABELS',\n    'CELL',\n    'CSCALE',\n    'MS_ELLIPSOIDS',\n    'MS_LABELS',\n    'EFG_ELLIPSOIDS',\n    'EFG_LABELS',\n    'EUL_ANGLES',\n    'DIP_LINKS',                // Links require two events, one before a VIEWS update, the other after\n    'DIP_RENDER',\n    'JC_LINKS',\n    'JC_RENDER',\n    'PLOTS_RECALC'\n]);\n\n// Event priority ranking. Events with higher priority fire first, and are\n// followed by all the ones of lower priority. Example: a change in Views\n// (priority 1) inevitably triggers all events of priority 0.\nconst eventPriority = {\n    0: new Set([Events.DISPLAY]),                               // Called last. If we need to change displayed model\n    1: new Set([Events.SEL_LABELS, Events.CELL,                 // All events having to do with rendering something that\n                Events.CSCALE,                                  // is affected by displayed/selected atoms\n                Events.MS_ELLIPSOIDS, Events.MS_LABELS,         \n                Events.EFG_ELLIPSOIDS, Events.EFG_LABELS,\n                Events.EUL_ANGLES, Events.PLOTS_RECALC,\n                Events.DIP_RENDER, Events.JC_RENDER]),\n    2: new Set([Events.VIEWS]),                                 // Changing displayed/selected atoms\n    3: new Set([Events.DIP_LINKS, Events.JC_LINKS])             // Computing links and required ghosts (which changes displayed atoms)\n};\n\nfunction getPriorityOfEvent(event) {\n\n    for (let p in eventPriority) {\n        let eset = eventPriority[p];\n        if (eset.has(event)) {\n            return p;\n        }\n    }\n\n    return 0; // Default value\n}\n\nfunction getEventsWithPriority(priority) {\n    return eventPriority[priority];\n}\n\n\nexport default Events;\nexport { getPriorityOfEvent, getEventsWithPriority };","/**\n * This file contains the master function for controlling the listener system.\n * Listeners are subscribed to the magresStore and fire whenever the state\n * changes. Since it could get too expensive to check which parts of the state\n * have changed at any time, listeners must be invoked EXPLICITLY by a method\n * making a dispatch by adding their names to the listen_update Array.\n *\n * A listener must have the following interface:\n *\n * function exampleListener(state) {\n *\n *      // ...do something...\n *\n *      return [new_data, new_listeners];\n * \n * }\n *\n * where new_data is a dictionary that will be directly used to update the\n * state while new_listeners is a list of any new listeners that should be\n * queued for update next. The process will stop only once that listen_update = []\n * at the end of a run through the current queue, (so be wary of creating infinite loops!).\n */\n\nimport { displayListener } from './display';\nimport { viewsListener } from './views';\nimport { msEllipsoidListener, efgEllipsoidListener } from './ellipsoids';\nimport { selLabelListener, msLabelListener, efgLabelListener } from './labels';\nimport { colorScaleListener } from './cscales';\nimport { cellListener } from './cell';\nimport { dipCalculateLinksListener, dipDisplayLinksListener, \n         jcCalculateLinksListener,  jcDisplayLinksListener } from './links';\nimport { eulerAngleListener } from './euler';\nimport { plotsListener } from './plots';\nimport Events, { getPriorityOfEvent, getEventsWithPriority } from './events';\n\nconst initialListenerState = {\n    listen_update: []\n};\n\nconst listeners = {\n    [Events.DISPLAY]:           displayListener,\n    [Events.VIEWS]:             viewsListener,\n    [Events.SEL_LABELS]:        selLabelListener,\n    [Events.CELL]:              cellListener,\n    [Events.CSCALE]:            colorScaleListener,\n    [Events.MS_ELLIPSOIDS]:     msEllipsoidListener,\n    [Events.MS_LABELS]:         msLabelListener,\n    [Events.EFG_ELLIPSOIDS]:    efgEllipsoidListener,\n    [Events.EFG_LABELS]:        efgLabelListener,\n    [Events.EUL_ANGLES]:        eulerAngleListener,\n    [Events.PLOTS_RECALC]:      plotsListener,\n    [Events.DIP_LINKS]:         dipCalculateLinksListener,\n    [Events.DIP_RENDER]:        dipDisplayLinksListener,\n    [Events.JC_LINKS]:          jcCalculateLinksListener,\n    [Events.JC_RENDER]:         jcDisplayLinksListener\n};\n\nfunction makeMasterListener(store) {\n\n    function listener() {\n\n        let state = store.getState();\n        let toUpdate = state.listen_update;\n\n        if (toUpdate && toUpdate.length > 0) {\n\n            let data = {};\n\n            // Find max priority\n            let maxPriority = toUpdate.reduce((P, e) => {\n                let p = getPriorityOfEvent(e);\n                return p > P? p : P;\n            }, -1);\n\n            toUpdate = toUpdate.filter((e) => {\n                return getPriorityOfEvent(e) === maxPriority;\n            });\n\n            toUpdate = new Set(toUpdate); // Avoid duplicates\n\n            toUpdate.forEach((lname) => {\n\n                if (!(lname in listeners))\n                    return;\n\n                try {\n                    let d = listeners[lname](state);\n                \n                    data = {\n                        ...data,\n                        ...d\n                    };\n                }\n                catch (e) {\n                    // Can happen if the listener e.g. relies on there being\n                    // a model, and we don't have one loaded. Tolerated with a\n                    // warning.\n                    console.warn(e);\n                }\n\n            });\n\n            // Next do all the lower priority\n            let nextToUpdate = [];\n            if (maxPriority > 0) {\n                nextToUpdate = [...getEventsWithPriority(maxPriority-1)];\n            }\n            data.listen_update = nextToUpdate;\n\n            store.dispatch({\n                type: 'update',\n                data: data\n            });\n        }\n    }\n\n    return listener;\n}\n\nexport { initialListenerState, Events };\nexport default makeMasterListener;","import { centerDisplayed } from '../../../utils';\n\nfunction displayListener(state) {\n\n    const app = state.app_viewer;\n    const toDisplay = state.app_model_queued;\n\n    let data = {};\n\n    if (app && toDisplay) {\n        app.displayModel(toDisplay);\n        data = {\n            app_default_displayed: app.displayed,\n            app_model_queued: null\n        };\n\n        // Center model\n        centerDisplayed(app);\n    }\n\n    return data;\n}\n\nexport { displayListener };","import { centerDisplayed } from '../../../utils';\n\nfunction viewsListener(state) {\n\n    let app = state.app_viewer;\n    let model = app.model;\n\n    if (!model) {\n        return {};\n    }\n\n    // Aliases\n    let sel = state.sel_selected_view;\n    let displ = state.sel_displayed_view? state.sel_displayed_view : state.app_default_displayed;\n\n    // Assign new selection\n    if (sel && sel !== app.selected)\n        app.selected = sel;\n\n    if (model)\n        model.all.hide();\n\n    // Deal with ghosts\n    Object.values(state.sel_ghosts_requests).forEach((s, i) => {\n        // Make each of these visible but translucent\n        s.show();\n        s.setProperty('opacity', 0.5);\n    });\n    \n    // Doing this after the ghosts means any overlap will be fixed here\n    app.displayed = displ;\n    displ.setProperty('opacity', 1.0);\n\n    // Center model\n    centerDisplayed(app);\n\n    // We now update all visualizations that may be changed as a result of this\n    return  {};\n}\n\nexport { viewsListener };","/** \n * Listener for when cell/axes visibility is changed\n */\n\nfunction cellListener(state) {\n    const app = state.app_viewer;\n\n    if (app) { \n        const model = app.model;\n        if (model) {\n            model.box.visible = state.sel_show_cell;\n            model.axes.visible = state.sel_show_cell;\n        }\n    }\n\n    return {};\n}\n\nexport { cellListener };","/**\n * Listeners for color scales\n */\n\nimport _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\nimport { getColorScale } from '../../../utils';\n\nfunction colorScaleListener(state) {\n\n    let app = state.app_viewer;\n    let current_view = state.cscale_view;\n    let current_greyed = state.cscale_displ;\n    let displayed = app.displayed;\n\n    let next_view = getSel(app);\n    let next_greyed = null;\n\n    const cstype = state.cscale_type;\n\n    // Restore color to the grayed out atoms\n    if (current_greyed) {\n        current_greyed.setProperty('color', null);\n    }\n\n    if (cstype !== 'none') {\n\n        // Split in prefix and mode\n        const [prefix, mode] = cstype.split('_', 2);\n        const ref_table = state[prefix + '_references'];\n\n        next_greyed = displayed.xor(next_view);\n\n        const nmrdata = getNMRData(next_view, mode, prefix, ref_table);\n        const values = nmrdata[1];\n\n        let minv = _.min(values);\n        let maxv = _.max(values);\n        let cs = getColorScale(minv, maxv, 'portland');\n        let colors = values.map((v) => cs.getColor(v).toHexString());\n\n        next_view.setProperty('color', colors);\n        next_greyed.setProperty('color', 0x888888);\n    }\n    else {\n        if (current_view)\n            current_view.setProperty('color', null);\n    }\n\n    return {\n        cscale_view: next_view,\n        cscale_displ: next_greyed\n    };\n}\n\nexport { colorScaleListener };","import _ from 'lodash';\nimport { getSel, getNMRData } from '../utils';\n\nfunction plotsListener(state) {\n\n    const minx = parseFloat(state.plots_min_x);\n    const maxx = parseFloat(state.plots_max_x);\n\n    const miny = parseFloat(state.plots_min_y);\n    const maxy = parseFloat(state.plots_max_y);\n\n    // Get target atom view\n    const app = state.app_viewer;\n    const view = getSel(app);\n    const ref_table = state.ms_references;\n    const use_refs = state.plots_use_refs;\n    const nmr_mode = use_refs? 'cs' : 'iso';\n\n    // Is there even anything to plot?\n    let noplot = !view;\n    noplot = noplot || (isNaN(minx) || isNaN(maxx) || isNaN(miny) || isNaN(maxy));\n    noplot = noplot || (state.plots_mode === 'none');\n\n    if (noplot) {\n        return {\n            plots_data: []\n        };\n    }\n\n    let xaxis = [];\n    let yaxis = [];\n\n    const w = parseFloat(state.plots_peak_width);\n    const n = parseInt(state.plots_x_steps);\n    const peaks = getNMRData(view, nmr_mode, 'ms', ref_table)[1];         \n    const rangepeaks = peaks.filter((x) => (x+w >= minx && x-w <= maxx));\n\n    switch(state.plots_mode) {\n        case 'bars-1d':\n\n            xaxis = rangepeaks;\n            yaxis = xaxis.map(() => (maxy));\n\n            break;\n        case 'line-1d':\n\n            function lorentzian(x, x0, w) {\n                return 0.5/Math.PI*w/(Math.pow(x-x0, 2)+0.25*w*w);  // Lorentzian peak\n            }\n\n            xaxis = _.range(n).map((i) => (minx + (maxx-minx)*i/(n-1)));\n            yaxis = xaxis.map((x) => {\n                return rangepeaks.reduce((s, x0) => (s + lorentzian(x, x0, w)), 0);\n            });\n\n            break;\n        default:\n            break;\n    }\n\n\n    // Build x range\n    const data = [{\n        id: 'Curve',\n        data: xaxis.map((x, i) => ({\n            x: x,\n            y: yaxis[i]\n        }))\n    }];\n\n    return {\n        plots_data: data\n    };\n}\n\nexport { plotsListener };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst SLC = CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON;\nconst CLC = CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON;\n\nconst initialSelState = {\n    sel_selected_view: null,\n    sel_displayed_view: null,\n    sel_ghosts_requests: {},\n    sel_on: false,\n    sel_mode: 'atom',\n    sel_sphere_r: 2.0,\n    sel_bond_n: 1,\n    sel_hlight: true,\n    sel_sites_view: null,\n    sel_sites_labels_type: 'none',\n    sel_show_cell: true\n};\n\nclass SelInterface extends BaseInterface {\n\n    get app() {\n        return this.state.app_viewer;\n    }\n\n    get selected() {\n        return this.state.sel_selected_view;\n    }\n\n    set selected(v) {\n        if (!v) {\n            let model = this.state.app_viewer.model;\n            if (model) {\n                v = model.view([]);\n            }\n        }\n\n        this.dispatch({\n            type: 'update', \n            data: {\n                sel_selected_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get displayed() {\n        return this.state.sel_displayed_view || this.state.app_default_displayed;\n    }\n\n    set displayed(v) {\n        if (!v) {\n            v = this.state.app_default_displayed;\n            if (!v) {\n                // Then there's just no model at all\n                return;\n            }\n        }\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_displayed_view: v,\n                listen_update: [Events.VIEWS]\n            }\n        });\n    }\n\n    get defaultDisplayed() {\n        return this.state.app_default_displayed;\n    }\n\n    get highlightSelected() {\n        return this.state.sel_hlight;\n    }\n\n    set highlightSelected(v) {\n        let app = this.state.app_viewer;\n\n        if (!app)\n            return;\n\n        app.highlightSelected = v;\n        this.dispatch({\n            type: 'set',\n            key: 'sel_hlight',\n            value: v\n        });\n    }\n\n    get showCrystLabels() {\n        return this.state.sel_sites_labels_type === 'labels';\n    }\n\n    set showCrystLabels(v) {\n        v = v? 'labels' : 'none';\n\n        this.dispatch({\n            type: 'update',\n            data: { sel_sites_labels_type: v, listen_update: [Events.SEL_LABELS]}\n        });\n    }\n\n    get showCell() {\n        return this.state.sel_show_cell;\n    }\n\n    set showCell(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                sel_show_cell: v,\n                listen_update: [Events.CELL]\n            }\n        });\n    }\n\n    get selectionOn() {\n        return this.state.sel_on;\n    }\n\n    set selectionOn(v) {\n        this.setSelection(this.selectionMode, {on: v});\n    }\n\n    get selectionMode() {\n        return this.state.sel_mode;\n    }\n\n    set selectionMode(v) {\n        this.setSelection(v);\n    }\n\n    get selectionSphereR() {\n        return this.state.sel_sphere_r;\n    }\n\n    set selectionSphereR(v) {\n        this.setSelection(this.selectionMode, {r: v});\n    }\n\n    get selectionBondN() {\n        return this.state.sel_bond_n;\n    }\n\n    set selectionBondN(v) {\n        this.setSelection(this.selectionMode, {n: v});\n    }\n\n    get isotopeChoices() {\n        // Find which isotopes are available for the currently selected atoms\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        let elements = sel.map((a, i) => a.element);\n        // Are they all the same?\n        let el = elements[0];\n        if (!elements.reduce((s, x) => (s && x === el), true)) {\n            return null;\n        }\n\n        // Get the isotope information\n        let eData = sel.atoms[0].elementData;\n\n        let iKeys = Object.keys(eData.isotopes).sort();\n        let iData = iKeys.map((A, i) => {\n            let iso = eData.isotopes[A];\n            return {\n                A: A,\n                is_nmr_active: iso.spin !== 0,\n                is_Q_active: iso.Q !== 0,\n                is_max_nmr: A === eData.maxiso_NMR,\n                is_max_Q: A === eData.maxiso_Q,\n                abundance: iso.abundance\n            };\n        });\n\n        return iData;\n    }\n\n    setIsotope(A) {\n        let sel = this.selected;\n        if (sel === null) {\n            return null;\n        }\n\n        sel.setProperty('isotope', A);\n\n        // Must update everything that depends on isotope properties\n        this.dispatch({\n            type: 'update',\n            data: {\n                listen_update: [Events.EFG_LABELS, Events.CSCALE, \n                                Events.DIP_RENDER, Events.JC_RENDER]\n            }\n        });\n    }\n\n    setSelection(mode, options={}) {\n        // Set the selection for a certain mode and options\n\n        let app = this.state.app_viewer;\n        if (!app) \n            return;\n\n        let default_options = {\n            r: this.selectionSphereR,\n            n: this.selectionBondN,\n            on: this.selectionOn\n        };\n\n        options = {\n            ...default_options,\n            ...options\n        };\n\n        // Selector functions\n        let selFunc = null;\n\n        if (options.on) {\n            switch(mode) {\n                case 'atom':\n                    selFunc = ((a, e) => {\n                        return app.model.view([a.imgIndex]); // Just the one\n                    });\n                    break;\n                case 'element':\n                    // Selector function\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryElements(a.element);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'sphere':\n                    const r = options.r;\n                    selFunc = ((a, e) => {\n                        var found = app.model._querySphere(a, r); \n                        return app.model.view(found);\n                    });\n                    break;\n                case 'molecule': \n                    selFunc = ((a, e) => {\n                        var found = app.model._queryMolecule(a);\n                        return app.model.view(found);\n                    });\n                    break;\n                case 'bonds':\n                    const n = options.n;\n                    selFunc = ((a, e) => {\n                        var found = app.model._queryBonded(a, n, false);\n                        found = found.concat([a.imgIndex]); // Crystvis excludes the original atom\n                        return app.model.view(found);\n                    });\n                    break;\n                default:\n                    // No selection at all\n                    break;\n            }\n        }\n\n        // We use this to guarantee that the selection still doesn't go out of\n        // the default display (e.g. the main cell). Everything else remains\n        // hidden or can be used as ghost for other purposes\n        const dd = this.state.app_default_displayed;\n        const intf = this;\n        const handler = this.state.app_click_handler;\n\n        if (selFunc) {\n            handler.setCallback('sel', LC, (a, e) => { intf.selected = dd.and(selFunc(a, e)); });\n            handler.setCallback('sel', SLC, (a, e) => { intf.selected = dd.and(app.selected.or(selFunc(a, e))); });\n            handler.setCallback('sel', CLC, (a, e) => { intf.selected = dd.and(app.selected.xor(selFunc(a, e))); });\n        }\n        else {\n            // Free the events\n            handler.setCallback('sel', LC);\n            handler.setCallback('sel', SLC);\n            handler.setCallback('sel', CLC);\n        }\n\n        this.dispatch({type: 'update', data: {\n            sel_mode: mode,\n            sel_sphere_r: options.r,\n            sel_bond_n: options.n,\n            sel_on: options.on\n        }});\n    }\n\n}\n\n// Hook for interface\nfunction useSelInterface() {\n    let state = useSelector(makeSelector('sel', ['app_viewer', 'app_click_handler', 'app_default_displayed']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new SelInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default useSelInterface;\nexport { initialSelState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\n\nconst initialCScaleState = {\n    cscale_view: null,\n    cscale_displ: null,\n    cscale_type: 'none'\n};\n\n// A base class not meant to be used directly, but inherited by all interfaces\n// that make use of color scales. \n// \n// Must be used in conjuction with makeCScaleSelector!\nclass CScaleInterface extends BaseInterface {\n\n    get colorScaleType() {\n        return this.state.cscale_type;\n    }\n\n    set colorScaleType(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                cscale_type: v,\n                listen_update: [Events.CSCALE]\n            }\n        });\n    }\n\n    get colorScalePrefix() {\n        return this.colorScaleType.split('_', 2)[0];\n    }\n\n}\n\nfunction makeCScaleSelector(prefix, extras=[]) {\n    extras = extras.concat(Object.keys(initialCScaleState));\n\n    return makeSelector(prefix, extras);\n}\n\nexport default CScaleInterface;\nexport { initialCScaleState, makeCScaleSelector };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialMSState = {\n    ms_view: null,\n    ms_ellipsoids_on: false,\n    ms_ellipsoids_scale: 0.05,\n    ms_labels_type: 'none',\n    ms_references: {}\n};\n\n// Update any new references for chemical shifts\nfunction msSetReferences(state, refs=null) {\n\n    let new_refs = {};\n\n    // Default behaviour if refs is null is to clear everything,\n    // otherwise we update the existing table.\n    if (refs) {\n        new_refs = {\n            ...state.ms_references,\n            ...refs\n        };\n    }\n\n    // We then update the state and refresh the ms labels, in case any changes\n    // are needed\n    return {\n        ms_references: new_refs,\n        listen_update: [Events.MS_LABELS, Events.CSCALE, Events.PLOTS_RECALC]\n    };\n}\n\n// Action creator\nconst msAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass MSInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.ms_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(msAction({ ms_ellipsoids_on: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.ms_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(msAction({ ms_ellipsoids_scale: v }, [Events.MS_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.ms_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(msAction({ 'ms_labels_type': v }, [Events.MS_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'ms');\n    }\n\n    get referenceTable() {\n\n        if (!this.state.app_viewer || !this.state.app_viewer.model)\n            return [];\n\n        // Find the elements, then return the respective references as pairs\n        const elements = _.uniq(this.state.app_viewer.model.symbols);\n        const refs = this.state.ms_references;\n        return _.fromPairs(elements.map((el) => [el, refs[el] || 0]));\n    }\n\n    updateReferenceTable(data) {\n        this.dispatch({\n            type: 'call',\n            function: msSetReferences,\n            arguments: [data]\n        });\n    }\n\n    getReference(el) {\n        return this.state.ms_references[el] || 0.0;\n    }\n\n}\n\nfunction useMSInterface() {\n    let state = useSelector(makeCScaleSelector('ms', ['app_viewer', 'efg_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new MSInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useMSInterface;\nexport { initialMSState, msSetReferences };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport CScaleInterface, { makeCScaleSelector } from './CScaleInterface';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialEFGState = {\n    efg_view: null,\n    efg_ellipsoids_on: false,\n    efg_ellipsoids_scale: 0.1,\n    efg_labels_type: 'none'\n};\n\n// Action creator\nconst efgAction = function(data, update=[]) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: update\n        }\n    };\n}\n\nclass EFGInterface extends CScaleInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));        \n    }\n\n    get hasEllipsoids() {\n        return this.state.efg_ellipsoids_on;\n    }\n\n    set hasEllipsoids(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_on: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get ellipsoidScale() {\n        return this.state.efg_ellipsoids_scale;\n    }\n\n    set ellipsoidScale(v) {\n        this.dispatch(efgAction({ efg_ellipsoids_scale: v }, [Events.EFG_ELLIPSOIDS]));\n    }\n\n    get labelsMode() {\n        return this.state.efg_labels_type;\n    }\n\n    set labelsMode(v) {\n        this.dispatch(efgAction({ efg_labels_type: v }, [Events.EFG_LABELS]));\n    }\n\n    get colorScaleAvailable() {\n        let pre = this.colorScalePrefix;\n        return (pre === 'none' || pre === 'efg');\n    }\n\n}\n\nfunction useEFGInterface() {\n    let state = useSelector(makeCScaleSelector('efg', ['app_viewer', 'ms_cscale_type']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EFGInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEFGInterface;\nexport { initialEFGState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialDipState = {\n    dip_view: null,\n    dip_link_names: [],\n    dip_links_on: false,\n    dip_central_atom: null,\n    dip_radius: 1.0,\n    dip_sphere_show: true,\n    dip_homonuclear: false\n};\n\n\nclass DipInterface extends BaseInterface {\n\n    get isOn() {\n        return this.state.dip_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            dip_links_on: v,\n            listen_update: [ Events.DIP_LINKS ]\n        };\n\n        if (!v) \n            data.dip_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.dip_central_atom;\n    }\n\n    get radius() {\n        return this.state.dip_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.dip_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_homonuclear: v,\n                listen_update: [ Events.DIP_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.dip_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                dip_sphere_show: v,\n                listen_update: [ Events.DIP_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('dip', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        dip_central_atom: a,\n                        listen_update: [ Events.DIP_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('dip', LC); \n    }\n\n}\n\nfunction useDipInterface() {\n    let state = useSelector(makeSelector('dip', ['app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new DipInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useDipInterface;\nexport { initialDipState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, BaseInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\n\nconst initialJCoupState = {\n    jc_view: null,\n    jc_link_names: [],\n    jc_links_on: false,\n    jc_central_atom: null,\n    jc_radius: 1.0,\n    jc_sphere_show: true,\n    jc_homonuclear: false\n};\n\n\nclass JCoupInterface extends BaseInterface {\n\n    get hasData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    get isOn() {\n        return this.state.jc_links_on;\n    }\n\n    set isOn(v) {\n\n        let data = {\n            jc_links_on: v,\n            listen_update: [ Events.JC_LINKS ]\n        };\n\n        if (!v) \n            data.jc_central_atom = null;\n\n        this.dispatch({\n            type: 'update',\n            data: data\n        });\n    }\n\n    get centralAtom() {\n        return this.state.jc_central_atom;\n    }\n\n    get radius() {\n        return this.state.jc_radius;\n    }\n\n    set radius(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_radius: v\n            }\n        });\n    }\n\n    get homonuclearOnly() {\n        return this.state.jc_homonuclear;\n    }\n\n    set homonuclearOnly(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_homonuclear: v,\n                listen_update: [ Events.JC_LINKS ]\n            }\n        });        \n    }\n\n    get showSphere() {\n        return this.state.jc_sphere_show;\n    }\n\n    set showSphere(v) {\n        this.dispatch({\n            type:'update',\n            data: {\n                jc_sphere_show: v,\n                listen_update: [ Events.JC_RENDER ]\n            }\n        });\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('jc', LC, (a, e) => { \n                // Avoid working on ghosts\n                if (a.opacity < 1.0) {\n                    return;\n                }\n\n                dispatch({\n                    type: 'update',\n                    data: {\n                        jc_central_atom: a,\n                        listen_update: [ Events.JC_LINKS ]\n                    }\n                });\n        });        \n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        // Remove the event\n        handler.setCallback('jc', LC); \n    }\n\n}\n\nfunction useJCoupInterface() {\n    let state = useSelector(makeSelector('jc', ['app_click_handler', 'app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new JCoupInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useJCoupInterface;\nexport { initialJCoupState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\nimport { makeSelector, DataCheckInterface } from '../utils';\nimport { eulerBetweenTensors } from '../../../utils';\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport CrystVis from 'crystvis-js';\n\nconst LC = CrystVis.LEFT_CLICK;\nconst RC = CrystVis.RIGHT_CLICK;\n\nconst initialEulerState = {\n    eul_atom_A: null,\n    eul_newatom_A: null,\n    eul_tensor_A: 'ms',\n    eul_atom_B: null,\n    eul_newatom_B: null,\n    eul_tensor_B: 'ms',\n    eul_convention: 'zyz',\n    eul_results: null\n};\n\nconst tensorValues = new Set(['ms', 'efg']);\nconst conventionValues = new Set(['zyz', 'zxz']);\n\nfunction makeCallback(dispatch, ending='A') {    \n\n    function cback(a, e) {\n        dispatch({\n            type: 'update',\n            data: {\n                ['eul_newatom_' + ending]: a,\n                listen_update: [Events.EUL_ANGLES]\n            }\n        });\n    }\n\n    return cback;\n}\n\nfunction makeEulerAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.EUL_ANGLES]\n        }\n    };\n}\n\nclass EulerInterface extends DataCheckInterface {\n\n    get hasModel() {\n        let app = this.state.app_viewer;\n        return (app && this.state.app_viewer.model);\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get convention() {\n        return this.state.eul_convention;\n    }\n\n    set convention(v) {\n        if (!conventionValues.has(v))\n            throw Error('Invalid Euler angles convention');\n        this.dispatch(makeEulerAction({eul_convention: v}));\n    }\n\n    _getAtomLabel(ending='A') {\n        let a = this.state['eul_atom_' + ending];\n        if (a)\n            return a.crystLabel\n        else\n            return 'Not selected'        \n    }\n\n    _setTensorType(v, ending='A') {\n        if (!tensorValues.has(v))\n            throw Error('Invalid NMR tensor for Euler angles');\n        this.dispatch(makeEulerAction({['eul_tensor_' + ending]: v}));\n    }\n\n    get atomA() {\n        return this.state.eul_atom_A;\n    }\n\n    get atomLabelA() {\n        return this._getAtomLabel('A');\n    }\n\n    get atomB() {\n        return this.state.eul_atom_B;\n    }\n\n    get atomLabelB() {\n        return this._getAtomLabel('B');\n    }\n\n    get tensorA() {\n        return this.state.eul_tensor_A;\n    }\n\n    set tensorA(v) {\n        this._setTensorType(v, 'A');\n    }\n\n    get tensorB() {\n        return this.state.eul_tensor_B;\n    }\n\n    set tensorB(v) {\n        this._setTensorType(v, 'B');        \n    }\n\n    _getResult(i, rad=false) {\n        let f = rad? 1.0 : 180/Math.PI;\n        let r = this.state.eul_results;\n        return r? (r[i]*f) : 'N/A';        \n    }\n\n    get alpha() {\n        return this._getResult(0);\n    }\n\n    get beta() {\n        return this._getResult(1);\n    }\n\n    get gamma() {\n        return this._getResult(2);\n    }\n\n    get alphaRad() {\n        return this._getResult(0, true);\n    }\n\n    get betaRad() {\n        return this._getResult(1, true);\n    }\n\n    get gammaRad() {\n        return this._getResult(2, true);\n    }\n\n    bind() {\n        const dispatch = this._dispatcher;\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC, makeCallback(dispatch, 'A'));\n        handler.setCallback('eul', RC, makeCallback(dispatch, 'B'));\n    }\n\n    unbind() {\n        const handler = this.state.app_click_handler;\n\n        if (!handler)\n            return;\n\n        handler.setCallback('eul', LC);\n        handler.setCallback('eul', RC);\n\n        this.dispatch(makeEulerAction({\n            eul_newatom_A: null,\n            eul_newatom_B: null\n        }));\n    }\n\n    txtReport() {\n        let report = 'Euler angles between tensors:\\n';\n\n        report += `${this.tensorA} on ${this.atomLabelA}\\nand\\n`;\n        report += `${this.tensorB} on ${this.atomLabelB}\\n\\n`;\n\n        report += `Convention: ${this.convention.toUpperCase()}\\n\\n`;\n\n        report += `Degrees:\\n${this.alpha}    ${this.beta}    ${this.gamma}\\n\\n`;\n        report += `Radiants:\\n${this.alphaRad}     ${this.betaRad}     ${this.gammaRad}`;\n\n        return report;\n    }\n\n    txtSelfAngleTable() {\n        // Return a full table of MS-to-EFG tensor angles for each atom\n        if (!(this.hasMSData && this.hasEFGData)) {\n            // Pointless\n            throw Error('Both MS and EFG tensors are needed to compute the table');\n        }\n\n        // Selection if available, otherwise displayed atoms\n        let targ = this.state.app_viewer.selected;\n        targ = (targ.length > 0)? targ : this.state.app_viewer.displayed;\n\n        const data = targ.map((a, i) => {\n            return [a.crystLabel, a.getArrayValue('ms'), a.getArrayValue('efg')];\n        });\n\n        let table = `Euler angles between MS and EFG tensors in radiants, convention: ${this.convention.toUpperCase()}\\n`;\n        let conv = this.convention;\n\n        data.forEach((d, i) => {\n\n            let [label, ms, efg] = d;\n\n\n            let [alpha, beta, gamma] = eulerBetweenTensors(ms, efg, conv);\n\n            table += `${label}    ${alpha}    ${beta}    ${gamma}\\n`;\n        });\n\n        return table;\n    }\n}\n\nfunction useEulerInterface() {\n    let state = useSelector(makeSelector('eul', ['app_viewer', 'app_click_handler']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new EulerInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useEulerInterface;\nexport { initialEulerState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface } from '../utils';\nimport { CallbackMerger, ClickHandler } from '../../../utils';\n\nimport { initialSelState } from './SelInterface';\nimport { initialCScaleState } from './CScaleInterface';\nimport { initialMSState } from './MSInterface';\nimport { initialEFGState } from './EFGInterface';\nimport { initialDipState } from './DipInterface';\nimport { initialJCoupState } from './JCoupInterface';\nimport { initialEulerState } from './EulerInterface';\n\nimport { Events } from '../listeners';\n\nimport CrystVis from 'crystvis-js';\n\n\nconst initialAppState = {\n    app_viewer: null,\n    app_click_handler: null,\n    app_theme: 'dark',\n    app_sidebar: 'load',\n    app_default_displayed: null,\n    app_model_queued: null,\n    app_load_as_mol: false,\n    app_use_nmr_isos: true\n};\n\n// Functions meant to operate on the app alone.\n// These exist outside of the AppInterface because they will be invoked\n// directly from inside the reducer as special actions\nfunction appDisplayModel(state, m) {\n    let app = state.app_viewer;\n    let cm = app.model;\n\n    let data = {};\n    if (cm) {\n        // We turn visualizations off\n        data = {\n            ...initialSelState,\n            ...initialCScaleState,\n            ...initialMSState,\n            ...initialEFGState,\n            ...initialDipState,\n            ...initialJCoupState,\n            ...initialEulerState\n        };\n    }\n\n    // Return data for dispatch\n    return {\n        ...data,\n        app_model_queued: m,\n        listen_update: [Events.SEL_LABELS, Events.CSCALE,\n                        Events.MS_ELLIPSOIDS, Events.MS_LABELS,\n                        Events.EFG_ELLIPSOIDS, Events.EFG_LABELS, \n                        Events.DIP_LINKS, Events.JC_LINKS]\n    };\n}\n\nfunction appDeleteModel(state, m) {\n    \n    let app = state.app_viewer;\n    let data = {};\n\n    // Delete a model\n    app.deleteModel(m);\n\n    let models = app.modelList;\n\n    if (!app.model && models.length > 0) {\n        // Let's display a different one\n        data = appDisplayModel(state, models[0]);\n    }\n\n    return data;\n}\n\nclass AppInterface extends BaseInterface {\n\n    get initialised() {\n        return this.viewer !== null;\n    }\n\n    get viewer() {\n        return this.state.app_viewer;\n    }\n\n    get models() {\n        let models = [];\n\n        if (this.initialised) {\n            models = this.viewer.modelList;\n        }\n\n        return models;\n    }\n\n    get currentModel() {\n        let model = null;\n\n        if (this.initialised) {\n            model = this.viewer.model;\n        }\n\n        return model;\n    }\n\n    get currentModelName() {\n        let model_name = null;\n\n        if (this.initialised) {\n            model_name = this.viewer.modelName;\n        }\n\n        return model_name;\n    }\n\n    get theme() {\n        return this.state.app_theme;\n    }\n\n    set theme(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_theme',\n            value: v\n        });\n    }\n\n    get sidebar() {\n        return this.state.app_sidebar;\n    }\n\n    set sidebar(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_sidebar',\n            value: v\n        });\n    }\n\n    get loadAsMol() {\n        return this.state.app_load_as_mol;\n    }\n\n    set loadAsMol(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_load_as_mol',\n            value: v\n        });\n    }\n\n    get useNMRIsotopes() {\n        return this.state.app_use_nmr_isos;\n    }\n\n    set useNMRIsotopes(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'app_use_nmr_isos',\n            value: v\n        });\n    }\n\n    initialise(elem) {\n        console.log('Initialising CrystVis app on element ' + elem);\n        // Initialise app but only if it's not already there\n        const vis = new CrystVis(elem);\n        vis.highlightSelected = true; // Our default\n        \n        const handler = new ClickHandler(vis, [\n            CrystVis.LEFT_CLICK,\n            CrystVis.LEFT_CLICK + CrystVis.SHIFT_BUTTON,\n            CrystVis.LEFT_CLICK + CrystVis.CTRL_BUTTON,\n            CrystVis.RIGHT_CLICK\n        ]);\n\n        if (!this.initialised) {\n            this.dispatch({\n                type: 'update',\n                data: {\n                    app_viewer: vis,\n                    app_click_handler: handler\n                }\n            });\n        }\n    }\n\n    load(files, cback=null) {\n\n        /* Load from a list of files, running a callback with the aggregate\n        dictionary that reports the success for each of them */\n\n        if (!this.initialised) {\n            return;\n        }\n\n        let cbm = new CallbackMerger(files.length, cback);\n        let app = this.viewer;\n        let intf = this;\n        let params = {\n            supercell: [3, 3, 3],\n            molecularCrystal: this.loadAsMol,\n            useNMRActiveIsotopes: this.useNMRIsotopes\n        };\n\n        // Callback for each file after the FileReader is done\n        function onLoad(contents, name, extension) {\n            var success = app.loadModels(contents, extension, name, params);\n\n            // Find a valid one to load\n            var to_display = null;\n            _.map(success, (v, n) => {\n                if (v === 0) {                 \n                    to_display = n;\n                }\n            });\n\n            if (to_display) {\n                intf.display(to_display);\n            }\n\n            if (cback) {\n                cbm.call(success);\n            }\n        }\n\n        // Function that loads each individual file\n        function parseOne(f) {\n            \n            let reader = new FileReader();\n            // Extension and file name\n            let name = f.name.split('.')[0];\n            let extension = f.name.split('.').pop();\n\n            reader.onload = ((e) => { onLoad(e.target.result, name, extension) });\n            reader.readAsText(f);\n        }\n\n        _.forEach(files, parseOne);\n    }\n\n    display(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDisplayModel,\n            arguments: [m]\n        });\n    }\n\n    delete(m) {\n        this.dispatch({\n            type: 'call',\n            function: appDeleteModel,\n            arguments: [m]\n        });\n    }\n\n}\n\n// Hook for interface\nfunction useAppInterface() {\n    let state = useSelector(makeSelector('app'), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new AppInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useAppInterface;\nexport { initialAppState };","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { Events } from '../listeners';\n\nimport { loadImage } from '../../../utils';\nimport { makeSelector, DataCheckInterface } from '../utils';\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nconst initialPlotsState = {\n    plots_mode: 'none',\n    plots_use_refs: false,\n    plots_q2_shifts: true,\n    plots_show_axes: true,\n    plots_show_grid: true,\n    plots_bkg_img_url: null,\n    plots_bkg_img_w: 0,\n    plots_bkg_img_h: 0,\n    plots_min_x: 0,\n    plots_max_x: 100.0,\n    plots_min_y: 0,\n    plots_max_y: 1.0,\n    plots_peak_width: 2.0,\n    plots_x_steps: 100,\n    plots_data: null\n};\n\nfunction makePlotAction(data) {\n    return {\n        type: 'update',\n        data: {\n            ...data,\n            listen_update: [Events.PLOTS_RECALC]\n        }\n    };\n}\n\nclass PlotsInterface extends DataCheckInterface {\n\n    get mode() {\n        return this.state.plots_mode;\n    }\n\n    set mode(v) {\n        this.dispatch(makePlotAction({ plots_mode: v }));\n    }\n\n    get useQ2Shift() {\n        return this.state.plots_q2_shifts;\n    }\n\n    set useQ2Shift(v) {\n        this.dispatch(makePlotAction({ plots_q2_shifts: v }));\n    }\n\n    get useRefTable() {\n        return this.state.plots_use_refs;\n    }\n\n    set useRefTable(v) {\n        this.dispatch(makePlotAction({ plots_use_refs: v }));\n    }   \n\n    get showAxes() {\n        return this.state.plots_show_axes;\n    }\n\n    set showAxes(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_show_axes: v\n            }\n        });\n    }\n\n    get showGrid() {\n        return this.state.plots_show_grid;\n    }\n\n    set showGrid(v) {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_show_grid: v\n            }\n        });\n    }\n\n    get peakW() {\n        return this.state.plots_peak_width;\n    }\n\n    set peakW(v) {\n        this.dispatch(makePlotAction({ plots_peak_width: v }));\n    }\n\n    get rangeX() {\n        return [this.state.plots_min_x, this.state.plots_max_x];\n    }\n\n    get floatRangeX() {\n        let xmin = parseFloat(this.state.plots_min_x);\n        let xmax = parseFloat(this.state.plots_max_x);\n\n        xmin = isNaN(xmin)? 0.0 : xmin;\n        xmax = isNaN(xmax)? xmin+100.0 : xmax;\n\n        return [xmin, xmax];\n    }\n\n    get rangeY() {\n        return [this.state.plots_min_y, this.state.plots_max_y];        \n    }\n\n    get floatRangeY() {\n        let ymin = parseFloat(this.state.plots_min_y);\n        let ymax = parseFloat(this.state.plots_max_y);\n\n        ymin = isNaN(ymin)? 0.0 : ymin;\n        ymax = isNaN(ymax)? ymin+100.0 : ymax;\n\n        return [ymin, ymax];\n    }\n\n    setRange(vmin=null, vmax=null, axis='x') {\n\n        if ('xy'.indexOf(axis) < 0) {\n            // Invalid axis\n            return;\n        }\n\n        vmin = (vmin === null? this.state['plots_min_' + axis] : vmin);\n        vmax = (vmax === null? this.state['plots_max_' + axis] : vmax);\n\n        this.dispatch({\n            type: 'update',\n            data: {\n                ['plots_min_' + axis]: vmin,\n                ['plots_max_' + axis]: vmax,\n                listen_update: [Events.PLOTS_RECALC]\n            }\n        });\n    }\n\n    get data() {\n        return this.state.plots_data;\n    }\n\n    get bkgImage() {\n        if (this.state.plots_bkg_img_url) {\n            return {\n                url: this.state.plots_bkg_img_url,\n                width: this.state.plots_bkg_img_w,\n                height: this.state.plots_bkg_img_h\n            };\n        }\n\n        return null;\n    }\n\n    loadBkgImage(files) {\n        const dispatch = this._dispatcher;\n        loadImage(files[0]).then((img) => {\n            dispatch({\n                type: 'update',\n                data: {\n                    plots_bkg_img_url: img.src,\n                    plots_bkg_img_w: img.naturalWidth,\n                    plots_bkg_img_h: img.naturalHeight\n                }\n            });\n        });\n    }\n\n    clearBkgImage() {\n        this.dispatch({\n            type: 'update',\n            data: {\n                plots_bkg_img_url: null,\n                plots_bkg_img_w: 0,\n                plots_bkg_img_h: 0\n            }\n        });\n    }\n\n}\n\n// Hook for interface\nfunction usePlotsInterface() {\n    let state = useSelector(makeSelector('plots', ['app_viewer']), shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new PlotsInterface(state, dispatcher);\n\n    return intf;\n}\n\n\nexport default usePlotsInterface;\nexport { initialPlotsState };\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux';\n\nimport { makeSelector, BaseInterface, getSel, getNMRData } from '../utils';\nimport { tableRow, eulerFromRotation, dipolarCoupling, jCoupling } from '../../../utils';\n\nconst initialFilesState = {\n    files_seltype: 'ms'\n};\n\nclass FilesInterface extends BaseInterface {\n\n    get fileType() {\n        return this.state.files_seltype;\n    }\n\n    set fileType(v) {\n        this.dispatch({\n            type: 'set',\n            key: 'files_seltype',\n            value: v\n        });\n    }\n\n    get fileName() {\n        let app = this.state.app_viewer;\n        let mname = app.modelName;\n        let type = this.state.files_seltype;\n\n        if (mname) {\n            return `mvtable_${mname}_${type}.txt`;\n        }\n        else {\n            return 'N/A';\n        }\n    }\n\n    get fileValid() {\n        // Can we generate a file with these parameters?\n        let app = this.state.app_viewer;\n        if (!app || !app.model)\n            return false;\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                return this.hasMSData;\n            case 'efg':\n                return this.hasEFGData;\n            case 'isc':\n                return this.hasISCData;\n            default:\n                break;\n        }\n\n        return true;\n    }\n\n    get hasMSData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('ms')));            \n    }\n\n    get hasEFGData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('efg')));            \n    }\n\n    get hasISCData() {\n        let app = this.state.app_viewer;\n        return (app && app.model && (app.model.hasArray('isc')));        \n    }\n\n    generateFile() {\n\n        let contents = '';\n\n        // What are the atoms?\n        const app = this.state.app_viewer;\n        let view = null;\n\n        if (app && app.model) {\n            view = getSel(app);\n        }\n\n        if (!view) {\n            return null;\n        }\n\n        switch(this.state.files_seltype) {\n            case 'ms':\n                contents = this._msMakeTable(view);\n                break;\n            case 'efg':\n                contents = this._efgMakeTable(view);\n                break;\n            case 'dip':\n                contents = this._dipMakeTable(view);\n                break;\n            case 'isc':\n                contents = this._iscMakeTable(view);\n                break;\n            default:\n                return null;\n        }\n\n        return contents;\n    }\n\n    // Table generators\n    _msMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'MS Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Isotropy (ppm)', \n                           'Anisotropy (ppm)', 'Asymmetry', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const iso = getNMRData(view, 'iso', 'ms')[1];\n        const aniso = getNMRData(view, 'aniso', 'ms')[1];\n        const asymm = getNMRData(view, 'asymm', 'ms')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('ms');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                iso[i],\n                aniso[i],\n                asymm[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _efgMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n        const conv = this.state.eul_convention;\n\n        let table = 'EFG Table generated by MagresView 2\\n';\n        table += `Euler angles convention: ${conv}\\n\\n`;\n\n        // Header\n        table += tableRow(['Label', 'Element', 'Index', 'Vzz (au)', 'Anisotropy (au)', \n                           'Asymmetry', 'Q (kHz)', \n                           'alpha', 'beta', 'gamma'], tabW);\n\n        // Get the NMR data\n        const Vzz = getNMRData(view, 'e_z', 'efg')[1];\n        const aniso = getNMRData(view, 'aniso', 'efg')[1];\n        const asymm = getNMRData(view, 'asymm', 'efg')[1];\n        const Q = getNMRData(view, 'Q', 'efg')[1];\n\n        // Euler angles\n        const euler = view.atoms.map((a) => {\n            const T = a.getArrayValue('efg');\n            return eulerFromRotation(T.haeberlen_eigenvectors, conv).map((x) => (x*180.0/Math.PI));\n        });\n\n        view.atoms.forEach((a, i) => {\n            table += tableRow([\n                a.crystLabel,\n                a.isotope + a.element,\n                a.index,\n                Vzz[i],\n                aniso[i],\n                asymm[i],\n                Q[i],\n                euler[i][0],\n                euler[i][1],\n                euler[i][2]\n            ], tabW, prec);\n        });\n\n        return table;\n    }\n\n    _dipMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'Dipolar coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'D (kHz)', 'r_x (Ang)', 'r_y (Ang)', 'r_z (Ang)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const [D, r] = dipolarCoupling(a1, a2);\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    D,\n                    r[0], r[1], r[2]\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n\n    _iscMakeTable(view) {\n\n        const tabW = 20;\n        const prec = 5;\n\n        let table = 'J coupling table generated by MagresView 2\\n\\n';\n\n        // Header\n        table += tableRow(['Label 1', 'Element 1', 'Index 1', \n                           'Label 2', 'Element 2', 'Index 2',\n                           'J (Hz)'], tabW);\n\n        const atoms = view.atoms;\n\n        atoms.forEach((a1, i) => {\n            atoms.slice(i+1).forEach((a2, j) => {\n\n                const J = jCoupling(a1, a2);\n\n                if(!J)\n                    return; // No data\n\n                table += tableRow([\n                    a1.crystLabel,\n                    a1.isotope + a1.element,\n                    a1.index,\n                    a2.crystLabel,\n                    a2.isotope + a2.element,\n                    a2.index,\n                    J\n                ], tabW, prec);\n            });\n        });\n\n        return table;\n    }\n}\n\n// Hook for interface\nfunction useFilesInterface() {\n    let state = useSelector(makeSelector('files', ['app_viewer', \n                                                   'app_default_displayed', \n                                                   'eul_convention']), \n                            shallowEqual);\n    let dispatcher = useDispatch();\n\n    let intf = new FilesInterface(state, dispatcher);\n\n    return intf;\n}\n\nexport default useFilesInterface;\nexport { initialFilesState };","import { createStore } from 'redux';\n\n// Initial state, merged from segments\nimport { initialAppState } from './interfaces/AppInterface';\nimport { initialSelState } from './interfaces/SelInterface';\nimport { initialCScaleState } from './interfaces/CScaleInterface';\nimport { initialMSState } from './interfaces/MSInterface';\nimport { initialEFGState } from './interfaces/EFGInterface';\nimport { initialDipState } from './interfaces/DipInterface';\nimport { initialJCoupState } from './interfaces/JCoupInterface';\nimport { initialEulerState } from './interfaces/EulerInterface';\nimport { initialPlotsState } from './interfaces/PlotsInterface';\nimport { initialFilesState } from './interfaces/FilesInterface';\nimport makeMasterListener, { initialListenerState } from './listeners';\n\n// Merging together\nconst initialState = {\n    ...initialAppState,\n    ...initialSelState,\n    ...initialCScaleState,\n    ...initialMSState,\n    ...initialEFGState,\n    ...initialDipState,\n    ...initialJCoupState,\n    ...initialEulerState,\n    ...initialFilesState,\n    ...initialPlotsState,\n    ...initialListenerState\n};\n\n// Reducer\nfunction storeReducer(state=initialState, action={type: 'none'}) {\n    switch(action.type) {\n        case 'set':\n            // Set a single value\n            state = {\n                ...state,\n                [action.key]: action.value,\n            };\n            break;\n        case 'update':\n            // Set multiple values\n            state = {\n                ...state,\n                ...action.data\n            };\n            break;\n        case 'call':\n            // Do complex stuff with state\n            let args = [state].concat(action.arguments);\n            let data = action.function(...args);\n            state = {\n                ...state,\n                ...data\n            };\n            break;\n        default:\n            break;\n    }\n\n    return state;\n};\n\nconst magresStore = createStore(storeReducer);\nmagresStore.subscribe(makeMasterListener(magresStore));\n\nexport default magresStore;","import magresStore from './store';\nimport useAppInterface from './interfaces/AppInterface';\nimport useSelInterface from './interfaces/SelInterface';\nimport useMSInterface from './interfaces/MSInterface';\nimport useEFGInterface from './interfaces/EFGInterface';\nimport useDipInterface from './interfaces/DipInterface';\nimport useEulerInterface from './interfaces/EulerInterface';\nimport useJCoupInterface from './interfaces/JCoupInterface';\nimport usePlotsInterface from './interfaces/PlotsInterface';\nimport useFilesInterface from './interfaces/FilesInterface';\n\nexport default magresStore;\n\nexport { \n    useAppInterface, \n    useSelInterface, \n    useMSInterface, \n    useEFGInterface,\n    useDipInterface,\n    useJCoupInterface,\n    useEulerInterface,\n    usePlotsInterface,\n    useFilesInterface\n};","export default __webpack_public_path__ + \"static/media/logo.3a5b963a.svg\";","import './controls.css';\nimport './MVCustomSelect.css';\n\nimport React, { useState, cloneElement, useEffect } from 'react';\nimport { FaCaretDown } from 'react-icons/fa';\n\nimport { chainClasses } from '../utils';\n\nfunction MVCustomSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className='mv-control mv-cselect-opt' onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVCustomSelect(props) {\n\n    const [ show, setShow ] = useState(false);\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVCustomSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    // Translation?\n    let tstyle = {};    \n    \n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    // If disabled while open, must close\n    useEffect(() => {\n        if (props.disabled)\n            setShow(false);\n    }, [props.disabled]);\n\n    return (\n        <div style={tstyle} className={chainClasses('mv-control', 'mv-cselect', show? null : 'mv-cselect-closed', \n                                                    props.disabled? 'mv-cselect-disabled' : null )} \n            onMouseLeave={(e) => { setShow(false); }} title={props.title}>\n            <div className='mv-control mv-cselect-main' onClick={() => { setShow(true && (!props.disabled)); }}>\n                {options[selected]}\n                <span className='mv-cselect-main-caret'><FaCaretDown /></span>\n            </div>\n            <div className='mv-control mv-cselect-ddown'>\n                {options.map((o, i) => {\n                    return cloneElement(o, {key: i, onClick: () => { setShow(false); onSelect(values[i]); }});\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport { MVCustomSelectOption };\nexport default MVCustomSelect;","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg47\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-18.293285,-29.905846)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path31-3\",\n    style: {\n      fill: \"#ffffff\",\n      strokeWidth: 0.113242,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 20.409953,29.969924 a 2.0525921,2.0525921 0 0 0 -2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,2.052588 2.0525921,2.0525921 0 0 0 2.052588,-2.052588 2.0525921,2.0525921 0 0 0 -2.052588,-2.052588 z m 0,0.304891 a 1.7477165,1.7477165 0 0 1 1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,1.747697 1.7477165,1.7477165 0 0 1 -1.747697,-1.747697 1.7477165,1.7477165 0 0 1 1.747697,-1.747697 z m 0,0.981852 a 0.76590603,0.76590603 0 0 0 -0.765845,0.765845 0.76590603,0.76590603 0 0 0 0.765845,0.765844 0.76590603,0.76590603 0 0 0 0.765844,-0.765844 0.76590603,0.76590603 0 0 0 -0.765844,-0.765845 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMs);\nexport default __webpack_public_path__ + \"static/media/ms.f07fad56.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEfg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379\",\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"M 2.5730992,0.53564415 C 2.0763787,1.0247144 2.1174995,2.1158593 2.1174995,2.1158593 c 0,0 1.090811,0.040787 1.5798807,-0.4559341 C 4.1697678,1.1801491 3.9991355,0.77827206 3.7271516,0.50620724 3.4550908,0.23406562 3.0528756,0.06325682 2.5730992,0.53564415 Z\",\n    id: \"path949\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      InkscapeStroke: \"none\",\n      fillOpacity: 1\n    },\n    d: \"m 3.2382813,0.12109375 c -0.2336518,-0.021225 -0.4928561,0.0749413 -0.75,0.328125 C 2.2066461,0.72651627 2.0927766,1.1440416 2.0390625,1.4902344 1.9853484,1.8364272 1.9960938,2.1210938 1.9960937,2.1210938 L 2,2.2324219 l 0.1132813,0.00391 c 0,0 0.2827996,0.010832 0.6289062,-0.042969 C 3.0882941,2.1395587 3.5059251,2.0257566 3.7832031,1.7441406 4.0363717,1.4870123 4.1324787,1.2277171 4.1113281,0.99414063 4.0901775,0.7605642 3.9606182,0.56808419 3.8125,0.41992188 3.6643293,0.27170718 3.471933,0.14231875 3.2382813,0.12109375 Z m -0.021484,0.2421875 C 3.3722117,0.37739918 3.5167352,0.46787023 3.640625,0.59179687 3.7644904,0.71569911 3.8570292,0.86030307 3.8710938,1.015625 3.8851583,1.1709469 3.8305467,1.3515714 3.6113281,1.5742187 3.399537,1.7893233 3.0266438,1.9050922 2.7050781,1.9550781 c -0.251685,0.039123 -0.3754283,0.03197 -0.4570312,0.03125 -7.728e-4,-0.080876 -0.00797,-0.2062232 0.03125,-0.4589844 0.049905,-0.3216465 0.1638213,-0.69447771 0.3789062,-0.90624995 0.222632,-0.21920321 0.403179,-0.27193043 0.5585938,-0.2578125 z\",\n    id: \"path951\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path4379-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#ffffff\",\n      strokeWidth: 0.242209,\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 1.6602402,3.6976978 C 2.1569607,3.2086275 2.11584,2.1174825 2.11584,2.1174825 c 0,0 -1.0908111,-0.040787 -1.57988078,0.4559342 -0.4723876,0.4797762 -0.3017553,0.8816532 -0.0297709,1.153718 C 0.7782491,3.9992763 1.1804642,4.1700851 1.6602402,3.6976978 Z\",\n    id: \"path957\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1210938,1.9960937 c 0,0 -0.2847528,-0.010832 -0.6308594,0.042969 -0.3461066,0.053801 -0.76373761,0.1676027 -1.04101565,0.4492188 -0.25316852,0.2571283 -0.34927569,0.5164235 -0.328125,0.75 C 0.14224444,3.4718577 0.27180335,3.6643377 0.41992188,3.8125 0.56809254,3.9607147 0.76048898,4.0901031 0.99414063,4.1113281 1.2277923,4.1325531 1.48895,4.0363868 1.7460937,3.7832031 2.0277289,3.5059056 2.1396453,3.0883803 2.1933594,2.7421875 2.2470735,2.3959947 2.2363281,2.1132813 2.2363281,2.1132813 L 2.2324219,2 Z M 1.9863281,2.2480469 c 7.439e-4,0.081628 0.00781,0.2052829 -0.03125,0.4570312 C 1.9051725,3.0267247 1.7912568,3.3995559 1.5761719,3.6113281 1.3535401,3.8305313 1.1710397,3.8852117 1.015625,3.8710938 0.86021029,3.8569758 0.71568671,3.7645516 0.59179687,3.640625 0.46793127,3.5167228 0.37734588,3.3721188 0.36328125,3.2167969 0.34921662,3.061475 0.40382827,2.8808505 0.62304687,2.6582031 0.83483802,2.4430985 1.2057781,2.3292828 1.5273437,2.2792969 1.7800414,2.2400162 1.905477,2.2472982 1.9863281,2.2480469 Z\",\n    id: \"path959\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 2.1132813,1.9960937 2,2 1.9960937,2.1132813 c 0,0 -0.010745,0.2827134 0.042969,0.6289062 0.053714,0.3461928 0.1675836,0.7637181 0.4492188,1.0410156 0.2571437,0.2531837 0.5163483,0.34935 0.75,0.328125 C 3.4719329,4.0901031 3.6643293,3.9607147 3.8125,3.8125 3.9606185,3.6643377 4.0901775,3.4718577 4.1113281,3.2382813 4.1324788,3.0047048 4.0363716,2.7454096 3.7832031,2.4882813 3.5059251,2.2066652 3.0882941,2.0928632 2.7421875,2.0390625 2.3960809,1.9852618 2.1132812,1.9960937 2.1132813,1.9960937 Z m 0.1347656,0.2519532 c 0.081645,-7.179e-4 0.2054038,-0.00786 0.4570312,0.03125 0.3215657,0.049986 0.6944589,0.1638016 0.90625,0.3789062 C 3.8305467,2.8808505 3.8851584,3.061475 3.8710938,3.2167969 3.8570291,3.3721188 3.7644906,3.5167228 3.640625,3.640625 3.5167352,3.7645516 3.3722116,3.8569758 3.2167969,3.8710938 3.0613821,3.8852117 2.8808349,3.8305313 2.6582031,3.6113281 2.4431182,3.3995559 2.3292024,3.0267247 2.2792969,2.7050781 2.2402454,2.4533874 2.2473047,2.3297177 2.2480469,2.2480469 Z\",\n    id: \"path4379-8-7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fefefe\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"M 0.99414063,0.12304687 C 0.76052273,0.14426881 0.56808207,0.27367078 0.41992188,0.421875 0.27181384,0.57002685 0.14224137,0.76255105 0.12109375,0.99609375 0.09994613,1.2296364 0.19606487,1.4889803 0.44921875,1.7460937 0.72646854,2.0276811 1.1441384,2.1415134 1.4902344,2.1953125 c 0.346096,0.053799 0.6308594,0.042969 0.6308594,0.042969 l 0.1113281,-0.00391 0.00391,-0.1132812 c 0,0 0.010744,-0.2827241 -0.042969,-0.6289063 C 2.1396469,1.1460053 2.0277002,0.72844112 1.7460937,0.45117188 1.4889649,0.19800288 1.2277585,0.10182494 0.99414063,0.12304687 Z M 1.015625,0.36328125 c 0.1554485,-0.014121 0.3379002,0.0405478 0.5605469,0.25976562 0.2151136,0.21180052 0.328999,0.58459283 0.3789062,0.90625003 0.039228,0.2528276 0.032025,0.3781486 0.03125,0.4589843 -0.08081,7.505e-4 -0.2062203,0.00804 -0.4589844,-0.03125 C 1.2057675,1.9070437 0.83486627,1.7913052 0.62304687,1.5761719 0.40381362,1.3535096 0.34921357,1.1729338 0.36328125,1.0175781 0.37734893,0.86222244 0.46792083,0.71766269 0.59179687,0.59375 0.71569719,0.46981287 0.86017652,0.37740225 1.015625,0.36328125 Z\",\n    id: \"path4379-8-7-9\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEfg);\nexport default __webpack_public_path__ + \"static/media/efg.dd4cc518.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDip(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"path1204\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffb\",\n      strokeWidth: 0.214,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 4.089079,2.0563225 c 0,1.0289629 -0.8331367,1.8631023 -1.3433946,1.8631023 -0.5102579,-10e-8 -0.5044128,-0.8341394 -0.5044128,-1.8631023 0,-1.0289628 -0.00584,-1.86310211 0.5044128,-1.86310221 0.5102579,0 1.3433946,0.83413931 1.3433946,1.86310221 z\",\n    id: \"path1994\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 2.7460938,0.0859375 c -0.1567163,3e-8 -0.2914586,0.07367204 -0.3789063,0.18945313 C 2.2797398,0.39117171 2.2300544,0.54136545 2.1972656,0.71875 c -0.065577,0.3547691 -0.0625,0.8236122 -0.0625,1.3378906 0,0.5142784 -0.00308,0.9811683 0.0625,1.3359375 0.032788,0.1773846 0.082474,0.3295313 0.1699219,0.4453125 0.087448,0.1157812 0.2221891,0.1894531 0.3789063,0.1894531 0.3134343,0 0.6597622,-0.2320725 0.9453125,-0.5859374 0.2855502,-0.353865 0.5039062,-0.841406 0.5039062,-1.3847657 0,-0.5433597 -0.218356,-1.0309007 -0.5039062,-1.3847656 C 3.405856,0.31801006 3.0595281,0.0859375 2.7460938,0.0859375 Z m 0,0.21484375 c 0.196823,0 0.5207148,0.18541461 0.7792968,0.50585938 0.258582,0.32044477 0.4570313,0.76439787 0.4570313,1.24999997 0,0.4856022 -0.1984493,0.9295552 -0.4570313,1.25 C 3.2668086,3.6270854 2.9429167,3.8125 2.7460938,3.8125 2.6476822,3.8125 2.5920753,3.7817592 2.5371094,3.7089844 2.4821435,3.6362095 2.4377356,3.5132859 2.4082031,3.3535156 2.3491381,3.0339751 2.3476563,2.5713242 2.3476563,2.0566406 c 0,-0.5146833 0.00148,-0.9792875 0.060547,-1.2988281 0.029533,-0.1597703 0.07394,-0.28074067 0.1289063,-0.35351562 0.054966,-0.072775 0.1105744,-0.10351561 0.2089844,-0.10351563 z\",\n    id: \"path1996\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#feffff\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 1.4882812,0.09765625 c -0.3134344,0 -0.66171528,0.23207255 -0.94726558,0.5859375 C 0.25546533,1.0374587 0.03710938,1.5249996 0.03710937,2.0683594 c 0,0.5433597 0.21835596,1.0309007 0.50390625,1.3847656 0.2855503,0.3538649 0.63383118,0.5839844 0.94726558,0.5839844 0.1567172,-1e-7 0.2914583,-0.071719 0.3789063,-0.1875 0.087448,-0.1157812 0.1371335,-0.2679279 0.1699219,-0.4453125 0.065577,-0.3547692 0.0625,-0.8216592 0.0625,-1.3359375 0,-0.5142785 0.00308,-0.9831215 -0.0625,-1.33789065 C 2.0043206,0.5530842 1.9546352,0.40289046 1.8671875,0.28710938 1.7797398,0.17132829 1.6449975,0.09765628 1.4882812,0.09765625 Z m 0,0.21484375 c 0.09841,2e-8 0.1540186,0.0307407 0.2089844,0.10351563 0.054966,0.0727749 0.099374,0.19374531 0.1289063,0.35351562 0.059066,0.31954065 0.058594,0.78414475 0.058594,1.29882815 0,0.5146835 4.713e-4,0.9773345 -0.058594,1.296875 -0.029532,0.1597702 -0.07394,0.2826939 -0.1289063,0.3554687 -0.054966,0.072775 -0.1105728,0.1035156 -0.2089844,0.1035157 -0.196823,0 -0.52266797,-0.1854147 -0.78124995,-0.5058594 -0.25858198,-0.3204448 -0.45507812,-0.7643979 -0.45507812,-1.25 0,-0.4856022 0.19649614,-0.9295553 0.45507812,-1.25000002 C 0.96561323,0.4979146 1.2914582,0.3125 1.4882812,0.3125 Z\",\n    id: \"path1204-3\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDip);\nexport default __webpack_public_path__ + \"static/media/dip.4ab1e1ee.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgJcoup(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs13\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g2792\",\n    transform: \"translate(-0.12942697,-0.24771585)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      InkscapeStroke: \"none\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"m 0.86132813,2.609375 a 0.25,0.25 0 0 0 -0.25000001,0.25 c 0,0.4485824 0.23846935,0.8635994 0.62695308,1.0878906 0.3884838,0.2242913 0.8693287,0.2242912 1.2578126,0 C 2.8845776,3.7229744 3.125,3.3079575 3.125,2.859375 a 0.25,0.25 0 0 0 -0.25,-0.25 0.25,0.25 0 0 0 -0.25,0.25 c 0,0.2707514 -0.1444286,0.5208743 -0.3789062,0.65625 -0.2344777,0.1353757 -0.523335,0.1353757 -0.7578126,0 C 1.2538037,3.3802493 1.1113281,3.1301264 1.1113281,2.859375 a 0.25,0.25 0 0 0 -0.24999997,-0.25 z\",\n    id: \"path2096\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 V 2.859375 a 0.25,0.25 0 0 0 0.25,0.25 0.25,0.25 0 0 0 0.25,-0.25 V 0.86328125 a 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      color: \"#000000\",\n      fill: \"#fffffa\",\n      strokeLinecap: \"round\",\n      InkscapeStroke: \"none\"\n    },\n    d: \"m 2.1171875,0.61328125 a 0.25,0.25 0 0 0 -0.25,0.25 0.25,0.25 0 0 0 0.25,0.24999995 h 1.5136719 a 0.25,0.25 0 0 0 0.25,-0.24999995 0.25,0.25 0 0 0 -0.25,-0.25 z\",\n    id: \"path2453-6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgJcoup);\nexport default __webpack_public_path__ + \"static/media/jcoup.2bc45a9a.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEuler(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"4.2333336mm\",\n    height: \"4.2333336mm\",\n    viewBox: \"0 0 4.2333336 4.2333336\",\n    id: \"svg967\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs11\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g23220\",\n    transform: \"translate(-0.12438843,0.37954715)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.70134777,2.576951 H 3.7807629 V 3.0747627 H 0.70134777 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"rect3247-3\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    transform: \"rotate(-45)\",\n    d: \"M -1.5022547,2.2452056 H 1.5771604 V 2.7430173 H -1.5022547 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 0.95025361,2.8258569 A 0.24890584,0.24890584 0 0 1 0.70134777,3.0747628 0.24890584,0.24890584 0 0 1 0.45244193,2.8258569 0.24890584,0.24890584 0 0 1 0.70134777,2.5769511 0.24890584,0.24890584 0 0 1 0.95025361,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 3.1277298,0.64838237 A 0.24890584,0.24890584 0 0 1 2.878824,0.8972882 0.24890584,0.24890584 0 0 1 2.6299182,0.64838237 0.24890584,0.24890584 0 0 1 2.878824,0.39947653 0.24890584,0.24890584 0 0 1 3.1277298,0.64838237 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-5-6\",\n    style: {\n      fill: \"#505050\",\n      strokeWidth: 1.11706,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 4.0296685,2.8258569 A 0.24890584,0.24890584 0 0 1 3.7807627,3.0747628 0.24890584,0.24890584 0 0 1 3.5318568,2.8258569 0.24890584,0.24890584 0 0 1 3.7807627,2.5769511 0.24890584,0.24890584 0 0 1 4.0296685,2.8258569 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path7097-6\",\n    style: {\n      fill: \"#505050\",\n      fillOpacity: 1,\n      stroke: \"none\",\n      strokeWidth: 8.64555,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      paintOrder: \"fill markers stroke\"\n    },\n    d: \"M 2.0206488,1.4219955 1.735275,1.725696 A 1.5092943,1.5092943 0 0 1 2.2104616,2.811338 L 2.6276135,2.807408 A 1.9264272,1.9264272 0 0 0 2.0206488,1.4219955 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEuler);\nexport default __webpack_public_path__ + \"static/media/euler.04feefb4.svg\";\nexport { ForwardRef as ReactComponent };","import './MVIcon.css';\n\nimport React from 'react';\n\nimport { ReactComponent as MSIcon } from './ms.svg';\nimport { ReactComponent as EFGIcon } from './efg.svg';\nimport { ReactComponent as DipIcon } from './dip.svg';\nimport { ReactComponent as JcoupIcon } from './jcoup.svg';\nimport { ReactComponent as EulerIcon } from './euler.svg';\n\nconst icons = {\n    ms: MSIcon,\n    efg: EFGIcon,\n    dip: DipIcon,\n    jcoup: JcoupIcon,\n    euler: EulerIcon\n};\n\nfunction MVIcon(props) {\n\n    if (!(props.icon in icons)) {\n        throw new Error('Invalid icon in MVIcon');\n    }\n\n    const Icon = icons[props.icon];\n    const color = (props.color || '#ffffff');\n\n    return (\n        <Icon className='mv-icon' style={{'--path-fill': color}} {...props}/>\n        );\n}\n\nexport default MVIcon;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewHeader.css';\nimport logo from '../icons/logo.svg';\nimport { FaSun, FaMoon, FaRegFolderOpen, FaMousePointer, FaFile, FaBan } from 'react-icons/fa';\nimport { GiHistogram } from 'react-icons/gi';\n\nimport React from 'react';\nimport MVCustomSelect, { MVCustomSelectOption } from '../controls/MVCustomSelect';\nimport MVIcon from '../icons/MVIcon';\nimport { useAppInterface } from './store';\n\nfunction ThemeSwitcher() {\n\n    const appint = useAppInterface();\n\n    const other = {\n        dark: 'light',\n        light: 'dark'\n    };\n\n    return (<div id='mv-themeswitch' onClick={() => { appint.theme = other[appint.theme]; }}>\n        <div id='mv-themeicons' className={appint.theme}>\n            <FaMoon id='mv-themedark'/>\n            <FaSun id='mv-themelight'/>\n        </div>\n    </div>);\n}\n\nfunction MagresViewHeader() {\n\n    const appint = useAppInterface();\n\n    return (<header className='mv-header'>\n        <div className='mv-header-left'>\n            <img src={logo} alt='MagresView logo' id='mv-header-logo'></img>\n            <h3 id='mv-header-title'>\n                <span style={{color: 'var(--ms-color-2)'}}>M</span>agres<span style={{color: 'var(--efg-color-2)'}}>V</span>iew 2.0\n            </h3>\n        </div>\n        <div className='mv-header-right'>\n            <MVCustomSelect onSelect={(v) => { appint.sidebar = v; }} selected={appint.sidebar}>\n                <MVCustomSelectOption value='load' icon={<FaRegFolderOpen />}>Load file</MVCustomSelectOption>\n                <MVCustomSelectOption value='select' icon={<FaMousePointer />}>Select and display</MVCustomSelectOption>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>Magnetic Shielding</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>Electric Field Gradient</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='jcoup' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J Couplings</MVCustomSelectOption>\n                <MVCustomSelectOption value='euler' icon={<MVIcon icon='euler' color='var(--bkg-color-3)'/>}>Euler Angles</MVCustomSelectOption>\n                <MVCustomSelectOption value='plots' icon={<GiHistogram />}>Spectral plots</MVCustomSelectOption>\n                <MVCustomSelectOption value='files' icon={<FaFile />}>Report files</MVCustomSelectOption>\n                <MVCustomSelectOption value='none' icon={<FaBan />}>No sidebar</MVCustomSelectOption>\n            </MVCustomSelect>            \n            <span className='mv-hor-sep-3'></span>\n            <ThemeSwitcher />\n        </div>\n    </header>);\n}\n\nexport default MagresViewHeader;\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewScreenshot.css';\n\nimport { FaCamera } from 'react-icons/fa';\nimport useAppInterface from './store/interfaces/AppInterface';\nimport { saveImage } from '../utils';\n\n\nfunction MagresViewScreenshot(props) {\n\n    const appint = useAppInterface();\n\n    function takeScreenshot() {\n        let data = appint.viewer.getScreenshotData();\n        saveImage(data, 'MagresViewScreenshot.png');\n    }\n\n    return (<div className='mv-sshot' onClick={takeScreenshot}>\n        <FaCamera />\n        <div className='mv-sshot-text'>\n            Take a screenshot\n        </div>\n    </div>);\n}\n\nexport default MagresViewScreenshot;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MagresViewSidebar.css';\n\nimport React from 'react';\nimport { FaAngleDoubleRight } from 'react-icons/fa';\n\nimport { chainClasses } from '../../utils';\nimport { useAppInterface } from '../store';\n\nfunction MagresViewSidebar(props) {\n\n    const appint = useAppInterface();\n\n    return (<div className={chainClasses('mv-sidebar', props.show? 'open' : '')}>\n        <div className='mv-sidebar-title'>\n            {props.title? <h2>{props.title}</h2> : null}            \n            <FaAngleDoubleRight className='mv-sidebar-hide' onClick={() => { appint.sidebar = 'none'; }} />\n        </div>\n        {props.children}\n    </div>);\n}\n\nexport default MagresViewSidebar;","import './MVFile.css';\nimport { chainClasses } from '../utils';\n\nimport React from 'react';\n\nfunction MVFile(props) {\n\n    function onChange(e) {\n        if (props.onSelect) {\n            var files = e.target.files;\n            if (files.length > 0) {\n                props.onSelect(files);\n            }\n        }\n        e.target.value = null;\n    }\n\n    return (\n        <input className={chainClasses('mv-control', 'mv-file', props.notext? 'hide-text' : null)} type='file' \n            accept={props.filetypes} \n            onChange={onChange} \n            multiple={props.multiple}\n        />\n    );\n}\n\nexport default MVFile;","import './MVBox.css';\nimport React from 'react';\nimport { GrFormClose } from 'react-icons/gr';\n\nimport { chainClasses } from '../utils';\n\nfunction MVBox(props) {\n\n    const status_class = (props.status)? 'mv-box-' + props.status : '';\n    const onClose = props.onClose || (() => {});\n\n    return (<div className={chainClasses('mv-control', 'mv-box', status_class)}>\n        <div className='mv-box-header'><GrFormClose onClick={onClose} size={22}/></div>\n        {props.children}\n    </div>);\n}\n\nexport default MVBox;","import './MVCheckBox.css';\n\nimport React from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVCheckBox(props) {\n\n    const id = useId('checkbox');\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    const onCheck = props.onCheck || (() => {});\n\n    return (\n        <span className='mv-control mv-checkbox' style={style} title={props.title}>\n            <input id={id} type='checkbox' checked={props.checked} onChange={(e) => onCheck(e.target.checked)}/>\n            <label htmlFor={id}/>{props.children}\n        </span>\n    );\n}\n\nexport default MVCheckBox;","import './controls.css';\nimport './MVListSelect.css';\n\nimport React, { cloneElement } from 'react';\n\nimport { chainClasses } from '../utils';\n\nfunction MVListSelectOption(props) {\n\n    const onClick = props.onClick || (() => {});\n\n    return (\n        <div className={chainClasses('mv-control', 'mv-lselect-opt', props.selected? 'mv-lselected': null)} \n             onClick={onClick}>\n            {props.icon? props.icon : <span></span>}\n            {props.children}\n        </div>\n    );\n}\n\nfunction MVListSelect(props) {\n\n    // Gather the options\n    const options = props.children.filter((c) => c.type === MVListSelectOption);\n    const values = options.map((o) => (o.props.value));\n\n    const selected = values.findIndex((v) => (v === props.selected));\n    const onSelect = props.onSelect || (() => {});\n\n    return (\n        <div className='mv-control mv-lselect' title={props.title}>\n            {options.map((o, i) => {\n                return cloneElement(o, {key: i, selected: (i === selected),\n                                        onClick: () => { onSelect(values[i]); }});\n            })}\n        </div>\n    );\n}\n\n\nexport { MVListSelectOption };\nexport default MVListSelect;","import MagresViewSidebar from './MagresViewSidebar';\n\nimport { AiFillEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { MdDeleteForever } from 'react-icons/md';\n\nimport MVFile from '../../controls/MVFile';\nimport MVBox from '../../controls/MVBox';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVListSelect, { MVListSelectOption } from '../../controls/MVListSelect';\nimport { useAppInterface } from '../store';\n\nimport React, { useState } from 'react';\n/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport _ from 'lodash';\n\n// Accepted file formats\nconst file_formats = ['.cif', '.xyz', '.magres', '.cell'];\n\nfunction MVSidebarLoad(props) {\n\n    const [ state, setState ] = useState({\n        load_message: '',\n        load_message_status: null,\n        list_selected: ''\n    });\n\n    const appint = useAppInterface();\n    const models = appint.models;\n\n    console.log('[MVSidebarLoad rendered]');\n\n    // Methods\n    function loadModel(f) {\n\n        appint.load(f, (success) => {\n            // Check success\n            let msg = '';\n            let err = false;\n            _.map(success, (v, n) => {\n                if (v !== 0) {\n                    msg += 'Error parsing file ' + n + ': ' + v + '\\n';\n                    err = true;\n                }\n            });\n            if (msg === '') {\n                msg = 'All files parsed successfully!'\n            }\n\n            setState({\n                ...state,\n                load_message: msg, \n                load_message_status: err? 'error' : 'success'\n            });\n        });\n    }\n\n    function makeModelOption(m, i) {\n\n        let model_icon;        \n        if (m === appint.currentModelName) {\n            model_icon = <AiFillEye size={22}/>;\n        }\n        else {\n            model_icon = <AiOutlineEyeInvisible size={22} onClick={() => { appint.display(m); }} />\n        }\n\n        return (<MVListSelectOption key={i} value={m} icon={model_icon}>\n            {m}\n            <MdDeleteForever style={{color: 'var(--err-color-2)'}} size={22} onClick={() => { appint.delete(m); }} />\n        </MVListSelectOption>);\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Load file'>\n        <div className='mv-sidebar-block'>\n            <MVFile filetypes={file_formats.join(',')} onSelect={loadModel} notext={true} multiple={true}/>\n            <MVCheckBox onCheck={(v) => { appint.loadAsMol = v }} checked={appint.loadAsMol}>Load as molecular crystal</MVCheckBox>\n            <MVCheckBox onCheck={(v) => { appint.useNMRIsotopes = v }} checked={appint.useNMRIsotopes}>Use only NMR active isotopes</MVCheckBox>\n        </div>\n        <h4>Models:</h4>\n        <MVListSelect selected={state.list_selected} onSelect={(v) => { setState({...state, list_selected: v}); }}>\n            {models.map(makeModelOption)}\n        </MVListSelect>\n        <span className='sep-1' />\n        <MVBox status={state.load_message_status} onClose={() => {setState({...state, load_message_status: ''})}}>\n            {state.load_message}\n        </MVBox>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarLoad;","import './MVButton.css';\nimport React from 'react';\n\nfunction MVButton(props) {\n    return (\n    <div className='mv-control'>\n        <button {...props} className='mv-control mv-button'>\n            {props.children}\n        </button>\n    </div>);\n}\n\nexport default MVButton;","import './MVRadioButton.css';\nimport _ from 'lodash';\n\nimport React, { cloneElement } from 'react';\n\nimport { useId } from '../utils';\n\nfunction MVRadioButton(props) {\n\n    const uid = useId('radiobutton');\n\n    return (<span className='mv-control mv-radio' title={props.title}>\n        <input id={uid} name={props.name} type=\"radio\" checked={props.checked} onChange={props.onChange}/>\n        <label htmlFor={uid}></label>{props.children}\n    </span>);\n}\n\nfunction MVRadioGroup(props) {\n\n    // Which children are buttons?\n    const buttons = _.filter(props.children, (c) => c.type === MVRadioButton);\n    const values = buttons.map((b) => b.props.value);\n\n    // Find the index of the one we want selected\n    const selected = values.findIndex((v) => v === props.selected);\n    const onChange = props.onSelect? props.onSelect : (() => {});\n\n    var style = {};\n    if (props.color) {\n        style['--check-color'] = props.color;\n    }\n\n    return(<span className='mv-control mv-radiogroup' style={style} title={props.title}>\n        {props.label? <span className=\"mv-radiogroup-label\" style={props.labelStyle}>{props.label}</span> : null}\n        {buttons.map((b, i) => {\n            return cloneElement(b, {key: i, \n                index: i, \n                checked: (i === selected), \n                name: props.name, \n                onChange: (e) => { onChange(b.props.value); }\n            });\n        })}\n    </span>);\n}\n\nexport { MVRadioGroup };\nexport default MVRadioButton;","import './MVText.css';\n\nimport React, { useState } from 'react';\n\nimport { chainClasses, useId } from '../utils';\n\nfunction MVText(props) {\n\n    const [submitted, setSubmitted] = useState(true);\n    const id = useId('text');\n\n    var filter = null;\n    if (props.filter)\n        filter = new RegExp(props.filter);\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n    }\n\n    const waitSubmit = (props.onSubmit && !submitted);\n\n    function onChange(e) {\n        var v = e.target.value;\n        if (filter) {\n            let m = filter.exec(v)\n            v = m? m[0] : props.value;\n        }\n        setSubmitted(false);\n        if(props.onChange)\n            props.onChange(v);\n    }\n\n    function onKeyDown(e) {\n        if (e.key === 'Enter') {\n            if (waitSubmit)\n                props.onSubmit(props.value);\n            setSubmitted(true);\n        }\n    }\n\n    return (\n    <span className='mv-text' style={style} title={props.title}>\n        {props.children? <label htmlFor={id} className='mv-textlabel'>{props.children}</label> : <></>}\n        <input type='text' id={id} className={chainClasses('mv-control mv-textfield', waitSubmit? 'mv-submit-wait' : '')} \n            size={props.size} value={props.value}\n            onChange={onChange} onKeyDown={onKeyDown}\n            disabled={props.disabled}\n        />\n    </span>);\n}\n\nexport default MVText;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarSelect.css';\n\nimport _ from 'lodash';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useSelInterface } from '../store';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVText from '../../controls/MVText';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\n\nfunction sharedElement(sel) {\n    if (sel == null || sel.atoms.length === 0) {\n        return null;\n    }\n\n    let atoms = sel.atoms;\n    let el = atoms[0].element;\n\n    if (atoms.slice(1).reduce((s, a) => (s && a.element === el), true)) {\n        return el;\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction MVIsotopeSelection(props) {\n\n    // Actually unnecessary; we only use it to trigger a re-render\n    const [ state, setState ] = useState(1);\n\n    const selint = useSelInterface();\n    const selected = selint.selected;\n    const el = sharedElement(selected);\n\n    let elData = null;\n    let isoConf = null;\n    let selOptions = [];\n    let currentOption = 0;\n\n    if (el) {\n        // Information about that element?\n        elData = selected.atoms[0].elementData;\n        isoConf = selected.atoms.map((a) => a.isotope);\n\n        // Are they all the same?\n        currentOption = isoConf[0].toString();\n        if (!isoConf.reduce((s, x) => s && x === isoConf[0], true)) {\n            // If not, then we have to add a special option that reproduces this last\n            // configuration\n            selOptions = [<MVCustomSelectOption key={-1} value={isoConf}>\n                {_.join(_.uniq(isoConf))}\n            </MVCustomSelectOption>];\n            currentOption = isoConf;\n        }\n\n        // Generate options\n        let keys = Object.keys(elData.isotopes).sort();\n        selOptions = selOptions.concat(keys.map((A, i) => (<MVCustomSelectOption key={i} value={A}>\n                {A}\n            </MVCustomSelectOption>))\n        );\n    }\n    else {\n        selOptions = [<MVCustomSelectOption key={0} value={0}>N/A</MVCustomSelectOption>];\n    }\n\n    // This component handles specifically just the selection of isotopes\n    return (<>\n        <h3>Isotope selection</h3>\n        <MVCustomSelect disabled={!el} onSelect={(A) => { selint.setIsotope(A); setState(-state); }} selected={currentOption}>{selOptions}</MVCustomSelect>\n    </>);\n}\n\n\nfunction MVSidebarSelect(props) {\n\n    const selint = useSelInterface();\n\n    console.log('[MVSidebarSelect rendered]');\n\n    function selectMode(v) {\n        selint.selectionMode = v;\n    }\n\n    function setR(v) {\n        selint.selectionSphereR = v;\n    }\n\n    function setN(v) {\n        selint.selectionBondN = v;\n    }\n\n    const selRef = useRef();\n    selRef.current = selint;\n\n    useEffect(() => {\n        console.log('Binding select clicks');\n        let selint = selRef.current;\n        selint.selectionOn = props.show;\n    }, [props.show, selint.app]); // The dependency on app guarantees this is executed AFTER the app itself is loaded\n\n    return (<MagresViewSidebar show={props.show} title='Select and display'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={selint.showCrystLabels} onCheck={(v) => { selint.showCrystLabels = v }}>Show crystallographic labels</MVCheckBox>        \n            <MVCheckBox checked={selint.highlightSelected} onCheck={(v) => { selint.highlightSelected = v }}>Highlight selected</MVCheckBox>        \n            <MVCheckBox checked={selint.showCell} onCheck={(v) => { selint.showCell = v }}>Show unit cell</MVCheckBox>        \n            <span className='sep-1' />\n            <MVRadioGroup label='Selection mode' onSelect={selectMode} selected={selint.selectionMode} name='selec_mode_radio'>\n                <MVRadioButton value='atom'>Atom</MVRadioButton>\n                <MVRadioButton value='element'>Element</MVRadioButton>\n                <MVRadioButton value='sphere'>Sphere, radius =&nbsp;\n                    <MVText size='5' value={selint.selectionSphereR} filter='[0-9]*(?:\\.[0-9]*)?' onChange={setR} onSubmit={setR} />&nbsp;  &#8491;\n                </MVRadioButton>\n                <MVRadioButton value='molecule'>Molecule</MVRadioButton>\n                <MVRadioButton value='bonds'>Bonds, max distance = &nbsp;\n                    <MVText size='3' value={ selint.selectionBondN } filter='[0-9]*' onChange={setN} onSubmit={setN} />\n                </MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <div className='mv-sidebar-grid'>\n                <MVButton onClick={() => { selint.selected = selint.displayed }}>Select visible</MVButton>\n                <MVButton onClick={() => { selint.selected = null }}>Select none</MVButton>                \n                <MVButton onClick={() => { selint.displayed = selint.selected }}>Display selected</MVButton>\n                <MVButton onClick={() => { selint.displayed = null }}>Reset displayed</MVButton>                \n            </div>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVIsotopeSelection />\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Selection controls:</h3>\n            <ul>\n                <li><tt>CLICK</tt> to select an atom/element/etc.</li>\n                <li><tt>SHIFT+CLICK</tt> to add to the current selection</li>\n                <li><tt>CTRL+CLICK</tt> to add or remove (XOR) from the current selection</li>\n            </ul>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarSelect;","import './MVRange.css';\nimport './MVText.css'; \n\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { regularExpressions, useId } from '../utils';\nimport MVText from './MVText';\n\nfunction MVRange(props) {\n\n    // Range definition\n    const min = 'min' in props? props.min : 0;\n    const max = 'max' in props? props.max : 100;\n    const step = 'step' in props? props.step : 1;\n\n    function toNumber(v) {\n        v = parseFloat(v);\n        v = Math.min(v, max);\n        v = Math.max(v, min);\n        v = Math.round(v/step)*step;\n        return v;\n    }\n\n    const in_val = (props.value != null? toNumber(props.value) : min);\n    const id = useId('range');\n\n    const [text, setText] = useState(in_val.toString());\n\n    // Style (custom color)\n    var style = {};\n    if (props.color) {\n        style['--outline-color'] = props.color;\n        style['--thumb-color'] = props.color;\n    }\n\n    function acceptValue(v) {\n        v = toNumber(v);\n\n        if (props.onChange)\n            props.onChange(v);\n    }\n\n    let stateRef = useRef();\n    stateRef.current = [text, setText];\n\n    // Update the text value if the props one changed and if necessary\n    useEffect(() => {\n        const [text, setText] = stateRef.current;\n\n        if (parseFloat(text) !== in_val)\n            setText(in_val.toString());\n    }, [in_val]);\n\n\n    return (\n        <div className='mv-control'>\n            {props.children? <label htmlFor={id} className='mv-rangelabel'>{props.children}</label> : <></>}            \n            <span className='mv-control mv-range' style={style}>\n                <input className='mv-range-slider' type='range' id={id} onInput={(e) => { acceptValue(e.target.value); }}\n                 min={min} max={max} step={step} value={in_val} disabled={props.disabled}/>\n                <MVText size={4} filter={regularExpressions.float} value={text} onChange={setText} onSubmit={acceptValue} disabled={props.disabled}/>\n            </span>\n        </div>);\n}\n\nexport default MVRange;","import './controls.css';\nimport './MVModal.css';\n\nimport React, { useEffect, useReducer } from 'react';\nimport { IconContext } from 'react-icons';\nimport { IoClose } from 'react-icons/io5';\n\nimport { chainClasses } from '../utils';\n\nimport MVButton from './MVButton';\n\nfunction modalReducer(state, action={}) {\n    switch(action.type) {\n        case 'dragstart': \n            state = {\n                ...state,\n                is_drag: true,\n                x0: action.x0,\n                y0: action.y0\n            };\n            break;\n        case 'move':\n            state = {\n                ...state,\n                dx: action.dx-state.x0,\n                dy: action.dy-state.y0\n            };\n            break;\n        case 'dragend': \n            state = {\n                ...state,\n                is_drag: false,\n                x0: null,\n                y0: null\n            };\n            break;\n        default: \n            break;\n    }\n\n    return state;\n}\n\nfunction MVModal(props) {\n\n    const [state, dispatch] = useReducer(modalReducer, {\n        dx: 0,\n        dy: 0,\n        x0: null,\n        y0: null,\n        is_drag: false\n    });\n\n    const onAccept = props.onAccept || (() => {});\n    const onClose = props.onClose || (() => {});\n\n    function onTitleMouseDown(e) {\n\n        if (props.draggable && e.button === 0) {\n            dispatch({\n                type: 'dragstart',\n                x0: e.clientX-state.dx,\n                y0: e.clientY-state.dy\n            });\n        }\n    }\n\n    useEffect(() => {\n\n        if (state.is_drag) {\n            document.onmousemove = (e) => {\n                dispatch({\n                    type: 'move',\n                    dx: e.clientX,\n                    dy: e.clientY\n                });                \n            }\n\n            document.onmouseup = (e) => {\n                dispatch({\n                    type: 'dragend'\n                });\n            }\n        }\n        else {\n            document.onmousemove = null;\n            document.onmouseup = null;\n        }\n\n    }, [state.is_drag]);\n\n    const modalStyle = {\n        transform: 'translate(' + state.dx + 'px, ' + state.dy + 'px)'\n    };\n\n    const hasOverlay = props.hasOverlay;\n\n    if (!hasOverlay && !props.display) {\n        modalStyle['display'] = 'none';\n    }\n\n    let modal = (<div className={chainClasses('mv-control mv-modal', props.draggable? 'mv-modal-draggable' : '', \n                                              props.resizable? 'mv-modal-resizable' : '')} style={modalStyle}>\n        <div className='mv-modal-title' onMouseDown={onTitleMouseDown}>\n            {props.title} \n            <IconContext.Provider value={{color: 'var(--fwd-color-1)'}}>\n                <IoClose size={22} onClick={onClose}/>\n            </IconContext.Provider>\n        </div>\n        <div className='mv-modal-content'>\n            {props.children}                \n        </div>\n        {props.noFooter? <></> :\n            <div className='mv-modal-footer'>\n                <MVButton onClick={onAccept}>OK</MVButton>\n                <MVButton onClick={onClose}>Cancel</MVButton>\n            </div>\n        }\n    </div>);\n\n    if (hasOverlay) {\n        modal = (<div className={chainClasses('mv-control mv-modal-overlay', props.display? '' : 'mv-modal-hidden')}>\n            {modal}\n        </div>);\n    }\n\n    return modal;\n}\n\nexport default MVModal;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarMS.css';\n\nimport _ from 'lodash';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useMSInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\nimport MVModal from '../../controls/MVModal';\nimport MVText from '../../controls/MVText';\n\nfunction MVReferenceTable(props) {\n\n    const msint = useMSInterface();\n    const [ refTable, setRefTable ] = useState(msint.referenceTable);\n\n    // We store a copy of the reference list internally; it only gets set on\n    // the interface once we click OK. This is to avoid needless expensive \n    // operations when typing text in the fields, especially if the CS labels\n    // are on.\n    \n    const intRef = useRef();\n    intRef.current = msint;\n\n    useEffect(() => {\n        setRefTable(intRef.current.referenceTable);\n    }, [props.display]);\n\n    const elements = _.keys(refTable).sort();\n\n    function copyAll(v) {\n        setRefTable(_.fromPairs(elements.map((el) => [el, v])));\n    }\n\n    return (\n    <MVModal title='References for chemical shifts, by element (ppm)' display={props.display} hasOverlay={true}\n             onClose={props.close} onAccept={() => { msint.updateReferenceTable(refTable); props.close(); }}>\n        <div className='mv-msref-table'>\n            {elements.map((el, i) => {\n                const ref = refTable[el];\n\n                return (<div key={i} className='mv-msref-table-row'>\n                            <div className='mv-msref-table-el'>{el}</div>\n                            <div className='mv-msref-table-ref'>\n                                <MVText value={ref} onChange={(v) => { setRefTable({...refTable, [el]: v}) }} size={5}/>\n                            </div>\n                            <div className='mv-msref-table-copy'>\n                                <MVButton onClick={() => { copyAll(ref); }}>Apply to all</MVButton>\n                            </div>\n                        </div>);\n            })}\n        </div>\n    </MVModal>);\n}\n\n\nfunction MVSidebarMS(props) {\n\n    const [ state, setState ] = useState({\n        showRefTable: false\n    });\n\n    const msint = useMSInterface();\n\n    console.log('[MVSidebarMS rendered]');\n\n    var has_ms = false;\n    if (props.show) {\n        has_ms = msint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Magnetic Shielding'>\n        <div className={chainClasses('mv-sidebar-block', has_ms? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { msint.hasEllipsoids = v; }} checked={msint.hasEllipsoids}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.01} max={0.5} step={0.005} value={msint.ellipsoidScale}\n                      onChange={(s) => { msint.ellipsoidScale = s; }} disabled={!msint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { msint.ellipsoidScale = 0; }} disabled={!msint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { msint.labelsMode = v; }} selected={msint.labelsMode} name='ms_label_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='iso'>Isotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='cs'>Chemical Shifts (ppm, uses references)</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (ppm)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { msint.colorScaleType = v; }} selected={msint.colorScaleType} disabled={!msint.colorScaleAvailable} name='ms_cscale_radio'>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='ms_iso'>Isotropy</MVRadioButton>\n                <MVRadioButton value='ms_cs'>Chemical Shifts (uses references)</MVRadioButton>\n                <MVRadioButton value='ms_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='ms_asymm'>Asymmetry</MVRadioButton>\n             </MVRadioGroup>\n             <MVButton onClick={() => { setState({...state, showRefTable: true}) }}>Set References</MVButton>\n             <MVReferenceTable display={state.showRefTable} close={() => { setState({...state, showRefTable: false}) }}/>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_ms? 'hidden': '')}>No MS data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarMS;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEFG.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEFGInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\nimport React from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport MVButton from '../../controls/MVButton';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nfunction MVSidebarEFG(props) {\n\n    const efgint = useEFGInterface();\n\n    console.log('[MVSidebarEFG rendered]');\n\n    var has_efg = false;\n    if (props.show) {\n        has_efg = efgint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='Electric Field Gradient'>\n        <div className={chainClasses('mv-sidebar-block', has_efg? '' : 'hidden')}>\n             <MVCheckBox onCheck={(v) => { efgint.hasEllipsoids = v; }} checked={ efgint.hasEllipsoids } color={'var(--efg-color-2)'}>Ellipsoids</MVCheckBox>\n             <MVRange min={0.1} max={10.0} step={0.05} value={efgint.ellipsoidScale} color={'var(--efg-color-2)'}\n                      onChange={(s) => { efgint.ellipsoidScale = s; }} disabled={!efgint.hasEllipsoids}>Ellipsoid scale</MVRange>\n             <MVButton onClick={() => { efgint.ellipsoidScale = 0; }} disabled={!efgint.hasEllipsoids}>Set auto scale</MVButton>\n             <MVRadioGroup label='Show labels' onSelect={(v) => { efgint.labelsMode = v; }} selected={efgint.labelsMode} name='efg_label_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='aniso'>Anisotropy (au)</MVRadioButton>\n                <MVRadioButton value='asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='Q'>Quadrupole Coupling (kHz)</MVRadioButton>\n             </MVRadioGroup>\n             <MVRadioGroup label='Use color scale' onSelect={(v) => { efgint.colorScaleType = v; }} selected={ efgint.colorScaleType } disabled={!efgint.colorScaleAvailable}\n                           name='efg_cscale_radio' color={'var(--efg-color-2)'}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='efg_aniso'>Anisotropy</MVRadioButton>\n                <MVRadioButton value='efg_asymm'>Asymmetry</MVRadioButton>\n                <MVRadioButton value='efg_Q'>Quadrupole Coupling</MVRadioButton>\n             </MVRadioGroup>\n        </div>\n        <div className={chainClasses('mv-warning-noms', has_efg? 'hidden' : '')}>No EFG data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEFG;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarDip.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useDipInterface } from '../store';\n\n\nfunction MVSidebarDip(props) {\n\n    const dipint = useDipInterface();\n\n    console.log('[MVSidebarDip rendered]');\n\n    const intRef = useRef();\n    intRef.current = dipint;\n\n    useEffect(() => {\n        let dipint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && dipint.isOn) {\n            dipint.bind();\n        }\n        else {\n            dipint.unbind();\n        }\n\n    }, [props.show, dipint.isOn]);\n\n    return (<MagresViewSidebar show={props.show} title='Dipolar couplings'>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.isOn = v; }} checked={ dipint.isOn } >Show dipolar couplings</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-block'>\n            <p>\n                Click on an atom to show all dipolar couplings in a radius.\n                (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n            </p>\n             <MVRange min={1.0} max={20.0} step={0.05} value={dipint.radius} color={'var(--dip-color-3)'}\n                      onChange={(s) => { dipint.radius = s; }}>Selection radius</MVRange>\n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.showSphere = v; }} checked={ dipint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n             <MVCheckBox color='var(--dip-color-3)' onCheck={(v) => { dipint.homonuclearOnly = v; }} checked={ dipint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarDip;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarJCoup.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVRange from '../../controls/MVRange';\nimport { useJCoupInterface } from '../store';\nimport { chainClasses } from '../../utils';\n\n\nfunction MVSidebarJCoup(props) {\n\n    const jcint = useJCoupInterface();\n\n    console.log('[MVSidebarJCoup rendered]');\n\n    const intRef = useRef();\n    intRef.current = jcint;\n\n    useEffect(() => {\n        let jcint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show && jcint.isOn) {\n            jcint.bind();\n        }\n        else {\n            jcint.unbind();\n        }\n\n    }, [props.show, jcint.isOn]);\n\n    var has_jc = false;\n    if (props.show) {\n        has_jc = jcint.hasData;\n    }\n\n    return (<MagresViewSidebar show={props.show} title='J couplings'>\n        <div className={has_jc? '' : 'hidden'}>\n            <div className='mv-sidebar-block'>\n                <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.isOn = v; }} checked={ jcint.isOn } >Show J couplings</MVCheckBox>\n            </div>\n            <div className='mv-sidebar-block'>\n                <p>\n                    Click on an atom to show all dipolar couplings in a radius.\n                    (Note: to avoid performance issues, changing the radius of selection has effect only from the next click)\n                </p>\n                 <MVRange min={1.0} max={20.0} step={0.05} value={jcint.radius} color={'var(--jcoup-color-3)'}\n                          onChange={(s) => { jcint.radius = s; }}>Selection radius</MVRange>\n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.showSphere = v; }} checked={ jcint.showSphere } >Show radius as a sphere</MVCheckBox>                        \n                 <MVCheckBox color='var(--jcoup-color-3)' onCheck={(v) => { jcint.homonuclearOnly = v; }} checked={ jcint.homonuclearOnly } >Show only homonuclear couplings</MVCheckBox>                        \n            </div>\n        </div>\n         <div className={chainClasses('mv-warning-noms', has_jc? 'hidden': '')}>No ISC data found</div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarJCoup;","import './MVSwitch.css';\nimport { chainClasses } from '../utils';\n\nfunction MVSwitch(props) {\n\n    const style = {\n        '--color-true': props.colorTrue || 'var(--ok-color-2)',\n        '--color-false': props.colorFalse || 'var(--err-color-2)'\n    };\n\n    const onClick = props.onClick || (() => {});\n\n    return (<div className={chainClasses('mv-control mv-switch', props.on? 'mv-switch-true' : 'mv-switch-false')} \n        style={style} onClick={onClick}>\n        <div className='mv-switch-thumb'></div>\n    </div>);\n}\n\nexport default MVSwitch;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarEuler.css';\n\nimport { useRef, useEffect } from 'react';\n\nimport MagresViewSidebar from './MagresViewSidebar';\nimport { useEulerInterface } from '../store';\nimport { saveContents, copyContents } from '../../utils';\n\nimport MVSwitch from '../../controls/MVSwitch';\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport { FaCopy } from 'react-icons/fa';\n\nfunction MVSidebarEuler(props) {\n\n    const eulint = useEulerInterface();\n\n    console.log('[MVSidebarEuler rendered]');\n\n    const intRef = useRef();\n    intRef.current = eulint;\n\n    useEffect(() => {\n        let eulint = intRef.current;\n\n        // Only keep events bound when this sidebar is visible!\n        if (props.show) {\n            eulint.bind();\n        }\n        else {\n            eulint.unbind();\n        }\n\n    }, [props.show]);\n\n    const otherTensor = {\n        ms: 'efg',\n        efg: 'ms'\n    };\n\n    // Round values\n    let a = eulint.alpha;\n    let b = eulint.beta;\n    let c = eulint.gamma;\n\n    if (a !== 'N/A') {\n        // It's a number\n        a = a.toFixed(2);\n        b = b.toFixed(2);\n        c = c.toFixed(2);\n    }\n\n    const hasSel = (eulint.atomA && eulint.atomB);\n\n    return (<MagresViewSidebar show={props.show} title='Euler angles'>\n        <p>\n            Left (right) click on atoms to pick atom A (B). Choose with the \n            switches below which NMR tensor you care about for each, and\n            the Euler angles between them will be automatically printed out.\n        </p>\n        <div className='mv-sidebar-block'>\n            <h3>Atom A</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelA}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorA === 'efg' } onClick={() => { eulint.tensorA = otherTensor[eulint.tensorA]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Atom B</h3>\n            <div className='mv-euler-agrid'>\n                <span className='header'>Label:</span>\n                <span>{eulint.atomLabelB}</span>\n                <div className='mv-euler-agrid-switch'>\n                    <span>MS</span>\n                    <MVSwitch on={ eulint.tensorB === 'efg' } onClick={() => { eulint.tensorB = otherTensor[eulint.tensorB]; }} \n                              colorFalse='var(--ms-color-2)' colorTrue='var(--efg-color-2)'/>\n                    <span>EFG</span>\n                </div>\n            </div>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Convention</h3>\n            <MVCustomSelect selected={eulint.convention} onSelect={(v) => { eulint.convention = v; }}>\n                <MVCustomSelectOption value='zyz'>ZYZ</MVCustomSelectOption>\n                <MVCustomSelectOption value='zxz'>ZXZ</MVCustomSelectOption>\n            </MVCustomSelect>\n        </div>\n        <div className='mv-sidebar-block'>\n            <h3>Angles</h3>\n            <table className='mv-eul-results'>\n                <thead>\n                    <tr>\n                        <td>Alpha</td>\n                        <td>Beta</td>\n                        <td>Gamma</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{a}&deg;</td>\n                        <td>{b}&deg;</td>\n                        <td>{c}&deg;</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { copyContents(eulint.txtReport()); }} disabled={!hasSel}><FaCopy />&nbsp;Copy to clipboard</MVButton>            \n        </div>\n        <div className='mv-sidebar-block'>\n            <MVButton onClick={() => { saveContents('data:,' + eulint.txtSelfAngleTable(), 'eulerTable.txt'); }}  disabled={!(eulint.hasMSData && eulint.hasEFGData)}>\n                Download table of MS-to-EFG angles\n            </MVButton>            \n        </div>\n\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarEuler;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarPlots.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport MVFile from '../../controls/MVFile';\nimport MVButton from '../../controls/MVButton';\nimport MVCheckBox from '../../controls/MVCheckBox';\nimport MVText from '../../controls/MVText';\nimport MVRadioButton, { MVRadioGroup } from '../../controls/MVRadioButton';\n\nimport { usePlotsInterface } from '../store';\n\nfunction MVSidebarPlots(props) {\n\n    const pltint = usePlotsInterface();\n    const formats = '.png,.jpg,.jpeg';\n\n    function setMinX(v) {\n        pltint.setRange(v);\n    }\n\n    function setMaxX(v) {\n        pltint.setRange(null, v);\n    }\n\n    function setMinY(v) {\n        pltint.setRange(v, null, 'y');\n    }\n\n    function setMaxY(v) {\n        pltint.setRange(null, v, 'y');\n    }\n\n    return (<MagresViewSidebar show={props.show} title=\"Spectral plots\">\n        \n        <div className='mv-sidebar-block'>\n            <MVRadioGroup label='Plot mode' selected={pltint.mode} onSelect={(v) => {pltint.mode = v}}>\n                <MVRadioButton value='none'>None</MVRadioButton>\n                <MVRadioButton value='bars-1d'>1D, bars</MVRadioButton>\n                <MVRadioButton value='line-1d'>1D, Lorentzian broadening</MVRadioButton>\n            </MVRadioGroup>\n        </div>\n        <div className='mv-sidebar-block'>\n            <MVCheckBox checked={pltint.useRefTable} onCheck={(v) => { pltint.useRefTable = v; }}>Show chemical shifts (use references)</MVCheckBox>\n        </div>\n        <div className='mv-sidebar-block'>\n            Background spectrum image\n            <MVFile filetypes={formats} onSelect={(f) => { pltint.loadBkgImage(f); }} notext={false} multiple={false}/>\n            <MVButton onClick={() => { pltint.clearBkgImage(); }}>Clear image</MVButton>\n        </div>\n        <div className='mv-sidebar-grid'>\n            <MVCheckBox checked={pltint.showAxes} onCheck={(v) => { pltint.showAxes = v; }}>Show axes</MVCheckBox>\n            <MVCheckBox checked={pltint.showGrid} onCheck={(v) => { pltint.showGrid = v; }}>Show grid</MVCheckBox>\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        X range: &nbsp;\n            <MVText size='5' value={pltint.rangeX[0]} onChange={setMinX} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; to &nbsp; \n            <MVText size='5' value={pltint.rangeX[1]} onChange={setMaxX} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' />\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        Y range: &nbsp;\n            <MVText size='5' value={pltint.rangeY[0]} onChange={setMinY} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; to &nbsp; \n            <MVText size='5' value={pltint.rangeY[1]} onChange={setMaxY} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' />\n        </div>\n        <span className='sep-1' />\n        <div className='mv-sidebar-row' style={{alignItems: 'center'}}>\n        Peak width: &nbsp;\n            <MVText size='3' value={pltint.peakW} onChange={(v) => { pltint.peakW = v; }} filter='[\\-]*[0-9]*(?:\\.[0-9]*)?' /> &nbsp; ppm\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarPlots;\n","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './MVSidebarFiles.css';\n\nimport MagresViewSidebar from './MagresViewSidebar';\n\nimport MVButton from '../../controls/MVButton';\nimport MVCustomSelect, { MVCustomSelectOption } from '../../controls/MVCustomSelect';\nimport MVIcon from '../../icons/MVIcon';\n\nimport { useFilesInterface } from '../store';\nimport { saveContents } from '../../utils';\n\nconst saveFile = (c, fn) => { saveContents('data:,' + c, fn); }\n\nfunction MVSidebarFiles(props) {\n\n    const fileint = useFilesInterface();\n\n    return (<MagresViewSidebar title='Report files' show={props.show}>\n        <div className='mv-sidebar-block'>\n            <h3>File type:</h3>\n            <MVCustomSelect selected={fileint.fileType} onSelect={(v) => { fileint.fileType = v; }}>\n                <MVCustomSelectOption value='ms' icon={<MVIcon icon='ms' color='var(--ms-color-3)'/>}>MS table</MVCustomSelectOption>\n                <MVCustomSelectOption value='efg' icon={<MVIcon icon='efg' color='var(--efg-color-3)'/>}>EFG table</MVCustomSelectOption>\n                <MVCustomSelectOption value='dip' icon={<MVIcon icon='dip' color='var(--dip-color-3)'/>}>Dipolar coupling table</MVCustomSelectOption>\n                <MVCustomSelectOption value='isc' icon={<MVIcon icon='jcoup' color='var(--jcoup-color-3)'/>}>J coupling table</MVCustomSelectOption>\n            </MVCustomSelect>\n            <MVButton onClick={() => { saveFile(fileint.generateFile(), fileint.fileName); }} disabled={!fileint.fileValid}>Save file</MVButton>\n        </div>\n    </MagresViewSidebar>);\n}\n\nexport default MVSidebarFiles;","import './ImageLayer.css';\n\nimport { useState } from 'react';\n\nimport { chainClasses } from '../../utils';\n\n// Size of the markers\nconst mW = 5;\nconst mH = 20;\n\n// Click sensitivity radius\nconst mR2 = Math.pow((mW+mH)/2.0, 2);\n\nfunction ImageLayer(props) {\n\n    // The state is used to check which, if any, of the indicators is selected\n    const [state, setState] = useState(-1);\n\n    const margins = props.margins || {};\n    const image = props.image || {};\n\n    // Indicator positions\n    const indPos = [\n        [margins.left, image.height-margins.bottom],\n        [margins.left, margins.top],\n        [image.width - margins.right, image.height-margins.bottom]\n    ];\n\n    const setMargins = props.setMargins || (() => {});\n\n    // Click detection\n    function onClick(e) {\n\n        let x = e.clientX;\n        let y = e.clientY;\n        let selind = -1;\n\n\n        if (e.target.nodeName === 'image') {\n            // If we clicked on the image, we can get the absolute position in\n            // the image's frame\n            const brect = e.target.getBoundingClientRect();\n            x -= brect.left;\n            y -= brect.top;            \n\n            for (let i = 0; i < indPos.length; ++i) {\n                let [iPx, iPy] = indPos[i];\n                let r2 = Math.pow(x-iPx, 2.0) + Math.pow(y-iPy, 2.0);\n                if (r2 <= mR2) {\n                    selind = i;\n                    break;\n                }\n            }\n        }\n        else if (e.target.nodeName === 'rect') {\n            // We clicked on an indicator\n            const cname = e.target.parentElement.className.baseVal.trim();\n            // Which one?\n            selind = ['img-margin-origin', 'img-margin-top', 'img-margin-right'].indexOf(cname);\n            if (selind >= 0)\n                [x, y] = indPos[selind];\n            else {\n                // Something weird has happened, ignore click\n                return;\n            }\n        }\n\n        if (state < 0) {\n            // Nothing's selected; select\n            setState(selind);\n        }\n        else {\n            if (selind === -1) {\n                // Can't overlap...\n                switch(state) {\n                    case 0:\n                        // Origin\n                        setMargins({\n                            left: x,\n                            bottom: image.height-y\n                        });\n                        break;\n                    case 1:\n                        // Top\n                        setMargins({\n                            top: y\n                        });\n                        break;\n                    case 2:\n                        // Right\n                        setMargins({\n                            right: image.width-x\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n            setState(-1);\n        }\n    }\n\n\n    return (<g className='img-layer' transform={'translate(-' + margins.left + ',-' + margins.top + ')'} onClick={onClick}>\n        <image href={image.url} />\n        <g className='img-layer-margins'>\n            <g className={chainClasses('img-margin-origin', (state === 0? 'selected' : ''))} transform={'translate(' + indPos[0][0] + ',' + indPos[0][1] + ')'}>\n                <rect x={-mW/2.0} y={-mH/2.0} width={mW} height={mH} />\n                <rect x={-mH/2.0} y={-mW/2.0} width={mH} height={mW} />\n            </g>\n            <g className={chainClasses('img-margin-top', (state === 1? 'selected' : ''))} transform={'translate(' + indPos[1][0] + ',' + indPos[1][1] + ')'}>\n                <rect x={-mW/2.0} y={0} width={mW} height={mH/1.5} />\n                <rect x={-mH/2.0} y={-mW/2.0} width={mH} height={mW} />\n            </g>\n            <g className={chainClasses('img-margin-right', (state === 2? 'selected' : ''))} transform={'translate(' + indPos[2][0] + ',' + indPos[2][1] + ')'}>\n                <rect x={-mW/2.0} y={-mH/2.0} width={mW} height={mH} />\n                <rect x={-mH/1.5} y={-mW/2.0} width={mH/1.5} height={mW} />\n            </g>\n        </g>\n    </g>)\n}\n\nexport default ImageLayer;","import _ from 'lodash';\n\nimport { Line } from '@nivo/line'\n\nimport { useState } from 'react';\n\nimport MVModal from '../../controls/MVModal';\nimport { usePlotsInterface } from '../store';\n\nimport ImageLayer from './ImageLayer';\n\nfunction MVPlot1D(props) {\n\n    // State used for margins\n    const [state, setState] = useState({\n        top: 20,\n        left: 50,\n        right: 20,\n        bottom: 50\n    });\n\n    const pltint = usePlotsInterface();\n\n    const image = pltint.bkgImage;\n\n    let width = 640;\n    let height = 480;\n\n    if (image) {\n        width = image.width;\n        height = image.height;\n    }\n\n    function setMargins(data={}) {\n        setState({\n            ...state,\n            ...data\n        });\n    }\n\n    function imgLayer() {\n\n        if (image) {\n            return <ImageLayer image={image} margins={state} setMargins={setMargins} />\n        }\n\n        return null;\n    }\n\n    let layers = [imgLayer, 'grid', 'markers', 'axes', 'areas', 'crosshair', \n                  'lines', 'points', 'slices', 'mesh', 'legends'];\n\n    if (!pltint.showGrid)\n        layers = _.without(layers, 'grid');\n \n    if (!pltint.showAxes)\n        layers = _.without(layers, 'axes');\n\n    const show = (pltint.mode !== 'none');\n\n    let lineprops = {};\n    // Custom mode-dependent properties\n    switch (pltint.mode) {\n        case 'line-1d':\n            lineprops = {\n                enablePoints: false                \n            }\n            break;\n        case 'bars-1d':\n            lineprops = {\n                pointSymbol: ((p) => {\n                    return (<rect width={p.size} height={height-(state.top+state.bottom)} color={p.borderColor} \n                                  fill={p.color} strokeWidth={p.borderWidth}></rect>);\n                }),\n                pointLabelYOffset: 0,\n                lineWidth: 0\n            };\n            break;\n        default: \n            break;\n    }\n\n    return (<MVModal title=\"Spectral 1D plot\" display={show}\n        noFooter={true} resizable={true} draggable={true} onClose={() => { pltint.mode = 'none'; }}>\n        <div style={{backgroundColor: 'white', color: 'black'}}>\n        {show?\n            <Line\n            {...lineprops}\n            width={width}\n            height={height} \n            colors={{ scheme: 'category10' }}\n            data={pltint.data}\n            margin={state}\n            xScale={{\n                type: 'linear',\n                min: pltint.floatRangeX[0],\n                max: pltint.floatRangeX[1]\n            }}\n            yScale={{\n                type: 'linear',\n                min: pltint.floatRangeY[0],\n                max: pltint.floatRangeY[1]\n            }}\n            layers={layers}\n            />           \n        : null }\n        </div>\n    </MVModal>);\n}\n\nexport default MVPlot1D;","/**\n * MagresView 2.0\n *\n * A web interface to visualize and interact with computed NMR data in the Magres\n * file format.\n *\n * Author: Simone Sturniolo\n *\n * Copyright 2022 Science and Technology Facilities Council\n * This software is distributed under the terms of the MIT License\n * Please refer to the file LICENSE for the text of the license\n * \n */\n\nimport './themes.css';\nimport '../controls/controls.css';\nimport './MagresViewApp.css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { chainClasses } from '../utils';\nimport { useAppInterface } from './store';\n\nimport MagresViewHeader from './MagresViewHeader';\nimport MagresViewScreenshot from './MagresViewScreenshot';\n\nimport MVSidebarLoad from './sidebars/MVSidebarLoad';\nimport MVSidebarSelect from './sidebars/MVSidebarSelect';\nimport MVSidebarMS from './sidebars/MVSidebarMS';\nimport MVSidebarEFG from './sidebars/MVSidebarEFG';\nimport MVSidebarDip from './sidebars/MVSidebarDip';\nimport MVSidebarJCoup from './sidebars/MVSidebarJCoup';\nimport MVSidebarEuler from './sidebars/MVSidebarEuler';\nimport MVSidebarPlots from './sidebars/MVSidebarPlots';\nimport MVSidebarFiles from './sidebars/MVSidebarFiles';\n\nimport MVPlot1D from './plot/MVPlot1D';\n\nfunction MagresViewPage() {\n\n    const [hovered, setHovered] = useState(false);\n\n    let appint = useAppInterface();\n\n    const appRef = useRef(appint);\n\n    useEffect(() => {\n        appRef.current.initialise('#mv-appwindow');\n    }, []);\n\n\n    // Handling the dragging events\n    function handleDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    function handleDragEnter(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(true);        \n    }\n\n    function handleDragLeave(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setHovered(false);        \n    }\n\n    function handleDrop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            appint.load(e.dataTransfer.files)\n            e.dataTransfer.clearData()\n        }        \n        setHovered(false);\n    }\n\n    return (<div className={chainClasses('mv-main-page', 'theme-' + appint.theme, hovered? 'has-drag' : '' )}\n                 onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={handleDrop}>\n                <MagresViewHeader />\n                <MVSidebarLoad show={appint.sidebar === 'load'} />\n                <MVSidebarSelect show={appint.sidebar === 'select'} />\n                <MVSidebarMS show={appint.sidebar === 'ms'} />\n                <MVSidebarEFG show={appint.sidebar === 'efg'} />\n                <MVSidebarDip show={appint.sidebar === 'dip'} />\n                <MVSidebarJCoup show={appint.sidebar === 'jcoup'} />\n                <MVSidebarEuler show={appint.sidebar === 'euler'} />\n                <MVSidebarPlots show={appint.sidebar === 'plots'} />\n                <MVSidebarFiles show={appint.sidebar === 'files'} />\n                <div id='mv-appwindow' className='mv-background'/>\n                <MagresViewScreenshot />\n                <div className='drag-overlay' />\n            { /* Modals */ }\n                <MVPlot1D />\n            </div>);\n}\n\nfunction MagresViewApp() {\n\n    return (\n        <div className='mv-main-app'>\n            <MagresViewPage />\n        </div>\n    );\n}\n\nexport default MagresViewApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport MagresViewApp from './core/MagresViewApp';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport magresStore from './core/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={magresStore}>\n      <MagresViewApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}